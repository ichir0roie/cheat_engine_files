<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"fly"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-29
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+2F934C)
define(bytes,F3 0F 5C C1 0F 2F C2)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+2F934C)

label(code)
label(return)

newmem:

code:
  //subss xmm0,xmm1
  comiss xmm0,xmm2
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // subss xmm0,xmm1
  // comiss xmm0,xmm2

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+2F934C

EDF5.exe+2F931C: C3                             - ret 
EDF5.exe+2F931D: 41 83 F8 01                    - cmp r8d,01
EDF5.exe+2F9321: 75 08                          - jne EDF5.exe+2F932B
EDF5.exe+2F9323: F3 0F 59 89 F4 1C 00 00        - mulss xmm1,[rcx+00001CF4]
EDF5.exe+2F932B: F3 0F 10 81 0C 02 00 00        - movss xmm0,[rcx+0000020C]
EDF5.exe+2F9333: 0F 2F C8                       - comiss xmm1,xmm0
EDF5.exe+2F9336: 72 0C                          - jb EDF5.exe+2F9344
EDF5.exe+2F9338: C7 81 0C 02 00 00 00 00 00 00  - mov [rcx+0000020C],00000000
EDF5.exe+2F9342: EB 24                          - jmp EDF5.exe+2F9368
EDF5.exe+2F9344: F3 0F 10 91 08 02 00 00        - movss xmm2,[rcx+00000208]
// ---------- INJECTING HERE ----------
EDF5.exe+2F934C: F3 0F 5C C1                    - subss xmm0,xmm1
// ---------- DONE INJECTING  ----------
EDF5.exe+2F9350: 0F 2F C2                       - comiss xmm0,xmm2
EDF5.exe+2F9353: F3 0F 11 81 0C 02 00 00        - movss [rcx+0000020C],xmm0
EDF5.exe+2F935B: 76 08                          - jna EDF5.exe+2F9365
EDF5.exe+2F935D: F3 0F 11 91 0C 02 00 00        - movss [rcx+0000020C],xmm2
EDF5.exe+2F9365: 0F 28 C1                       - movaps xmm0,xmm1
EDF5.exe+2F9368: 0F 2F C8                       - comiss xmm1,xmm0
EDF5.exe+2F936B: 76 0A                          - jna EDF5.exe+2F9377
EDF5.exe+2F936D: C7 81 00 02 00 00 01 00 00 00  - mov [rcx+00000200],00000001
EDF5.exe+2F9377: C3                             - ret 
EDF5.exe+2F9378: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"weapon"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-29
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+393090)
define(bytes,01 91 E8 08 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+393090)

label(code)
label(return)

newmem:

code:
  //add [rcx+000008E8],edx
  add [rcx+000008E8],ff
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // add [rcx+000008E8],edx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+393090

EDF5.exe+393086: CC                    - int 3 
EDF5.exe+393087: CC                    - int 3 
EDF5.exe+393088: CC                    - int 3 
EDF5.exe+393089: CC                    - int 3 
EDF5.exe+39308A: CC                    - int 3 
EDF5.exe+39308B: CC                    - int 3 
EDF5.exe+39308C: CC                    - int 3 
EDF5.exe+39308D: CC                    - int 3 
EDF5.exe+39308E: CC                    - int 3 
EDF5.exe+39308F: CC                    - int 3 
// ---------- INJECTING HERE ----------
EDF5.exe+393090: 01 91 E8 08 00 00     - add [rcx+000008E8],edx
// ---------- DONE INJECTING  ----------
EDF5.exe+393096: 4C 8B C1              - mov r8,rcx
EDF5.exe+393099: 83 B9 E8 08 00 00 00  - cmp dword ptr [rcx+000008E8],00
EDF5.exe+3930A0: 7F 68                 - jg EDF5.exe+39310A
EDF5.exe+3930A2: 48 8B 81 C0 00 00 00  - mov rax,[rcx+000000C0]
EDF5.exe+3930A9: 48 63 88 18 02 00 00  - movsxd  rcx,dword ptr [rax+00000218]
EDF5.exe+3930B0: 83 F9 FF              - cmp ecx,-01
EDF5.exe+3930B3: 75 05                 - jne EDF5.exe+3930BA
EDF5.exe+3930B5: 0F 57 C0              - xorps xmm0,xmm0
EDF5.exe+3930B8: EB 1A                 - jmp EDF5.exe+3930D4
EDF5.exe+3930BA: 83 F9 07              - cmp ecx,07
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"weapon box"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-30
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+1990F4)
define(bytes,FF 86 88 0A 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+1990F4)

label(code)
label(return)

newmem:

code:
  inc [rsi+00000A88]
  mov [rsi+00000A88],fff
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // inc [rsi+00000A88]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+1990F4

EDF5.exe+1990D2: FF C0              - inc eax
EDF5.exe+1990D4: FF 86 8C 0A 00 00  - inc [rsi+00000A8C]
EDF5.exe+1990DA: EB 1E              - jmp EDF5.exe+1990FA
EDF5.exe+1990DC: E8 FF 15 00 00     - call EDF5.exe+19A6E0
EDF5.exe+1990E1: 84 C0              - test al,al
EDF5.exe+1990E3: 74 1B              - je EDF5.exe+199100
EDF5.exe+1990E5: 8B 86 84 0A 00 00  - mov eax,[rsi+00000A84]
EDF5.exe+1990EB: 3D 00 04 00 00     - cmp eax,00000400
EDF5.exe+1990F0: 73 0E              - jae EDF5.exe+199100
EDF5.exe+1990F2: FF C0              - inc eax
// ---------- INJECTING HERE ----------
EDF5.exe+1990F4: FF 86 88 0A 00 00  - inc [rsi+00000A88]
// ---------- DONE INJECTING  ----------
EDF5.exe+1990FA: 89 86 84 0A 00 00  - mov [rsi+00000A84],eax
EDF5.exe+199100: 48 8B 5C 24 40     - mov rbx,[rsp+40]
EDF5.exe+199105: 48 8B 74 24 48     - mov rsi,[rsp+48]
EDF5.exe+19910A: 0F 28 74 24 20     - movaps xmm6,[rsp+20]
EDF5.exe+19910F: 48 83 C4 30        - add rsp,30
EDF5.exe+199113: 5F                 - pop rdi
EDF5.exe+199114: C3                 - ret 
EDF5.exe+199115: CC                 - int 3 
EDF5.exe+199116: CC                 - int 3 
EDF5.exe+199117: CC                 - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"jump"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-30
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+2E4D14)
define(bytes,FF 8B A8 1B 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+2E4D14)

label(code)
label(return)

newmem:

code:
  //dec [rbx+00001BA8]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // dec [rbx+00001BA8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+2E4D14

EDF5.exe+2E4CE1: 83 BB 20 16 00 00 02           - cmp dword ptr [rbx+00001620],02
EDF5.exe+2E4CE8: 0F 8D AB 01 00 00              - jnl EDF5.exe+2E4E99
EDF5.exe+2E4CEE: 48 89 BC 24 90 00 00 00        - mov [rsp+00000090],rdi
EDF5.exe+2E4CF6: 48 85 C9                       - test rcx,rcx
EDF5.exe+2E4CF9: 74 12                          - je EDF5.exe+2E4D0D
EDF5.exe+2E4CFB: 48 8B 01                       - mov rax,[rcx]
EDF5.exe+2E4CFE: B2 01                          - mov dl,01
EDF5.exe+2E4D00: 66 89 A9 EC 0B 00 00           - mov [rcx+00000BEC],bp
EDF5.exe+2E4D07: FF 90 88 00 00 00              - call qword ptr [rax+00000088]
EDF5.exe+2E4D0D: 0F 10 83 30 0E 00 00           - movups xmm0,[rbx+00000E30]
// ---------- INJECTING HERE ----------
EDF5.exe+2E4D14: FF 8B A8 1B 00 00              - dec [rbx+00001BA8]
// ---------- DONE INJECTING  ----------
EDF5.exe+2E4D1A: 48 8D BB 90 1B 00 00           - lea rdi,[rbx+00001B90]
EDF5.exe+2E4D21: 48 89 AB 18 16 00 00           - mov [rbx+00001618],rbp
EDF5.exe+2E4D28: 0F 28 D0                       - movaps xmm2,xmm0
EDF5.exe+2E4D2B: C7 83 20 16 00 00 02 00 00 00  - mov [rbx+00001620],00000002
EDF5.exe+2E4D35: 0F 59 D2                       - mulps xmm2,xmm2
EDF5.exe+2E4D38: C7 83 A0 1B 00 00 F0 00 00 00  - mov [rbx+00001BA0],000000F0
EDF5.exe+2E4D42: 0F 11 07                       - movups [rdi],xmm0
EDF5.exe+2E4D45: F3 0F 10 05 03 14 C0 00        - movss xmm0,[EDF5.exe+EE6150]
EDF5.exe+2E4D4D: 0F 28 CA                       - movaps xmm1,xmm2
EDF5.exe+2E4D50: 0F C6 CA 55                    - shufps xmm1,xmm2,55
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"dash"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-30
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+2E54DE)
define(bytes,89 83 BC 1B 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+2E54DE)

label(code)
label(return)

newmem:

code:
  //mov [rbx+00001BBC],eax
  mov [rbx+00001BBC],1
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rbx+00001BBC],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+2E54DE

EDF5.exe+2E54A1: 48 8B 83 D0 09 00 00              - mov rax,[rbx+000009D0]
EDF5.exe+2E54A8: C7 84 01 38 01 00 00 00 00 80 3F  - mov [rcx+rax+00000138],3F800000
EDF5.exe+2E54B3: 8B 83 BC 1B 00 00                 - mov eax,[rbx+00001BBC]
EDF5.exe+2E54B9: F3 0F 11 B3 18 0F 00 00           - movss [rbx+00000F18],xmm6
EDF5.exe+2E54C1: F3 0F 11 B3 1C 0F 00 00           - movss [rbx+00000F1C],xmm6
EDF5.exe+2E54C9: 0F 28 B4 24 80 00 00 00           - movaps xmm6,[rsp+00000080]
EDF5.exe+2E54D1: C6 83 C0 1B 00 00 00              - mov byte ptr [rbx+00001BC0],00
EDF5.exe+2E54D8: 85 C0                             - test eax,eax
EDF5.exe+2E54DA: 7E 08                             - jle EDF5.exe+2E54E4
EDF5.exe+2E54DC: FF C8                             - dec eax
// ---------- INJECTING HERE ----------
EDF5.exe+2E54DE: 89 83 BC 1B 00 00                 - mov [rbx+00001BBC],eax
// ---------- DONE INJECTING  ----------
EDF5.exe+2E54E4: C7 83 B0 1B 00 00 5A 00 00 00     - mov [rbx+00001BB0],0000005A
EDF5.exe+2E54EE: C7 83 70 1B 00 00 00 00 34 43     - mov [rbx+00001B70],43340000
EDF5.exe+2E54F8: 83 8B A8 11 00 00 40              - or dword ptr [rbx+000011A8],40
EDF5.exe+2E54FF: C7 83 38 17 00 00 00 00 80 40     - mov [rbx+00001738],40800000
EDF5.exe+2E5509: 48 8B 9C 24 B0 00 00 00           - mov rbx,[rsp+000000B0]
EDF5.exe+2E5511: 48 81 C4 90 00 00 00              - add rsp,00000090
EDF5.exe+2E5518: 5D                                - pop rbp
EDF5.exe+2E5519: C3                                - ret 
EDF5.exe+2E551A: 83 FA 01                          - cmp edx,01
EDF5.exe+2E551D: 0F 85 F7 00 00 00                 - jne EDF5.exe+2E561A
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"armor box"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-30
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+1990D4)
define(bytes,FF 86 8C 0A 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+1990D4)

label(code)
label(return)

newmem:

code:
  //inc [rsi+00000A8C]
  mov [rsi+00000A8C],fff
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // inc [rsi+00000A8C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+1990D4

EDF5.exe+1990B2: 0F 28 CE           - movaps xmm1,xmm6
EDF5.exe+1990B5: E8 86 2E 14 00     - call EDF5.exe+2DBF40
EDF5.exe+1990BA: EB 44              - jmp EDF5.exe+199100
EDF5.exe+1990BC: E8 1F 16 00 00     - call EDF5.exe+19A6E0
EDF5.exe+1990C1: 84 C0              - test al,al
EDF5.exe+1990C3: 74 3B              - je EDF5.exe+199100
EDF5.exe+1990C5: 8B 86 84 0A 00 00  - mov eax,[rsi+00000A84]
EDF5.exe+1990CB: 3D 00 04 00 00     - cmp eax,00000400
EDF5.exe+1990D0: 73 2E              - jae EDF5.exe+199100
EDF5.exe+1990D2: FF C0              - inc eax
// ---------- INJECTING HERE ----------
EDF5.exe+1990D4: FF 86 8C 0A 00 00  - inc [rsi+00000A8C]
// ---------- DONE INJECTING  ----------
EDF5.exe+1990DA: EB 1E              - jmp EDF5.exe+1990FA
EDF5.exe+1990DC: E8 FF 15 00 00     - call EDF5.exe+19A6E0
EDF5.exe+1990E1: 84 C0              - test al,al
EDF5.exe+1990E3: 74 1B              - je EDF5.exe+199100
EDF5.exe+1990E5: 8B 86 84 0A 00 00  - mov eax,[rsi+00000A84]
EDF5.exe+1990EB: 3D 00 04 00 00     - cmp eax,00000400
EDF5.exe+1990F0: 73 0E              - jae EDF5.exe+199100
EDF5.exe+1990F2: FF C0              - inc eax
EDF5.exe+1990F4: E9 07 6F E3 FF     - jmp 7FF73C3C0000
EDF5.exe+1990F9: 90                 - nop 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"fuel"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-06-30
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+36F553)
define(bytes,41 89 90 E8 08 00 00)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+36F553)

label(code)
label(return)

newmem:

code:
  //mov [r8+000008E8],edx
  mov [r8+000008E8],ffff
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [r8+000008E8],edx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+36F553

EDF5.exe+36F52B: 76 02                 - jna EDF5.exe+36F52F
EDF5.exe+36F52D: FF C2                 - inc edx
EDF5.exe+36F52F: 8B 86 B0 13 00 00     - mov eax,[rsi+000013B0]
EDF5.exe+36F535: 48 3B 86 58 04 00 00  - cmp rax,[rsi+00000458]
EDF5.exe+36F53C: 73 1C                 - jae EDF5.exe+36F55A
EDF5.exe+36F53E: 48 8D 0C C0           - lea rcx,[rax+rax*8]
EDF5.exe+36F542: 48 8B 86 48 04 00 00  - mov rax,[rsi+00000448]
EDF5.exe+36F549: 4C 8B 44 C8 10        - mov r8,[rax+rcx*8+10]
EDF5.exe+36F54E: 4D 85 C0              - test r8,r8
EDF5.exe+36F551: 74 07                 - je EDF5.exe+36F55A
// ---------- INJECTING HERE ----------
EDF5.exe+36F553: 41 89 90 E8 08 00 00  - mov [r8+000008E8],edx
// ---------- DONE INJECTING  ----------
EDF5.exe+36F55A: 48 83 C4 30           - add rsp,30
EDF5.exe+36F55E: 5E                    - pop rsi
EDF5.exe+36F55F: C3                    - ret 
EDF5.exe+36F560: 48 89 5C 24 08        - mov [rsp+08],rbx
EDF5.exe+36F565: 48 89 6C 24 10        - mov [rsp+10],rbp
EDF5.exe+36F56A: 48 89 74 24 18        - mov [rsp+18],rsi
EDF5.exe+36F56F: 48 89 7C 24 20        - mov [rsp+20],rdi
EDF5.exe+36F574: 41 56                 - push r14
EDF5.exe+36F576: 48 83 EC 40           - sub rsp,40
EDF5.exe+36F57A: 48 8B D9              - mov rbx,rcx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"no charge"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-07-01
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+39311D)
define(bytes,41 89 80 E8 08 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+39311D)

label(code)
label(return)

newmem:

code:
  //mov [r8+000008E8],eax
  mov [r8+000008E8],f
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [r8+000008E8],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+39311D

EDF5.exe+3930E1: 41 8B 80 40 0B 00 00        - mov eax,[r8+00000B40]
EDF5.exe+3930E8: 41 83 B8 A4 01 00 00 14     - cmp dword ptr [r8+000001A4],14
EDF5.exe+3930F0: F3 41 0F 11 80 A8 0B 00 00  - movss [r8+00000BA8],xmm0
EDF5.exe+3930F9: 0F 4C C1                    - cmovl eax,ecx
EDF5.exe+3930FC: 41 89 88 E8 08 00 00        - mov [r8+000008E8],ecx
EDF5.exe+393103: 41 89 80 40 0B 00 00        - mov [r8+00000B40],eax
EDF5.exe+39310A: 41 8B 80 E8 08 00 00        - mov eax,[r8+000008E8]
EDF5.exe+393111: 41 8B 88 D0 01 00 00        - mov ecx,[r8+000001D0]
EDF5.exe+393118: 3B C1                       - cmp eax,ecx
EDF5.exe+39311A: 0F 4F C1                    - cmovg eax,ecx
// ---------- INJECTING HERE ----------
EDF5.exe+39311D: 41 89 80 E8 08 00 00        - mov [r8+000008E8],eax
// ---------- DONE INJECTING  ----------
EDF5.exe+393124: C3                          - ret 
EDF5.exe+393125: CC                          - int 3 
EDF5.exe+393126: CC                          - int 3 
EDF5.exe+393127: CC                          - int 3 
EDF5.exe+393128: CC                          - int 3 
EDF5.exe+393129: CC                          - int 3 
EDF5.exe+39312A: CC                          - int 3 
EDF5.exe+39312B: CC                          - int 3 
EDF5.exe+39312C: CC                          - int 3 
EDF5.exe+39312D: CC                          - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"blade charge"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : EarthDefenceForce 5 for PC
  Version: 
  Date   : 2024-07-02
  Author : ichir

  This script does blah blah blah
}

define(address,"EDF5.exe"+39D679)
define(bytes,FF 83 C8 11 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"EDF5.exe"+39D679)

label(code)
label(return)

newmem:

code:
  //inc [rbx+000011C8]
  add [rbx+000011C8],f
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // inc [rbx+000011C8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: EDF5.exe+39D679

EDF5.exe+39D650: 8B 93 C8 11 00 00     - mov edx,[rbx+000011C8]
EDF5.exe+39D656: 48 8B CB              - mov rcx,rbx
EDF5.exe+39D659: E8 72 04 00 00        - call EDF5.exe+39DAD0
EDF5.exe+39D65E: B2 01                 - mov dl,01
EDF5.exe+39D660: 48 8B CB              - mov rcx,rbx
EDF5.exe+39D663: E8 98 6D FF FF        - call EDF5.exe+394400
EDF5.exe+39D668: 84 C0                 - test al,al
EDF5.exe+39D66A: 0F 85 2B 01 00 00     - jne EDF5.exe+39D79B
EDF5.exe+39D670: 40 38 BB DA 00 00 00  - cmp [rbx+000000DA],dil
EDF5.exe+39D677: 74 11                 - je EDF5.exe+39D68A
// ---------- INJECTING HERE ----------
EDF5.exe+39D679: FF 83 C8 11 00 00     - inc [rbx+000011C8]
// ---------- DONE INJECTING  ----------
EDF5.exe+39D67F: 48 8B 5C 24 50        - mov rbx,[rsp+50]
EDF5.exe+39D684: 48 83 C4 30           - add rsp,30
EDF5.exe+39D688: 5F                    - pop rdi
EDF5.exe+39D689: C3                    - ret 
EDF5.exe+39D68A: 48 8B CB              - mov rcx,rbx
EDF5.exe+39D68D: 48 89 74 24 40        - mov [rsp+40],rsi
EDF5.exe+39D692: E8 D9 E6 FE FF        - call EDF5.exe+38BD70
EDF5.exe+39D697: 84 C0                 - test al,al
EDF5.exe+39D699: 0F 84 85 00 00 00     - je EDF5.exe+39D724
EDF5.exe+39D69F: 39 BB B0 01 00 00     - cmp [rbx+000001B0],edi
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
