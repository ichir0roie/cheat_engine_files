<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"exp"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame_x64_rwdi.exe
  Version: 
  Date   : 2024-03-05
  Author : ichir

  This script does blah blah blah
}

define(address,"gamedll_ph_x64_rwdi.dll"+1342C26)
define(bytes,48 89 41 18 E8 B1 11 05 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"gamedll_ph_x64_rwdi.dll"+1342C26)

label(code)
label(return)

newmem:

code:
  add rax,fffff
  mov [rcx+18],rax
  call gamedll_ph_x64_rwdi.dll+1393DE0
  jmp return

address:
  jmp newmem
  nop 4
return:

[DISABLE]

address:
  db bytes
  // mov [rcx+18],rax
  // call gamedll_ph_x64_rwdi.dll+1393DE0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: gamedll_ph_x64_rwdi.dll+1342C26

gamedll_ph_x64_rwdi.dll+1342BFF: 4C 89 AC 24 A0 00 00 00        - mov [rsp+000000A0],r13
gamedll_ph_x64_rwdi.dll+1342C07: 4C 89 74 24 60                 - mov [rsp+60],r14
gamedll_ph_x64_rwdi.dll+1342C0C: 4C 3B F8                       - cmp r15,rax
gamedll_ph_x64_rwdi.dll+1342C0F: 77 06                          - ja gamedll_ph_x64_rwdi.dll+1342C17
gamedll_ph_x64_rwdi.dll+1342C11: 49 8D 04 17                    - lea rax,[r15+rdx]
gamedll_ph_x64_rwdi.dll+1342C15: EB 0D                          - jmp gamedll_ph_x64_rwdi.dll+1342C24
gamedll_ph_x64_rwdi.dll+1342C17: 49 8B EF                       - mov rbp,r15
gamedll_ph_x64_rwdi.dll+1342C1A: 48 C7 C0 FF FF FF FF           - mov rax,FFFFFFFFFFFFFFFF
gamedll_ph_x64_rwdi.dll+1342C21: 48 F7 D5                       - not rbp
gamedll_ph_x64_rwdi.dll+1342C24: 33 D2                          - xor edx,edx
// ---------- INJECTING HERE ----------
gamedll_ph_x64_rwdi.dll+1342C26: 48 89 41 18                    - mov [rcx+18],rax
// ---------- DONE INJECTING  ----------
gamedll_ph_x64_rwdi.dll+1342C2A: E8 B1 11 05 00                 - call gamedll_ph_x64_rwdi.dll+1393DE0
gamedll_ph_x64_rwdi.dll+1342C2F: 4C 8D 25 02 10 4C 01           - lea r12,[gamedll_ph_x64_rwdi.dll+2803C38]
gamedll_ph_x64_rwdi.dll+1342C36: 8B F0                          - mov esi,eax
gamedll_ph_x64_rwdi.dll+1342C38: 41 BD F8 FF FF FF              - mov r13d,FFFFFFF8
gamedll_ph_x64_rwdi.dll+1342C3E: 49 BE FF FF FF FF FF FF FF 1F  - mov r14,1FFFFFFFFFFFFFFF
gamedll_ph_x64_rwdi.dll+1342C48: 3B 47 0C                       - cmp eax,[rdi+0C]
gamedll_ph_x64_rwdi.dll+1342C4B: 0F 84 8D 00 00 00              - je gamedll_ph_x64_rwdi.dll+1342CDE
gamedll_ph_x64_rwdi.dll+1342C51: 8B D0                          - mov edx,eax
gamedll_ph_x64_rwdi.dll+1342C53: 48 8B CF                       - mov rcx,rdi
gamedll_ph_x64_rwdi.dll+1342C56: E8 75 23 06 00                 - call gamedll_ph_x64_rwdi.dll+13A4FD0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"gun ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame_x64_rwdi.exe
  Version: 
  Date   : 2024-03-09
  Author : ichir

  This script does blah blah blah
}

define(address,"gamedll_ph_x64_rwdi.dll"+6623E5)
define(bytes,89 03 48 8D 4B 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"gamedll_ph_x64_rwdi.dll"+6623E5)

label(code)
label(return)

newmem:

code:
  //mov [rbx],eax
  lea rcx,[rbx+30]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rbx],eax
  // lea rcx,[rbx+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: gamedll_ph_x64_rwdi.dll+6623E5

gamedll_ph_x64_rwdi.dll+6623C0: FF 90 20 0E 00 00        - call qword ptr [rax+00000E20]
gamedll_ph_x64_rwdi.dll+6623C6: 48 85 C0                 - test rax,rax
gamedll_ph_x64_rwdi.dll+6623C9: 74 7B                    - je gamedll_ph_x64_rwdi.dll+662446
gamedll_ph_x64_rwdi.dll+6623CB: 48 8B 43 30              - mov rax,[rbx+30]
gamedll_ph_x64_rwdi.dll+6623CF: 48 8D 4B 30              - lea rcx,[rbx+30]
gamedll_ph_x64_rwdi.dll+6623D3: FF 90 A8 03 00 00        - call qword ptr [rax+000003A8]
gamedll_ph_x64_rwdi.dll+6623D9: 33 D2                    - xor edx,edx
gamedll_ph_x64_rwdi.dll+6623DB: 8B CE                    - mov ecx,esi
gamedll_ph_x64_rwdi.dll+6623DD: 44 8B C0                 - mov r8d,eax
gamedll_ph_x64_rwdi.dll+6623E0: E8 7B 8B 25 01           - call gamedll_ph_x64_rwdi.dll+18BAF60
// ---------- INJECTING HERE ----------
gamedll_ph_x64_rwdi.dll+6623E5: 89 03                    - mov [rbx],eax
// ---------- DONE INJECTING  ----------
gamedll_ph_x64_rwdi.dll+6623E7: 48 8D 4B 30              - lea rcx,[rbx+30]
gamedll_ph_x64_rwdi.dll+6623EB: 48 8B 43 30              - mov rax,[rbx+30]
gamedll_ph_x64_rwdi.dll+6623EF: FF 90 68 02 00 00        - call qword ptr [rax+00000268]
gamedll_ph_x64_rwdi.dll+6623F5: 83 C0 E9                 - add eax,-17
gamedll_ph_x64_rwdi.dll+6623F8: 83 F8 13                 - cmp eax,13
gamedll_ph_x64_rwdi.dll+6623FB: 77 4B                    - ja gamedll_ph_x64_rwdi.dll+662448
gamedll_ph_x64_rwdi.dll+6623FD: 48 8D 0D FC DB 99 FF     - lea rcx,[gamedll_ph_x64_rwdi.dll]
gamedll_ph_x64_rwdi.dll+662404: 48 98                    - cdqe 
gamedll_ph_x64_rwdi.dll+662406: 0F B6 84 01 68 24 66 00  - movzx eax,byte ptr [rcx+rax+00662468]
gamedll_ph_x64_rwdi.dll+66240E: 8B 94 81 60 24 66 00     - mov edx,[rcx+rax*4+00662460]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"skip stamina"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame_x64_rwdi.exe
  Version: 
  Date   : 2024-03-04
  Author : ichir

  This script does blah blah blah
}

define(address,"gamedll_ph_x64_rwdi.dll"+BD8411)
define(bytes,F3 0F 11 47 10)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"gamedll_ph_x64_rwdi.dll"+BD8411)

label(code)
label(return)

newmem:

code:
  //movss [rdi+10],xmm0
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // movss [rdi+10],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: gamedll_ph_x64_rwdi.dll+BD8411

gamedll_ph_x64_rwdi.dll+BD83E5: E9 30 01 00 00        - jmp gamedll_ph_x64_rwdi.dll+BD851A
gamedll_ph_x64_rwdi.dll+BD83EA: F3 0F 10 77 10        - movss xmm6,[rdi+10]
gamedll_ph_x64_rwdi.dll+BD83EF: 48 8B CF              - mov rcx,rdi
gamedll_ph_x64_rwdi.dll+BD83F2: F3 0F 5C F7           - subss xmm6,xmm7
gamedll_ph_x64_rwdi.dll+BD83F6: E8 75 E4 03 00        - call gamedll_ph_x64_rwdi.dll+C16870
gamedll_ph_x64_rwdi.dll+BD83FB: 0F 28 D0              - movaps xmm2,xmm0
gamedll_ph_x64_rwdi.dll+BD83FE: 41 0F 28 C9           - movaps xmm1,xmm9
gamedll_ph_x64_rwdi.dll+BD8402: 0F 28 C6              - movaps xmm0,xmm6
gamedll_ph_x64_rwdi.dll+BD8405: E8 96 2B CE 00        - call gamedll_ph_x64_rwdi.dll+18BAFA0
gamedll_ph_x64_rwdi.dll+BD840A: 0F 2F 05 BB 1A 87 01  - comiss xmm0,[gamedll_ph_x64_rwdi.dll+2449ECC]
// ---------- INJECTING HERE ----------
gamedll_ph_x64_rwdi.dll+BD8411: F3 0F 11 47 10        - movss [rdi+10],xmm0
// ---------- DONE INJECTING  ----------
gamedll_ph_x64_rwdi.dll+BD8416: 73 4F                 - jae gamedll_ph_x64_rwdi.dll+BD8467
gamedll_ph_x64_rwdi.dll+BD8418: 48 8B 4F 08           - mov rcx,[rdi+08]
gamedll_ph_x64_rwdi.dll+BD841C: C7 47 10 00 00 00 00  - mov [rdi+10],00000000
gamedll_ph_x64_rwdi.dll+BD8423: 80 B9 70 2D 00 00 00  - cmp byte ptr [rcx+00002D70],00
gamedll_ph_x64_rwdi.dll+BD842A: 74 3B                 - je gamedll_ph_x64_rwdi.dll+BD8467
gamedll_ph_x64_rwdi.dll+BD842C: E8 8F 13 F7 FF        - call gamedll_ph_x64_rwdi.dll+B497C0
gamedll_ph_x64_rwdi.dll+BD8431: 48 8B C8              - mov rcx,rax
gamedll_ph_x64_rwdi.dll+BD8434: 48 8B 10              - mov rdx,[rax]
gamedll_ph_x64_rwdi.dll+BD8437: FF 92 90 03 00 00     - call qword ptr [rdx+00000390]
gamedll_ph_x64_rwdi.dll+BD843D: 84 C0                 - test al,al
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"weapon"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame_x64_rwdi.exe
  Version: 
  Date   : 2024-03-09
  Author : ichir

  This script does blah blah blah
}

define(address,"gamedll_ph_x64_rwdi.dll"+11C4B93)
define(bytes,F3 0F 11 B7 A8 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"gamedll_ph_x64_rwdi.dll"+11C4B93)

label(code)
label(return)

newmem:

code:
  //movss [rdi+000000A8],xmm6
  mov [rdi+000000A8],4479c000
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rdi+000000A8],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: gamedll_ph_x64_rwdi.dll+11C4B93

gamedll_ph_x64_rwdi.dll+11C4B6F: 48 8B CF                 - mov rcx,rdi
gamedll_ph_x64_rwdi.dll+11C4B72: FF 90 D0 0C 00 00        - call qword ptr [rax+00000CD0]
gamedll_ph_x64_rwdi.dll+11C4B78: 0F 2F F7                 - comiss xmm6,xmm7
gamedll_ph_x64_rwdi.dll+11C4B7B: 73 05                    - jae gamedll_ph_x64_rwdi.dll+11C4B82
gamedll_ph_x64_rwdi.dll+11C4B7D: 0F 57 F6                 - xorps xmm6,xmm6
gamedll_ph_x64_rwdi.dll+11C4B80: EB 07                    - jmp gamedll_ph_x64_rwdi.dll+11C4B89
gamedll_ph_x64_rwdi.dll+11C4B82: F3 0F 5D C6              - minss xmm0,xmm6
gamedll_ph_x64_rwdi.dll+11C4B86: 0F 28 F0                 - movaps xmm6,xmm0
gamedll_ph_x64_rwdi.dll+11C4B89: 0F 28 7C 24 20           - movaps xmm7,[rsp+20]
gamedll_ph_x64_rwdi.dll+11C4B8E: 48 83 7F 08 00           - cmp qword ptr [rdi+08],00
// ---------- INJECTING HERE ----------
gamedll_ph_x64_rwdi.dll+11C4B93: F3 0F 11 B7 A8 00 00 00  - movss [rdi+000000A8],xmm6
// ---------- DONE INJECTING  ----------
gamedll_ph_x64_rwdi.dll+11C4B9B: 74 4F                    - je gamedll_ph_x64_rwdi.dll+11C4BEC
gamedll_ph_x64_rwdi.dll+11C4B9D: 48 8B 07                 - mov rax,[rdi]
gamedll_ph_x64_rwdi.dll+11C4BA0: 48 8B CF                 - mov rcx,rdi
gamedll_ph_x64_rwdi.dll+11C4BA3: 48 89 5C 24 50           - mov [rsp+50],rbx
gamedll_ph_x64_rwdi.dll+11C4BA8: FF 90 10 07 00 00        - call qword ptr [rax+00000710]
gamedll_ph_x64_rwdi.dll+11C4BAE: 48 8B 17                 - mov rdx,[rdi]
gamedll_ph_x64_rwdi.dll+11C4BB1: 48 8B CF                 - mov rcx,rdi
gamedll_ph_x64_rwdi.dll+11C4BB4: 8B D8                    - mov ebx,eax
gamedll_ph_x64_rwdi.dll+11C4BB6: FF 92 48 02 00 00        - call qword ptr [rdx+00000248]
gamedll_ph_x64_rwdi.dll+11C4BBC: 0F 28 DE                 - movaps xmm3,xmm6
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"No description"</Description>
      <LastState Value="255" RealAddress="227D6EFA080"/>
      <VariableType>4 Bytes</VariableType>
      <Address>227D6EFA080</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"item"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame_x64_rwdi.exe
  Version: 
  Date   : 2024-03-09
  Author : ichir

  This script does blah blah blah
}

define(address,"gamedll_ph_x64_rwdi.dll"+662446)
define(bytes,89 33 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"gamedll_ph_x64_rwdi.dll"+662446)

label(code)
label(return)

newmem:

code:
  mov esi,fff
  mov [rbx],esi
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [rbx],esi
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: gamedll_ph_x64_rwdi.dll+662446

gamedll_ph_x64_rwdi.dll+66241E: 48 8B 43 30              - mov rax,[rbx+30]
gamedll_ph_x64_rwdi.dll+662422: 48 8D 4B 30              - lea rcx,[rbx+30]
gamedll_ph_x64_rwdi.dll+662426: FF 90 E8 0C 00 00        - call qword ptr [rax+00000CE8]
gamedll_ph_x64_rwdi.dll+66242C: 0F 57 C9                 - xorps xmm1,xmm1
gamedll_ph_x64_rwdi.dll+66242F: 0F 2F C1                 - comiss xmm0,xmm1
gamedll_ph_x64_rwdi.dll+662432: 76 14                    - jna gamedll_ph_x64_rwdi.dll+662448
gamedll_ph_x64_rwdi.dll+662434: F3 0F 10 0D A0 13 C7 01  - movss xmm1,[gamedll_ph_x64_rwdi.dll+22D37DC]
gamedll_ph_x64_rwdi.dll+66243C: 48 8B CB                 - mov rcx,rbx
gamedll_ph_x64_rwdi.dll+66243F: E8 2C DE F5 FF           - call gamedll_ph_x64_rwdi.dll+5C0270
gamedll_ph_x64_rwdi.dll+662444: EB 02                    - jmp gamedll_ph_x64_rwdi.dll+662448
// ---------- INJECTING HERE ----------
gamedll_ph_x64_rwdi.dll+662446: 89 33                    - mov [rbx],esi
// ---------- DONE INJECTING  ----------
gamedll_ph_x64_rwdi.dll+662448: 48 8B 5C 24 30           - mov rbx,[rsp+30]
gamedll_ph_x64_rwdi.dll+66244D: 48 8B 6C 24 38           - mov rbp,[rsp+38]
gamedll_ph_x64_rwdi.dll+662452: 48 8B 74 24 40           - mov rsi,[rsp+40]
gamedll_ph_x64_rwdi.dll+662457: 48 83 C4 20              - add rsp,20
gamedll_ph_x64_rwdi.dll+66245B: 5F                       - pop rdi
gamedll_ph_x64_rwdi.dll+66245C: C3                       - ret 
gamedll_ph_x64_rwdi.dll+66245D: 0F 1F 00                 - nop dword ptr [rax]
gamedll_ph_x64_rwdi.dll+662460: 1A 24 66                 - sbb ah,byte ptr [rsi]
gamedll_ph_x64_rwdi.dll+662463: 00 48 24                 - add [rax+24],cl
gamedll_ph_x64_rwdi.dll+662466: 66 00 00                 - add [rax],al
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
