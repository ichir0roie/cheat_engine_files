<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"repair skip"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : start_protected_game.exe
  Version: 
  Date   : 2023-08-25
  Author : ichir

  This script does blah blah blah
}
//140C122F0
define(address,"start_protected_game.exe"+C122F0)
define(bytes,89 51 08 C3 CC)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$1000,"start_protected_game.exe"+C122F0)

label(code)
label(return)

newmem:

code:
  //mov [rcx+08],edx
  ret 
  int 3 
  jmp return

address:
  jmp newmem
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [rcx+08],edx
  // ret 
  // int 3 

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: start_protected_game.exe+C122F0

start_protected_game.exe+C122E6: CC        - int 3 
start_protected_game.exe+C122E7: CC        - int 3 
start_protected_game.exe+C122E8: CC        - int 3 
start_protected_game.exe+C122E9: CC        - int 3 
start_protected_game.exe+C122EA: CC        - int 3 
start_protected_game.exe+C122EB: CC        - int 3 
start_protected_game.exe+C122EC: CC        - int 3 
start_protected_game.exe+C122ED: CC        - int 3 
start_protected_game.exe+C122EE: CC        - int 3 
start_protected_game.exe+C122EF: CC        - int 3 
// ---------- INJECTING HERE ----------
start_protected_game.exe+C122F0: 89 51 08  - mov [rcx+08],edx
// ---------- DONE INJECTING  ----------
start_protected_game.exe+C122F3: C3        - ret 
start_protected_game.exe+C122F4: CC        - int 3 
start_protected_game.exe+C122F5: CC        - int 3 
start_protected_game.exe+C122F6: CC        - int 3 
start_protected_game.exe+C122F7: CC        - int 3 
start_protected_game.exe+C122F8: CC        - int 3 
start_protected_game.exe+C122F9: CC        - int 3 
start_protected_game.exe+C122FA: CC        - int 3 
start_protected_game.exe+C122FB: CC        - int 3 
start_protected_game.exe+C122FC: CC        - int 3 
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>45</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"ammo skip"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : start_protected_game.exe
  Version: 
  Date   : 2023-08-25
  Author : ichir

  This script does blah blah blah
}

define(address,"start_protected_game.exe"+8EC147)
define(bytes,89 4F 58 48 8B CB)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$1000,"start_protected_game.exe"+8EC147)

label(code)
label(return)

newmem:

code:
  //mov [rdi+58],ecx
  mov rcx,rbx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [rdi+58],ecx
  // mov rcx,rbx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: start_protected_game.exe+8EC147

start_protected_game.exe+8EC127: 48 8B CB              - mov rcx,rbx
start_protected_game.exe+8EC12A: E8 A1 DB C6 00        - call start_protected_game.exe+1559CD0
start_protected_game.exe+8EC12F: 0F AF C6              - imul eax,esi
start_protected_game.exe+8EC132: EB 08                 - jmp start_protected_game.exe+8EC13C
start_protected_game.exe+8EC134: 48 8B CB              - mov rcx,rbx
start_protected_game.exe+8EC137: E8 94 DB C6 00        - call start_protected_game.exe+1559CD0
start_protected_game.exe+8EC13C: 8B 4F 58              - mov ecx,[rdi+58]
start_protected_game.exe+8EC13F: 2B C8                 - sub ecx,eax
start_protected_game.exe+8EC141: 85 C9                 - test ecx,ecx
start_protected_game.exe+8EC143: 41 0F 4E CE           - cmovle ecx,r14d
// ---------- INJECTING HERE ----------
start_protected_game.exe+8EC147: 89 4F 58              - mov [rdi+58],ecx
// ---------- DONE INJECTING  ----------
start_protected_game.exe+8EC14A: 48 8B CB              - mov rcx,rbx
start_protected_game.exe+8EC14D: E8 3E DB C6 00        - call start_protected_game.exe+1559C90
start_protected_game.exe+8EC152: 0F 28 C8              - movaps xmm1,xmm0
start_protected_game.exe+8EC155: 48 8D 8F C8 00 00 00  - lea rcx,[rdi+000000C8]
start_protected_game.exe+8EC15C: E8 CF F8 FF FF        - call start_protected_game.exe+8EBA30
start_protected_game.exe+8EC161: 48 8B 0F              - mov rcx,[rdi]
start_protected_game.exe+8EC164: 48 8D 54 24 20        - lea rdx,[rsp+20]
start_protected_game.exe+8EC169: 48 8B 01              - mov rax,[rcx]
start_protected_game.exe+8EC16C: FF 50 10              - call qword ptr [rax+10]
start_protected_game.exe+8EC16F: 48 8B 48 10           - mov rcx,[rax+10]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"boost skip"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : start_protected_game.exe
  Version: 
  Date   : 2023-08-26
  Author : ichir

  This script does blah blah blah
}

define(address,"start_protected_game.exe"+877019)
define(bytes,F3 0F 11 43 0C)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$1000,"start_protected_game.exe"+877019)

label(code)
label(return)

newmem:

code:
  //movss [rbx+0C],xmm0
  jmp return

address:
  jmp newmem
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // movss [rbx+0C],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: start_protected_game.exe+877019

start_protected_game.exe+876FE6: E8 B5 C4 06 02           - call start_protected_game.exe+28E34A0
start_protected_game.exe+876FEB: 48 8B 0D BE DF 54 04     - mov rcx,[start_protected_game.exe+4DC4FB0]
start_protected_game.exe+876FF2: BA 01 00 00 00           - mov edx,00000001
start_protected_game.exe+876FF7: E8 A4 36 CD 00           - call start_protected_game.exe+154A6A0
start_protected_game.exe+876FFC: F3 0F 58 73 0C           - addss xmm6,[rbx+0C]
start_protected_game.exe+877001: F3 0F 10 53 08           - movss xmm2,[rbx+08]
start_protected_game.exe+877006: 66 0F 6E 88 00 05 00 00  - movd xmm1,[rax+00000500]
start_protected_game.exe+87700E: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
start_protected_game.exe+877011: 0F 28 C6                 - movaps xmm0,xmm6
start_protected_game.exe+877014: E8 47 C9 A0 FF           - call start_protected_game.exe+283960
// ---------- INJECTING HERE ----------
start_protected_game.exe+877019: F3 0F 11 43 0C           - movss [rbx+0C],xmm0
// ---------- DONE INJECTING  ----------
start_protected_game.exe+87701E: 40 84 FF                 - test dil,dil
start_protected_game.exe+877021: 74 0F                    - je start_protected_game.exe+877032
start_protected_game.exe+877023: 0F 2F F8                 - comiss xmm7,xmm0
start_protected_game.exe+877026: 72 0A                    - jb start_protected_game.exe+877032
start_protected_game.exe+877028: 8B 43 38                 - mov eax,[rbx+38]
start_protected_game.exe+87702B: 89 43 18                 - mov [rbx+18],eax
start_protected_game.exe+87702E: C6 43 52 01              - mov byte ptr [rbx+52],01
start_protected_game.exe+877032: 0F 28 74 24 30           - movaps xmm6,[rsp+30]
start_protected_game.exe+877037: 33 C0                    - xor eax,eax
start_protected_game.exe+877039: 0F 28 7C 24 20           - movaps xmm7,[rsp+20]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
