<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"item"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MonsterHunterWorld.exe
  Version: 
  Date   : 2024-03-17
  Author : ichir

  This script does blah blah blah
}

define(address,"MonsterHunterWorld.exe"+11CDD50)
define(bytes,89 51 0C 85 D2 75 09 41 80 F8 01 75 03 89 51 08)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(newmem,$10)

label(code)
label(return)

newmem:

code:
  mov [rcx+0C],63
  test edx,edx
  jne MonsterHunterWorld.exe+11CDD60
  cmp r8b,01
  jne MonsterHunterWorld.exe+11CDD60
  mov [rcx+08],edx
  jmp return

address:
  jmp far newmem
  nop 2
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [rcx+0C],edx
  // test edx,edx
  // jne MonsterHunterWorld.exe+11CDD60
  // cmp r8b,01
  // jne MonsterHunterWorld.exe+11CDD60
  // mov [rcx+08],edx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+11CDD50

MonsterHunterWorld.exe+11CDD43: 48 83 C4 20  - add rsp,20
MonsterHunterWorld.exe+11CDD47: 5F           - pop rdi
MonsterHunterWorld.exe+11CDD48: C3           - ret 
MonsterHunterWorld.exe+11CDD49: CC           - int 3 
MonsterHunterWorld.exe+11CDD4A: CC           - int 3 
MonsterHunterWorld.exe+11CDD4B: CC           - int 3 
MonsterHunterWorld.exe+11CDD4C: CC           - int 3 
MonsterHunterWorld.exe+11CDD4D: CC           - int 3 
MonsterHunterWorld.exe+11CDD4E: CC           - int 3 
MonsterHunterWorld.exe+11CDD4F: CC           - int 3 
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+11CDD50: 89 51 0C     - mov [rcx+0C],edx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+11CDD53: 85 D2        - test edx,edx
MonsterHunterWorld.exe+11CDD55: 75 09        - jne MonsterHunterWorld.exe+11CDD60
MonsterHunterWorld.exe+11CDD57: 41 80 F8 01  - cmp r8b,01
MonsterHunterWorld.exe+11CDD5B: 75 03        - jne MonsterHunterWorld.exe+11CDD60
MonsterHunterWorld.exe+11CDD5D: 89 51 08     - mov [rcx+08],edx
MonsterHunterWorld.exe+11CDD60: C3           - ret 
MonsterHunterWorld.exe+11CDD61: CC           - int 3 
MonsterHunterWorld.exe+11CDD62: CC           - int 3 
MonsterHunterWorld.exe+11CDD63: CC           - int 3 
MonsterHunterWorld.exe+11CDD64: CC           - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MonsterHunterWorld.exe
  Version: 
  Date   : 2024-03-17
  Author : ichir

  This script does blah blah blah
}

define(address,"MonsterHunterWorld.exe"+1348D16)
define(bytes,89 8F 94 00 00 00 81 F9 40 42 0F 00 72 0D)

[ENABLE]

assert(address,bytes)
alloc(newmem,$10)

label(code)
label(return)

newmem:

code:
  mov [rdi+00000094],ecx
  mov [rdi+00000094],05F5E0FF
  cmp ecx,000F4240
  jb MonsterHunterWorld.exe+1348D31
  jmp return

address:
  jmp far newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+00000094],ecx
  // cmp ecx,000F4240
  // jb MonsterHunterWorld.exe+1348D31

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+1348D16

MonsterHunterWorld.exe+1348CE6: 39 87 94 00 00 00              - cmp [rdi+00000094],eax
MonsterHunterWorld.exe+1348CEC: 7D 0C                          - jnl MonsterHunterWorld.exe+1348CFA
MonsterHunterWorld.exe+1348CEE: C7 87 94 00 00 00 00 00 00 00  - mov [rdi+00000094],00000000
MonsterHunterWorld.exe+1348CF8: EB 37                          - jmp MonsterHunterWorld.exe+1348D31
MonsterHunterWorld.exe+1348CFA: 8B 8F 94 00 00 00              - mov ecx,[rdi+00000094]
MonsterHunterWorld.exe+1348D00: 03 CE                          - add ecx,esi
MonsterHunterWorld.exe+1348D02: 81 F9 FF E0 F5 05              - cmp ecx,05F5E0FF
MonsterHunterWorld.exe+1348D08: 76 0C                          - jna MonsterHunterWorld.exe+1348D16
MonsterHunterWorld.exe+1348D0A: C7 87 94 00 00 00 FF E0 F5 05  - mov [rdi+00000094],05F5E0FF
MonsterHunterWorld.exe+1348D14: EB 0E                          - jmp MonsterHunterWorld.exe+1348D24
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+1348D16: 89 8F 94 00 00 00              - mov [rdi+00000094],ecx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+1348D1C: 81 F9 40 42 0F 00              - cmp ecx,000F4240
MonsterHunterWorld.exe+1348D22: 72 0D                          - jb MonsterHunterWorld.exe+1348D31
MonsterHunterWorld.exe+1348D24: BA 18 00 00 00                 - mov edx,00000018
MonsterHunterWorld.exe+1348D29: 48 8B CF                       - mov rcx,rdi
MonsterHunterWorld.exe+1348D2C: E8 5F E1 01 00                 - call MonsterHunterWorld.exe+1366E90
MonsterHunterWorld.exe+1348D31: 48 8D 4F 08                    - lea rcx,[rdi+08]
MonsterHunterWorld.exe+1348D35: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
MonsterHunterWorld.exe+1348D3A: 48 8B 74 24 38                 - mov rsi,[rsp+38]
MonsterHunterWorld.exe+1348D3F: 48 83 C4 20                    - add rsp,20
MonsterHunterWorld.exe+1348D43: 5F                             - pop rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"stamina"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-17
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 41 6C C3 40) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rcx+6C],xmm0
  mov [rcx+6C],42C80000
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 41 6C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+12FD27A

MonsterHunterWorld.exe+12FD25D: C3                    - ret 
MonsterHunterWorld.exe+12FD25E: CC                    - int 3 
MonsterHunterWorld.exe+12FD25F: CC                    - int 3 
MonsterHunterWorld.exe+12FD260: F3 0F 10 51 6C        - movss xmm2,[rcx+6C]
MonsterHunterWorld.exe+12FD265: 0F 57 C0              - xorps xmm0,xmm0
MonsterHunterWorld.exe+12FD268: F3 0F 5C D1           - subss xmm2,xmm1
MonsterHunterWorld.exe+12FD26C: 0F 2F D0              - comiss xmm2,xmm0
MonsterHunterWorld.exe+12FD26F: 72 09                 - jb MonsterHunterWorld.exe+12FD27A
MonsterHunterWorld.exe+12FD271: F3 0F 10 41 74        - movss xmm0,[rcx+74]
MonsterHunterWorld.exe+12FD276: F3 0F 5D C2           - minss xmm0,xmm2
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+12FD27A: F3 0F 11 41 6C        - movss [rcx+6C],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+12FD27F: C3                    - ret 
MonsterHunterWorld.exe+12FD280: 40 53                 - push rbx
MonsterHunterWorld.exe+12FD282: 48 83 EC 40           - sub rsp,40
MonsterHunterWorld.exe+12FD286: 48 8D 0D 13 43 CA 03  - lea rcx,[MonsterHunterWorld.exe+4FA15A0]
MonsterHunterWorld.exe+12FD28D: E8 DE 0D E7 00        - call MonsterHunterWorld.exe+216E070
MonsterHunterWorld.exe+12FD292: 48 8B 0D 0F 43 CA 03  - mov rcx,[MonsterHunterWorld.exe+4FA15A8]
MonsterHunterWorld.exe+12FD299: 33 DB                 - xor ebx,ebx
MonsterHunterWorld.exe+12FD29B: 44 8B 0D 32 43 CA 03  - mov r9d,[MonsterHunterWorld.exe+4FA15D4]
MonsterHunterWorld.exe+12FD2A2: 48 89 4C 24 30        - mov [rsp+30],rcx
MonsterHunterWorld.exe+12FD2A7: 48 8B C8              - mov rcx,rax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"item duration"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 8F A0 06 00 00 F3 0F 11 B7 AC 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //movss [rdi+000006A0],xmm1
  mov [rdi+000006A0],20000000
  movss [rdi+000006AC],xmm6
  jmp return

INJECT:
  jmp far newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 8F A0 06 00 00 F3 0F 11 B7 AC 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+11B6B4F

MonsterHunterWorld.exe+11B6B26: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
MonsterHunterWorld.exe+11B6B29: F3 0F 59 C8              - mulss xmm1,xmm0
MonsterHunterWorld.exe+11B6B2D: 74 20                    - je MonsterHunterWorld.exe+11B6B4F
MonsterHunterWorld.exe+11B6B2F: 0F 2F 8F A0 06 00 00     - comiss xmm1,[rdi+000006A0]
MonsterHunterWorld.exe+11B6B36: 76 08                    - jna MonsterHunterWorld.exe+11B6B40
MonsterHunterWorld.exe+11B6B38: F3 0F 11 8F A0 06 00 00  - movss [rdi+000006A0],xmm1
MonsterHunterWorld.exe+11B6B40: F3 0F 10 8F AC 06 00 00  - movss xmm1,[rdi+000006AC]
MonsterHunterWorld.exe+11B6B48: 0F 2F F1                 - comiss xmm6,xmm1
MonsterHunterWorld.exe+11B6B4B: 76 15                    - jna MonsterHunterWorld.exe+11B6B62
MonsterHunterWorld.exe+11B6B4D: EB 08                    - jmp MonsterHunterWorld.exe+11B6B57
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+11B6B4F: F3 0F 11 8F A0 06 00 00  - movss [rdi+000006A0],xmm1
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+11B6B57: F3 0F 11 B7 AC 06 00 00  - movss [rdi+000006AC],xmm6
MonsterHunterWorld.exe+11B6B5F: 0F 28 CE                 - movaps xmm1,xmm6
MonsterHunterWorld.exe+11B6B62: 48 8B 05 B7 91 E5 03     - mov rax,[MonsterHunterWorld.exe+500FD20]
MonsterHunterWorld.exe+11B6B69: 48 8B 5C 24 40           - mov rbx,[rsp+40]
MonsterHunterWorld.exe+11B6B6E: 0F 28 74 24 20           - movaps xmm6,[rsp+20]
MonsterHunterWorld.exe+11B6B73: 0F B7 88 26 01 00 00     - movzx ecx,word ptr [rax+00000126]
MonsterHunterWorld.exe+11B6B7A: C6 87 A8 06 00 00 01     - mov byte ptr [rdi+000006A8],01
MonsterHunterWorld.exe+11B6B81: 66 0F 6E C1              - movd xmm0,ecx
MonsterHunterWorld.exe+11B6B85: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
MonsterHunterWorld.exe+11B6B88: F3 0F 59 C1              - mulss xmm0,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"item duration 2"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 8F C4 06 00 00 48 8B 5C 24 30 48 83 C4 20) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //movss [rdi+000006C4],xmm1
  mov [rdi+000006C4],20000000
  mov rbx,[rsp+30]
  add rsp,20
  jmp return

INJECT:
  jmp far newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 8F C4 06 00 00 48 8B 5C 24 30 48 83 C4 20

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+11B6D07

MonsterHunterWorld.exe+11B6CDC: 48 8B F9                 - mov rdi,rcx
MonsterHunterWorld.exe+11B6CDF: 48 8B 49 08              - mov rcx,[rcx+08]
MonsterHunterWorld.exe+11B6CE3: 41 8D 50 53              - lea edx,[r8+53]
MonsterHunterWorld.exe+11B6CE7: E8 84 A8 76 00           - call MonsterHunterWorld.exe+1921570
MonsterHunterWorld.exe+11B6CEC: 0F B7 83 42 01 00 00     - movzx eax,word ptr [rbx+00000142]
MonsterHunterWorld.exe+11B6CF3: 66 0F 6E C8              - movd xmm1,eax
MonsterHunterWorld.exe+11B6CF7: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
MonsterHunterWorld.exe+11B6CFA: F3 0F 59 C8              - mulss xmm1,xmm0
MonsterHunterWorld.exe+11B6CFE: 0F 2F 8F C4 06 00 00     - comiss xmm1,[rdi+000006C4]
MonsterHunterWorld.exe+11B6D05: 76 08                    - jna MonsterHunterWorld.exe+11B6D0F
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+11B6D07: F3 0F 11 8F C4 06 00 00  - movss [rdi+000006C4],xmm1
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+11B6D0F: 48 8B 5C 24 30           - mov rbx,[rsp+30]
MonsterHunterWorld.exe+11B6D14: 48 83 C4 20              - add rsp,20
MonsterHunterWorld.exe+11B6D18: 5F                       - pop rdi
MonsterHunterWorld.exe+11B6D19: C3                       - ret 
MonsterHunterWorld.exe+11B6D1A: CC                       - int 3 
MonsterHunterWorld.exe+11B6D1B: CC                       - int 3 
MonsterHunterWorld.exe+11B6D1C: CC                       - int 3 
MonsterHunterWorld.exe+11B6D1D: CC                       - int 3 
MonsterHunterWorld.exe+11B6D1E: CC                       - int 3 
MonsterHunterWorld.exe+11B6D1F: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"item duration 3"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 84 BB 0C 0E 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+rdi*4+00000E0C],eax
  mov [rbx+rdi*4+00000E0C],1
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 84 BB 0C 0E 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+118E7C1

MonsterHunterWorld.exe+118E7A0: 48 89 5C 24 08                    - mov [rsp+08],rbx
MonsterHunterWorld.exe+118E7A5: 57                                - push rdi
MonsterHunterWorld.exe+118E7A6: 48 83 EC 20                       - sub rsp,20
MonsterHunterWorld.exe+118E7AA: 48 8B D9                          - mov rbx,rcx
MonsterHunterWorld.exe+118E7AD: 8B FA                             - mov edi,edx
MonsterHunterWorld.exe+118E7AF: 8B CA                             - mov ecx,edx
MonsterHunterWorld.exe+118E7B1: E8 4A 37 4E 00                    - call MonsterHunterWorld.exe+1671F00
MonsterHunterWorld.exe+118E7B6: 84 C0                             - test al,al
MonsterHunterWorld.exe+118E7B8: 75 19                             - jne MonsterHunterWorld.exe+118E7D3
MonsterHunterWorld.exe+118E7BA: 8B 84 BB 5C 0E 00 00              - mov eax,[rbx+rdi*4+00000E5C]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+118E7C1: 89 84 BB 0C 0E 00 00              - mov [rbx+rdi*4+00000E0C],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+118E7C8: C7 84 BB FC 0E 00 00 00 00 00 00  - mov [rbx+rdi*4+00000EFC],00000000
MonsterHunterWorld.exe+118E7D3: 48 8B 5C 24 30                    - mov rbx,[rsp+30]
MonsterHunterWorld.exe+118E7D8: 48 83 C4 20                       - add rsp,20
MonsterHunterWorld.exe+118E7DC: 5F                                - pop rdi
MonsterHunterWorld.exe+118E7DD: C3                                - ret 
MonsterHunterWorld.exe+118E7DE: CC                                - int 3 
MonsterHunterWorld.exe+118E7DF: CC                                - int 3 
MonsterHunterWorld.exe+118E7E0: 48 89 5C 24 08                    - mov [rsp+08],rbx
MonsterHunterWorld.exe+118E7E5: 48 89 74 24 10                    - mov [rsp+10],rsi
MonsterHunterWorld.exe+118E7EA: 57                                - push rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"item duration 4"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,42 89 84 8B 0C 0E 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+r9*4+00000E0C],eax
  mov [rbx+r9*4+00000E0C],1
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 42 89 84 8B 0C 0E 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+118E81F

MonsterHunterWorld.exe+118E7EF: 48 8B D9                          - mov rbx,rcx
MonsterHunterWorld.exe+118E7F2: 41 0F B6 F8                       - movzx edi,r8b
MonsterHunterWorld.exe+118E7F6: 8B 89 04 0E 00 00                 - mov ecx,[rcx+00000E04]
MonsterHunterWorld.exe+118E7FC: 0F B6 F2                          - movzx esi,dl
MonsterHunterWorld.exe+118E7FF: E8 FC 36 4E 00                    - call MonsterHunterWorld.exe+1671F00
MonsterHunterWorld.exe+118E804: 84 C0                             - test al,al
MonsterHunterWorld.exe+118E806: 0F 84 AC 00 00 00                 - je MonsterHunterWorld.exe+118E8B8
MonsterHunterWorld.exe+118E80C: 44 8B 8B 04 0E 00 00              - mov r9d,[rbx+00000E04]
MonsterHunterWorld.exe+118E813: 40 0F B6 D6                       - movzx edx,sil
MonsterHunterWorld.exe+118E817: 42 8B 84 8B 5C 0E 00 00           - mov eax,[rbx+r9*4+00000E5C]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+118E81F: 42 89 84 8B 0C 0E 00 00           - mov [rbx+r9*4+00000E0C],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+118E827: 8B 83 04 0E 00 00                 - mov eax,[rbx+00000E04]
MonsterHunterWorld.exe+118E82D: C7 84 83 FC 0E 00 00 00 00 00 00  - mov [rbx+rax*4+00000EFC],00000000
MonsterHunterWorld.exe+118E838: 48 8B 8B B0 0D 00 00              - mov rcx,[rbx+00000DB0]
MonsterHunterWorld.exe+118E83F: 48 8B 89 58 3D 01 00              - mov rcx,[rcx+00013D58]
MonsterHunterWorld.exe+118E846: E8 15 F7 B3 FF                    - call MonsterHunterWorld.exe+CCDF60
MonsterHunterWorld.exe+118E84B: 40 84 FF                          - test dil,dil
MonsterHunterWorld.exe+118E84E: 75 55                             - jne MonsterHunterWorld.exe+118E8A5
MonsterHunterWorld.exe+118E850: 48 8B 83 90 0D 00 00              - mov rax,[rbx+00000D90]
MonsterHunterWorld.exe+118E857: 48 8B 88 20 7D 00 00              - mov rcx,[rax+00007D20]
MonsterHunterWorld.exe+118E85E: 40 38 B9 84 07 00 00              - cmp [rcx+00000784],dil
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"slinger all"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,C7 41 08 00 00 00 00 41 8B) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rcx+08],00000000
  mov [rcx+08],0000000f
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C7 41 08 00 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+26E151

MonsterHunterWorld.exe+26E13D: CC                    - int 3 
MonsterHunterWorld.exe+26E13E: CC                    - int 3 
MonsterHunterWorld.exe+26E13F: CC                    - int 3 
MonsterHunterWorld.exe+26E140: 44 8B 41 08           - mov r8d,[rcx+08]
MonsterHunterWorld.exe+26E144: 41 8B C0              - mov eax,r8d
MonsterHunterWorld.exe+26E147: 2B C2                 - sub eax,edx
MonsterHunterWorld.exe+26E149: 78 06                 - js MonsterHunterWorld.exe+26E151
MonsterHunterWorld.exe+26E14B: 89 41 08              - mov [rcx+08],eax
MonsterHunterWorld.exe+26E14E: 8B C2                 - mov eax,edx
MonsterHunterWorld.exe+26E150: C3                    - ret 
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+26E151: C7 41 08 00 00 00 00  - mov [rcx+08],00000000
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+26E158: 41 8B C0              - mov eax,r8d
MonsterHunterWorld.exe+26E15B: C3                    - ret 
MonsterHunterWorld.exe+26E15C: CC                    - int 3 
MonsterHunterWorld.exe+26E15D: CC                    - int 3 
MonsterHunterWorld.exe+26E15E: CC                    - int 3 
MonsterHunterWorld.exe+26E15F: CC                    - int 3 
MonsterHunterWorld.exe+26E160: 48 83 EC 48           - sub rsp,48
MonsterHunterWorld.exe+26E164: 48 8D 0D 4D 8B A2 04  - lea rcx,[MonsterHunterWorld.exe+4C96CB8]
MonsterHunterWorld.exe+26E16B: E8 00 FF EF 01        - call MonsterHunterWorld.exe+216E070
MonsterHunterWorld.exe+26E170: 48 8B 0D 49 8B A2 04  - mov rcx,[MonsterHunterWorld.exe+4C96CC0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"slinger  one"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 41 08 8B C2 C3) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rcx+08],eax
  mov [rcx+08],f
  mov eax,edx
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 41 08 8B C2

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+26E14B

MonsterHunterWorld.exe+26E138: 89 51 08        - mov [rcx+08],edx
MonsterHunterWorld.exe+26E13B: C3              - ret 
MonsterHunterWorld.exe+26E13C: CC              - int 3 
MonsterHunterWorld.exe+26E13D: CC              - int 3 
MonsterHunterWorld.exe+26E13E: CC              - int 3 
MonsterHunterWorld.exe+26E13F: CC              - int 3 
MonsterHunterWorld.exe+26E140: 44 8B 41 08     - mov r8d,[rcx+08]
MonsterHunterWorld.exe+26E144: 41 8B C0        - mov eax,r8d
MonsterHunterWorld.exe+26E147: 2B C2           - sub eax,edx
MonsterHunterWorld.exe+26E149: 78 06           - js INJECT
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+26E14B: 89 41 08        - mov [rcx+08],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+26E14E: 8B C2           - mov eax,edx
MonsterHunterWorld.exe+26E150: C3              - ret 
INJECT: E9 AA 1E F4 48  - jmp 1891B0000
MonsterHunterWorld.exe+26E156: 66 90           - nop 2
MonsterHunterWorld.exe+26E158: 41 8B C0        - mov eax,r8d
MonsterHunterWorld.exe+26E15B: C3              - ret 
MonsterHunterWorld.exe+26E15C: CC              - int 3 
MonsterHunterWorld.exe+26E15D: CC              - int 3 
MonsterHunterWorld.exe+26E15E: CC              - int 3 
MonsterHunterWorld.exe+26E15F: CC              - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>87</ID>
      <Description>"inf mant"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 84 B7 FC 0E 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rdi+rsi*4+00000EFC],xmm0
  mov [rdi+rsi*4+00000EFC],43960000
  jmp return

INJECT:
  jmp newmem
  nop 4
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 84 B7 FC 0E 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+119012F

MonsterHunterWorld.exe+11900F8: EB 18                       - jmp MonsterHunterWorld.exe+1190112
MonsterHunterWorld.exe+11900FA: F3 0F 58 8F D8 0F 00 00     - addss xmm1,[rdi+00000FD8]
MonsterHunterWorld.exe+1190102: F3 0F 11 8C B7 FC 0E 00 00  - movss [rdi+rsi*4+00000EFC],xmm1
MonsterHunterWorld.exe+119010B: 44 89 AF D8 0F 00 00        - mov [rdi+00000FD8],r13d
MonsterHunterWorld.exe+1190112: 41 8B CC                    - mov ecx,r12d
MonsterHunterWorld.exe+1190115: E8 E6 1D 4E 00              - call MonsterHunterWorld.exe+1671F00
MonsterHunterWorld.exe+119011A: 84 C0                       - test al,al
MonsterHunterWorld.exe+119011C: 74 21                       - je MonsterHunterWorld.exe+119013F
MonsterHunterWorld.exe+119011E: F3 0F 10 87 E0 0F 00 00     - movss xmm0,[rdi+00000FE0]
MonsterHunterWorld.exe+1190126: F3 0F 58 84 B7 FC 0E 00 00  - addss xmm0,[rdi+rsi*4+00000EFC]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+119012F: F3 0F 11 84 B7 FC 0E 00 00  - movss [rdi+rsi*4+00000EFC],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+1190138: 44 89 AF E0 0F 00 00        - mov [rdi+00000FE0],r13d
MonsterHunterWorld.exe+119013F: 44 0F 2F 9C B7 FC 0E 00 00  - comiss xmm11,[rdi+rsi*4+00000EFC]
MonsterHunterWorld.exe+1190148: 0F 86 84 00 00 00           - jbe MonsterHunterWorld.exe+11901D2
MonsterHunterWorld.exe+119014E: 44 89 AC B7 FC 0E 00 00     - mov [rdi+rsi*4+00000EFC],r13d
MonsterHunterWorld.exe+1190156: 41 83 FC 0C                 - cmp r12d,0C
MonsterHunterWorld.exe+119015A: 75 53                       - jne MonsterHunterWorld.exe+11901AF
MonsterHunterWorld.exe+119015C: 48 8B 8F 90 0D 00 00        - mov rcx,[rdi+00000D90]
MonsterHunterWorld.exe+1190163: 33 D2                       - xor edx,edx
MonsterHunterWorld.exe+1190165: E8 E6 E7 A6 00              - call MonsterHunterWorld.exe+1BFE950
MonsterHunterWorld.exe+119016A: 83 38 01                    - cmp dword ptr [rax],01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>117</ID>
      <Description>"bomb"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,FF 84 BB 38 08 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //inc [rbx+rdi*4+00000838]
  mov [rbx+rdi*4+00000838],0
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 84 BB 38 08 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+1A906A8

MonsterHunterWorld.exe+1A90685: 57                    - push rdi
MonsterHunterWorld.exe+1A90686: 48 83 EC 20           - sub rsp,20
MonsterHunterWorld.exe+1A9068A: 80 79 30 00           - cmp byte ptr [rcx+30],00
MonsterHunterWorld.exe+1A9068E: 48 8B D9              - mov rbx,rcx
MonsterHunterWorld.exe+1A90691: 8B FA                 - mov edi,edx
MonsterHunterWorld.exe+1A90693: 75 09                 - jne MonsterHunterWorld.exe+1A9069E
MonsterHunterWorld.exe+1A90695: 80 3D 2C 18 73 03 00  - cmp byte ptr [MonsterHunterWorld.exe+51C1EC8],00
MonsterHunterWorld.exe+1A9069C: 74 0A                 - je MonsterHunterWorld.exe+1A906A8
MonsterHunterWorld.exe+1A9069E: 48 83 C1 08           - add rcx,08
MonsterHunterWorld.exe+1A906A2: FF 15 58 09 38 01     - call qword ptr [MonsterHunterWorld.exe+2E11000]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+1A906A8: FF 84 BB 38 08 00 00  - inc [rbx+rdi*4+00000838]
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+1A906AF: 48 8B CB              - mov rcx,rbx
MonsterHunterWorld.exe+1A906B2: 48 8B 5C 24 30        - mov rbx,[rsp+30]
MonsterHunterWorld.exe+1A906B7: 48 83 C4 20           - add rsp,20
MonsterHunterWorld.exe+1A906BB: 5F                    - pop rdi
MonsterHunterWorld.exe+1A906BC: E9 EF 59 7B FE        - jmp MonsterHunterWorld.exe+2460B0
MonsterHunterWorld.exe+1A906C1: CC                    - int 3 
MonsterHunterWorld.exe+1A906C2: CC                    - int 3 
MonsterHunterWorld.exe+1A906C3: CC                    - int 3 
MonsterHunterWorld.exe+1A906C4: CC                    - int 3 
MonsterHunterWorld.exe+1A906C5: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>119</ID>
      <Description>"bomb 2"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,FF 8C BB 38 08 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //dec [rbx+rdi*4+00000838]
  mov [rbx+rdi*4+00000838],0
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 8C BB 38 08 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+1A986A8

MonsterHunterWorld.exe+1A98685: 57                    - push rdi
MonsterHunterWorld.exe+1A98686: 48 83 EC 20           - sub rsp,20
MonsterHunterWorld.exe+1A9868A: 80 79 30 00           - cmp byte ptr [rcx+30],00
MonsterHunterWorld.exe+1A9868E: 48 8B D9              - mov rbx,rcx
MonsterHunterWorld.exe+1A98691: 8B FA                 - mov edi,edx
MonsterHunterWorld.exe+1A98693: 75 09                 - jne MonsterHunterWorld.exe+1A9869E
MonsterHunterWorld.exe+1A98695: 80 3D 2C 98 72 03 00  - cmp byte ptr [MonsterHunterWorld.exe+51C1EC8],00
MonsterHunterWorld.exe+1A9869C: 74 0A                 - je MonsterHunterWorld.exe+1A986A8
MonsterHunterWorld.exe+1A9869E: 48 83 C1 08           - add rcx,08
MonsterHunterWorld.exe+1A986A2: FF 15 58 89 37 01     - call qword ptr [MonsterHunterWorld.exe+2E11000]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+1A986A8: FF 8C BB 38 08 00 00  - dec [rbx+rdi*4+00000838]
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+1A986AF: 48 8B CB              - mov rcx,rbx
MonsterHunterWorld.exe+1A986B2: 48 8B 5C 24 30        - mov rbx,[rsp+30]
MonsterHunterWorld.exe+1A986B7: 48 83 C4 20           - add rsp,20
MonsterHunterWorld.exe+1A986BB: 5F                    - pop rdi
MonsterHunterWorld.exe+1A986BC: E9 EF D9 7A FE        - jmp MonsterHunterWorld.exe+2460B0
MonsterHunterWorld.exe+1A986C1: CC                    - int 3 
MonsterHunterWorld.exe+1A986C2: CC                    - int 3 
MonsterHunterWorld.exe+1A986C3: CC                    - int 3 
MonsterHunterWorld.exe+1A986C4: CC                    - int 3 
MonsterHunterWorld.exe+1A986C5: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"sharpness"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 9F F8 20 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rdi+000020F8],ebx
  mov [rdi+000020F8],4479C000
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 9F F8 20 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+2116E21

MonsterHunterWorld.exe+2116E00: 48 8B F9              - mov rdi,rcx
MonsterHunterWorld.exe+2116E03: E8 F8 F1 FF FF        - call MonsterHunterWorld.exe+2116000
MonsterHunterWorld.exe+2116E08: 44 8B BF F8 20 00 00  - mov r15d,[rdi+000020F8]
MonsterHunterWorld.exe+2116E0F: 44 8B F0              - mov r14d,eax
MonsterHunterWorld.exe+2116E12: 85 DB                 - test ebx,ebx
MonsterHunterWorld.exe+2116E14: 79 04                 - jns MonsterHunterWorld.exe+2116E1A
MonsterHunterWorld.exe+2116E16: 33 DB                 - xor ebx,ebx
MonsterHunterWorld.exe+2116E18: EB 07                 - jmp MonsterHunterWorld.exe+2116E21
MonsterHunterWorld.exe+2116E1A: 41 3B DE              - cmp ebx,r14d
MonsterHunterWorld.exe+2116E1D: 41 0F 4F DE           - cmovg ebx,r14d
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+2116E21: 89 9F F8 20 00 00     - mov [rdi+000020F8],ebx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+2116E27: 48 8B 97 98 09 00 00  - mov rdx,[rdi+00000998]
MonsterHunterWorld.exe+2116E2E: 48 85 D2              - test rdx,rdx
MonsterHunterWorld.exe+2116E31: 74 06                 - je MonsterHunterWorld.exe+2116E39
MonsterHunterWorld.exe+2116E33: F6 42 0C 0E           - test byte ptr [rdx+0C],0E
MonsterHunterWorld.exe+2116E37: 75 02                 - jne MonsterHunterWorld.exe+2116E3B
MonsterHunterWorld.exe+2116E39: 33 D2                 - xor edx,edx
MonsterHunterWorld.exe+2116E3B: 48 8B 0D 1E 5C EF 02  - mov rcx,[MonsterHunterWorld.exe+500CA60]
MonsterHunterWorld.exe+2116E42: E8 89 B1 A2 FF        - call MonsterHunterWorld.exe+1B41FD0
MonsterHunterWorld.exe+2116E47: 84 C0                 - test al,al
MonsterHunterWorld.exe+2116E49: 0F 84 E9 00 00 00     - je MonsterHunterWorld.exe+2116F38
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"gunlance 1"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 83 6C 23 00 00 85 C9 74 16 83 E9 01 74 0A 83 F9 01 75 24) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+0000236C],eax
  mov [rbx+0000236C],f
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 83 6C 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212DF26

MonsterHunterWorld.exe+212DEFC: F6 80 38 89 00 00 01  - test byte ptr [rax+00008938],01
MonsterHunterWorld.exe+212DF03: 75 0E                 - jne MonsterHunterWorld.exe+212DF13
MonsterHunterWorld.exe+212DF05: 8B 83 68 23 00 00     - mov eax,[rbx+00002368]
MonsterHunterWorld.exe+212DF0B: 89 83 6C 23 00 00     - mov [rbx+0000236C],eax
MonsterHunterWorld.exe+212DF11: EB 06                 - jmp MonsterHunterWorld.exe+212DF19
MonsterHunterWorld.exe+212DF13: 8B 83 6C 23 00 00     - mov eax,[rbx+0000236C]
MonsterHunterWorld.exe+212DF19: 85 C0                 - test eax,eax
MonsterHunterWorld.exe+212DF1B: 74 41                 - je MonsterHunterWorld.exe+212DF5E
MonsterHunterWorld.exe+212DF1D: 0F B6 8B D0 23 00 00  - movzx ecx,byte ptr [rbx+000023D0]
MonsterHunterWorld.exe+212DF24: FF C8                 - dec eax
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212DF26: 89 83 6C 23 00 00     - mov [rbx+0000236C],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212DF2C: 85 C9                 - test ecx,ecx
MonsterHunterWorld.exe+212DF2E: 74 16                 - je MonsterHunterWorld.exe+212DF46
MonsterHunterWorld.exe+212DF30: 83 E9 01              - sub ecx,01
MonsterHunterWorld.exe+212DF33: 74 0A                 - je MonsterHunterWorld.exe+212DF3F
MonsterHunterWorld.exe+212DF35: 83 F9 01              - cmp ecx,01
MonsterHunterWorld.exe+212DF38: 75 24                 - jne MonsterHunterWorld.exe+212DF5E
MonsterHunterWorld.exe+212DF3A: 8D 51 01              - lea edx,[rcx+01]
MonsterHunterWorld.exe+212DF3D: EB 09                 - jmp MonsterHunterWorld.exe+212DF48
MonsterHunterWorld.exe+212DF3F: BA 01 00 00 00        - mov edx,00000001
MonsterHunterWorld.exe+212DF44: EB 02                 - jmp MonsterHunterWorld.exe+212DF48
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"gunlance 2"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 93 6C 23 00 00 C6 83 04) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+0000236C],eax
  mov [rbx+0000236C],f
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 93 6C 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212C8F8

MonsterHunterWorld.exe+212C8C3: 48 8B 8B B0 09 00 00  - mov rcx,[rbx+000009B0]
MonsterHunterWorld.exe+212C8CA: E8 01 0D E3 FF        - call MonsterHunterWorld.exe+1F5D5D0
MonsterHunterWorld.exe+212C8CF: 88 83 94 25 00 00     - mov [rbx+00002594],al
MonsterHunterWorld.exe+212C8D5: 8B 83 6C 23 00 00     - mov eax,[rbx+0000236C]
MonsterHunterWorld.exe+212C8DB: 85 C0                 - test eax,eax
MonsterHunterWorld.exe+212C8DD: 0F 84 8F 00 00 00     - je MonsterHunterWorld.exe+212C972
MonsterHunterWorld.exe+212C8E3: 33 D2                 - xor edx,edx
MonsterHunterWorld.exe+212C8E5: 89 83 70 23 00 00     - mov [rbx+00002370],eax
MonsterHunterWorld.exe+212C8EB: 48 8B 83 B0 04 00 00  - mov rax,[rbx+000004B0]
MonsterHunterWorld.exe+212C8F2: 89 93 74 23 00 00     - mov [rbx+00002374],edx
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212C8F8: 89 93 6C 23 00 00     - mov [rbx+0000236C],edx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212C8FE: C6 83 04 24 00 00 01  - mov byte ptr [rbx+00002404],01
MonsterHunterWorld.exe+212C905: 89 93 00 24 00 00     - mov [rbx+00002400],edx
MonsterHunterWorld.exe+212C90B: 0F B6 88 C8 00 00 00  - movzx ecx,byte ptr [rax+000000C8]
MonsterHunterWorld.exe+212C912: 80 F9 FF              - cmp cl,-01
MonsterHunterWorld.exe+212C915: 75 04                 - jne MonsterHunterWorld.exe+212C91B
MonsterHunterWorld.exe+212C917: 8B C2                 - mov eax,edx
MonsterHunterWorld.exe+212C919: EB 12                 - jmp MonsterHunterWorld.exe+212C92D
MonsterHunterWorld.exe+212C91B: 0F B6 C1              - movzx eax,cl
MonsterHunterWorld.exe+212C91E: 48 8D 04 40           - lea rax,[rax+rax*2]
MonsterHunterWorld.exe+212C922: 48 C1 E0 06           - shl rax,06
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"gunlance 3"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 83 6C 23 00 00 85) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+0000236C],eax
  mov [rbx+0000236C],f
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 83 6C 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212B470

MonsterHunterWorld.exe+212B443: 75 0E                          - jne MonsterHunterWorld.exe+212B453
MonsterHunterWorld.exe+212B445: 8B 83 68 23 00 00              - mov eax,[rbx+00002368]
MonsterHunterWorld.exe+212B44B: 89 83 6C 23 00 00              - mov [rbx+0000236C],eax
MonsterHunterWorld.exe+212B451: EB 06                          - jmp MonsterHunterWorld.exe+212B459
MonsterHunterWorld.exe+212B453: 8B 83 6C 23 00 00              - mov eax,[rbx+0000236C]
MonsterHunterWorld.exe+212B459: C7 83 80 23 00 00 00 00 00 00  - mov [rbx+00002380],00000000
MonsterHunterWorld.exe+212B463: 85 C0                          - test eax,eax
MonsterHunterWorld.exe+212B465: 74 44                          - je MonsterHunterWorld.exe+212B4AB
MonsterHunterWorld.exe+212B467: 0F B6 8B D0 23 00 00           - movzx ecx,byte ptr [rbx+000023D0]
MonsterHunterWorld.exe+212B46E: FF C8                          - dec eax
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212B470: 89 83 6C 23 00 00              - mov [rbx+0000236C],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212B476: 85 C9                          - test ecx,ecx
MonsterHunterWorld.exe+212B478: 74 16                          - je MonsterHunterWorld.exe+212B490
MonsterHunterWorld.exe+212B47A: 83 E9 01                       - sub ecx,01
MonsterHunterWorld.exe+212B47D: 74 0A                          - je MonsterHunterWorld.exe+212B489
MonsterHunterWorld.exe+212B47F: 83 F9 01                       - cmp ecx,01
MonsterHunterWorld.exe+212B482: 75 27                          - jne MonsterHunterWorld.exe+212B4AB
MonsterHunterWorld.exe+212B484: 8D 51 04                       - lea edx,[rcx+04]
MonsterHunterWorld.exe+212B487: EB 0C                          - jmp MonsterHunterWorld.exe+212B495
MonsterHunterWorld.exe+212B489: BA 04 00 00 00                 - mov edx,00000004
MonsterHunterWorld.exe+212B48E: EB 05                          - jmp MonsterHunterWorld.exe+212B495
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"gunlance 4"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 41 10 0F B6 8B D0 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rcx+10],eax
  mov [rcx+10],1
  movzx ecx,byte ptr [rbx+000023D0]
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 41 10 0F B6 8B D0 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212DC2F

MonsterHunterWorld.exe+212DC05: 48 8B 8B B0 09 00 00  - mov rcx,[rbx+000009B0]
MonsterHunterWorld.exe+212DC0C: 48 85 C9              - test rcx,rcx
MonsterHunterWorld.exe+212DC0F: 74 0F                 - je MonsterHunterWorld.exe+212DC20
MonsterHunterWorld.exe+212DC11: F6 41 0C 0E           - test byte ptr [rcx+0C],0E
MonsterHunterWorld.exe+212DC15: 74 09                 - je MonsterHunterWorld.exe+212DC20
MonsterHunterWorld.exe+212DC17: 48 8B 81 10 78 00 00  - mov rax,[rcx+00007810]
MonsterHunterWorld.exe+212DC1E: EB 02                 - jmp MonsterHunterWorld.exe+212DC22
MonsterHunterWorld.exe+212DC20: 33 C0                 - xor eax,eax
MonsterHunterWorld.exe+212DC22: 48 8B 89 B8 EE 00 00  - mov rcx,[rcx+0000EEB8]
MonsterHunterWorld.exe+212DC29: 8B 80 18 08 00 00     - mov eax,[rax+00000818]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212DC2F: 89 41 10              - mov [rcx+10],eax
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212DC32: 0F B6 8B D0 23 00 00  - movzx ecx,byte ptr [rbx+000023D0]
MonsterHunterWorld.exe+212DC39: 85 C9                 - test ecx,ecx
MonsterHunterWorld.exe+212DC3B: 74 16                 - je MonsterHunterWorld.exe+212DC53
MonsterHunterWorld.exe+212DC3D: 83 E9 01              - sub ecx,01
MonsterHunterWorld.exe+212DC40: 74 0A                 - je MonsterHunterWorld.exe+212DC4C
MonsterHunterWorld.exe+212DC42: 83 F9 01              - cmp ecx,01
MonsterHunterWorld.exe+212DC45: 75 27                 - jne MonsterHunterWorld.exe+212DC6E
MonsterHunterWorld.exe+212DC47: 8D 51 0A              - lea edx,[rcx+0A]
MonsterHunterWorld.exe+212DC4A: EB 0C                 - jmp MonsterHunterWorld.exe+212DC58
MonsterHunterWorld.exe+212DC4C: BA 0A 00 00 00        - mov edx,0000000A
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>68</ID>
      <Description>"gunlance 5"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-18
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,FF 8B 78 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //dec [rbx+00002378]
  mov [rbx+00002378],1
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 8B 78 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212D417

MonsterHunterWorld.exe+212D3DF: 74 7A                    - je MonsterHunterWorld.exe+212D45B
MonsterHunterWorld.exe+212D3E1: BA DE 00 00 00           - mov edx,000000DE
MonsterHunterWorld.exe+212D3E6: E8 45 1D E3 FF           - call MonsterHunterWorld.exe+1F5F130
MonsterHunterWorld.exe+212D3EB: 48 8B 8B B0 09 00 00     - mov rcx,[rbx+000009B0]
MonsterHunterWorld.exe+212D3F2: BA 01 00 00 00           - mov edx,00000001
MonsterHunterWorld.exe+212D3F7: E8 44 01 E3 FF           - call MonsterHunterWorld.exe+1F5D540
MonsterHunterWorld.exe+212D3FC: F3 0F 10 0D 0C 09 DF 00  - movss xmm1,[MonsterHunterWorld.exe+2F1DD10]
MonsterHunterWorld.exe+212D404: 48 8B 8B B0 09 00 00     - mov rcx,[rbx+000009B0]
MonsterHunterWorld.exe+212D40B: E8 C0 01 E3 FF           - call MonsterHunterWorld.exe+1F5D5D0
MonsterHunterWorld.exe+212D410: 48 8B 8B B0 09 00 00     - mov rcx,[rbx+000009B0]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212D417: FF 8B 78 23 00 00        - dec [rbx+00002378]
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212D41D: 88 83 94 25 00 00        - mov [rbx+00002594],al
MonsterHunterWorld.exe+212D423: 80 B9 A8 76 00 00 00     - cmp byte ptr [rcx+000076A8],00
MonsterHunterWorld.exe+212D42A: 74 2F                    - je MonsterHunterWorld.exe+212D45B
MonsterHunterWorld.exe+212D42C: 33 D2                    - xor edx,edx
MonsterHunterWorld.exe+212D42E: E8 3D 15 AD FF           - call MonsterHunterWorld.exe+1BFE970
MonsterHunterWorld.exe+212D433: 41 B9 FF FF FF FF        - mov r9d,FFFFFFFF
MonsterHunterWorld.exe+212D439: 05 5C FF FF FF           - add eax,FFFFFF5C
MonsterHunterWorld.exe+212D43E: 48 8B CB                 - mov rcx,rbx
MonsterHunterWorld.exe+212D441: 45 8B C1                 - mov r8d,r9d
MonsterHunterWorld.exe+212D444: 41 8D 51 21              - lea edx,[r9+21]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"slashaxe 1"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-19
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 81 50 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rcx+00002350],xmm0
  mov [rcx+00002350],42C80000
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 81 50 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212EFB0

MonsterHunterWorld.exe+212EF8B: 48 85 C0                       - test rax,rax
MonsterHunterWorld.exe+212EF8E: 74 62                          - je MonsterHunterWorld.exe+212EFF2
MonsterHunterWorld.exe+212EF90: F6 40 0C 0E                    - test byte ptr [rax+0C],0E
MonsterHunterWorld.exe+212EF94: 74 5C                          - je MonsterHunterWorld.exe+212EFF2
MonsterHunterWorld.exe+212EF96: 48 8B 90 10 78 00 00           - mov rdx,[rax+00007810]
MonsterHunterWorld.exe+212EF9D: 48 85 D2                       - test rdx,rdx
MonsterHunterWorld.exe+212EFA0: 74 50                          - je MonsterHunterWorld.exe+212EFF2
MonsterHunterWorld.exe+212EFA2: 0F 28 C1                       - movaps xmm0,xmm1
MonsterHunterWorld.exe+212EFA5: F3 0F 58 81 50 23 00 00        - addss xmm0,[rcx+00002350]
MonsterHunterWorld.exe+212EFAD: 0F 2F C2                       - comiss xmm0,xmm2
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212EFB0: F3 0F 11 81 50 23 00 00        - movss [rcx+00002350],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+212EFB8: 77 0C                          - ja MonsterHunterWorld.exe+212EFC6
MonsterHunterWorld.exe+212EFBA: C7 81 50 23 00 00 00 00 00 00  - mov [rcx+00002350],00000000
MonsterHunterWorld.exe+212EFC4: EB 1B                          - jmp MonsterHunterWorld.exe+212EFE1
MonsterHunterWorld.exe+212EFC6: 0F BF 82 CC 08 00 00           - movsx eax,word ptr [rdx+000008CC]
MonsterHunterWorld.exe+212EFCD: 66 0F 6E D8                    - movd xmm3,eax
MonsterHunterWorld.exe+212EFD1: 0F 5B DB                       - cvtdq2ps xmm3,xmm3
MonsterHunterWorld.exe+212EFD4: 0F 2F C3                       - comiss xmm0,xmm3
MonsterHunterWorld.exe+212EFD7: 72 08                          - jb MonsterHunterWorld.exe+212EFE1
MonsterHunterWorld.exe+212EFD9: F3 0F 11 99 50 23 00 00        - movss [rcx+00002350],xmm3
MonsterHunterWorld.exe+212EFE1: 0F 2E CA                       - ucomiss xmm1,xmm2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>"charge 1"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-19
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 8B 74 23 00 00 72) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+00002374],ecx
  mov [rbx+00002374],5
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 8B 74 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+21338F1

MonsterHunterWorld.exe+21338CB: C6 83 80 23 00 00 00  - mov byte ptr [rbx+00002380],00
MonsterHunterWorld.exe+21338D2: 83 F8 01              - cmp eax,01
MonsterHunterWorld.exe+21338D5: 77 54                 - ja MonsterHunterWorld.exe+213392B
MonsterHunterWorld.exe+21338D7: 8B 83 74 23 00 00     - mov eax,[rbx+00002374]
MonsterHunterWorld.exe+21338DD: 33 F6                 - xor esi,esi
MonsterHunterWorld.exe+21338DF: 83 E8 01              - sub eax,01
MonsterHunterWorld.exe+21338E2: 8B CE                 - mov ecx,esi
MonsterHunterWorld.exe+21338E4: 0F 57 C0              - xorps xmm0,xmm0
MonsterHunterWorld.exe+21338E7: 0F 49 C8              - cmovns ecx,eax
MonsterHunterWorld.exe+21338EA: 0F 2F 83 70 24 00 00  - comiss xmm0,[rbx+00002470]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+21338F1: 89 8B 74 23 00 00     - mov [rbx+00002374],ecx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+21338F7: 72 09                 - jb MonsterHunterWorld.exe+2133902
MonsterHunterWorld.exe+21338F9: 40 38 B3 74 24 00 00  - cmp [rbx+00002474],sil
MonsterHunterWorld.exe+2133900: 74 29                 - je MonsterHunterWorld.exe+213392B
MonsterHunterWorld.exe+2133902: 85 C9                 - test ecx,ecx
MonsterHunterWorld.exe+2133904: 7E 25                 - jle MonsterHunterWorld.exe+213392B
MonsterHunterWorld.exe+2133906: 48 8B 83 B0 09 00 00  - mov rax,[rbx+000009B0]
MonsterHunterWorld.exe+213390D: 48 85 C0              - test rax,rax
MonsterHunterWorld.exe+2133910: 74 0D                 - je MonsterHunterWorld.exe+213391F
MonsterHunterWorld.exe+2133912: F6 40 0C 0E           - test byte ptr [rax+0C],0E
MonsterHunterWorld.exe+2133916: 74 07                 - je MonsterHunterWorld.exe+213391F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"charge 2"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-19
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,44 89 81 74 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rcx+00002374],r8d
  mov [rcx+00002374],5
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 44 89 81 74 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+2134012

MonsterHunterWorld.exe+2133FF2: 79 07                 - jns MonsterHunterWorld.exe+2133FFB
MonsterHunterWorld.exe+2133FF4: 33 D2                 - xor edx,edx
MonsterHunterWorld.exe+2133FF6: 44 8B C2              - mov r8d,edx
MonsterHunterWorld.exe+2133FF9: EB 14                 - jmp MonsterHunterWorld.exe+213400F
MonsterHunterWorld.exe+2133FFB: 8B 81 74 23 00 00     - mov eax,[rcx+00002374]
MonsterHunterWorld.exe+2134001: 2B C2                 - sub eax,edx
MonsterHunterWorld.exe+2134003: BA 00 00 00 00        - mov edx,00000000
MonsterHunterWorld.exe+2134008: 44 8B C2              - mov r8d,edx
MonsterHunterWorld.exe+213400B: 44 0F 49 C0           - cmovns r8d,eax
MonsterHunterWorld.exe+213400F: 0F 57 C0              - xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+2134012: 44 89 81 74 23 00 00  - mov [rcx+00002374],r8d
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+2134019: 0F 2F 81 70 24 00 00  - comiss xmm0,[rcx+00002470]
MonsterHunterWorld.exe+2134020: 72 09                 - jb MonsterHunterWorld.exe+213402B
MonsterHunterWorld.exe+2134022: 80 B9 74 24 00 00 00  - cmp byte ptr [rcx+00002474],00
MonsterHunterWorld.exe+2134029: 74 2A                 - je MonsterHunterWorld.exe+2134055
MonsterHunterWorld.exe+213402B: 45 85 C0              - test r8d,r8d
MonsterHunterWorld.exe+213402E: 7E 25                 - jle MonsterHunterWorld.exe+2134055
MonsterHunterWorld.exe+2134030: 48 8B 81 B0 09 00 00  - mov rax,[rcx+000009B0]
MonsterHunterWorld.exe+2134037: 48 85 C0              - test rax,rax
MonsterHunterWorld.exe+213403A: 74 0D                 - je MonsterHunterWorld.exe+2134049
MonsterHunterWorld.exe+213403C: F6 40 0C 0E           - test byte ptr [rax+0C],0E
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>84</ID>
      <Description>"charge 3"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-19
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,C7 83 74 23 00 00 00 00 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rbx+00002374],00000000
  mov [rbx+00002374],5
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C7 83 74 23 00 00 00 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+2133DC1

MonsterHunterWorld.exe+2133D8F: 48 8B 05 92 BF ED 02           - mov rax,[MonsterHunterWorld.exe+500FD28]
MonsterHunterWorld.exe+2133D96: 0F B6 88 FF 04 00 00           - movzx ecx,byte ptr [rax+000004FF]
MonsterHunterWorld.exe+2133D9D: 83 C1 05                       - add ecx,05
MonsterHunterWorld.exe+2133DA0: EB 05                          - jmp MonsterHunterWorld.exe+2133DA7
MonsterHunterWorld.exe+2133DA2: B9 05 00 00 00                 - mov ecx,00000005
MonsterHunterWorld.exe+2133DA7: F3 0F 58 B3 78 23 00 00        - addss xmm6,[rbx+00002378]
MonsterHunterWorld.exe+2133DAF: 0F 57 C0                       - xorps xmm0,xmm0
MonsterHunterWorld.exe+2133DB2: 8B C1                          - mov eax,ecx
MonsterHunterWorld.exe+2133DB4: F3 48 0F 2A C0                 - cvtsi2ss xmm0,rax
MonsterHunterWorld.exe+2133DB9: F3 0F 59 87 50 08 00 00        - mulss xmm0,[rdi+00000850]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+2133DC1: C7 83 74 23 00 00 00 00 00 00  - mov [rbx+00002374],00000000
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+2133DCB: F3 0F 11 B3 78 23 00 00        - movss [rbx+00002378],xmm6
MonsterHunterWorld.exe+2133DD3: 0F 2F F0                       - comiss xmm6,xmm0
MonsterHunterWorld.exe+2133DD6: 76 08                          - jna MonsterHunterWorld.exe+2133DE0
MonsterHunterWorld.exe+2133DD8: F3 0F 11 83 78 23 00 00        - movss [rbx+00002378],xmm0
MonsterHunterWorld.exe+2133DE0: 48 8B 5C 24 40                 - mov rbx,[rsp+40]
MonsterHunterWorld.exe+2133DE5: 0F 28 74 24 20                 - movaps xmm6,[rsp+20]
MonsterHunterWorld.exe+2133DEA: 48 83 C4 30                    - add rsp,30
MonsterHunterWorld.exe+2133DEE: 5F                             - pop rdi
MonsterHunterWorld.exe+2133DEF: C3                             - ret 
MonsterHunterWorld.exe+2133DF0: 40 53                          - push rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>115</ID>
      <Description>"bowgun snipe"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 83 60 23 00 00 F3) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rbx+00002360],xmm0
  mov [rbx+00002360],42C80000
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 83 60 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+214D1C8

MonsterHunterWorld.exe+214D18D: F3 0F 11 8B 58 23 00 00  - movss [rbx+00002358],xmm1
MonsterHunterWorld.exe+214D195: 0F B6 87 38 0B 00 00     - movzx eax,byte ptr [rdi+00000B38]
MonsterHunterWorld.exe+214D19C: 39 83 5C 23 00 00        - cmp [rbx+0000235C],eax
MonsterHunterWorld.exe+214D1A2: 7D 62                    - jnl MonsterHunterWorld.exe+214D206
MonsterHunterWorld.exe+214D1A4: 48 8B 83 B0 09 00 00     - mov rax,[rbx+000009B0]
MonsterHunterWorld.exe+214D1AB: F3 0F 10 73 68           - movss xmm6,[rbx+68]
MonsterHunterWorld.exe+214D1B0: 48 8B 88 20 7D 00 00     - mov rcx,[rax+00007D20]
MonsterHunterWorld.exe+214D1B7: E8 94 55 07 FF           - call MonsterHunterWorld.exe+11C2750
MonsterHunterWorld.exe+214D1BC: F3 0F 59 C6              - mulss xmm0,xmm6
MonsterHunterWorld.exe+214D1C0: F3 0F 58 83 60 23 00 00  - addss xmm0,[rbx+00002360]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+214D1C8: F3 0F 11 83 60 23 00 00  - movss [rbx+00002360],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+214D1D0: F3 0F 10 8F 3C 0B 00 00  - movss xmm1,[rdi+00000B3C]
MonsterHunterWorld.exe+214D1D8: 0F 2F C1                 - comiss xmm0,xmm1
MonsterHunterWorld.exe+214D1DB: 72 33                    - jb MonsterHunterWorld.exe+214D210
MonsterHunterWorld.exe+214D1DD: FF 83 5C 23 00 00        - inc [rbx+0000235C]
MonsterHunterWorld.exe+214D1E3: F3 0F 5C C1              - subss xmm0,xmm1
MonsterHunterWorld.exe+214D1E7: F3 0F 11 83 60 23 00 00  - movss [rbx+00002360],xmm0
MonsterHunterWorld.exe+214D1EF: 0F B6 87 38 0B 00 00     - movzx eax,byte ptr [rdi+00000B38]
MonsterHunterWorld.exe+214D1F6: 39 83 5C 23 00 00        - cmp [rbx+0000235C],eax
MonsterHunterWorld.exe+214D1FC: 7E 12                    - jle MonsterHunterWorld.exe+214D210
MonsterHunterWorld.exe+214D1FE: 89 83 5C 23 00 00        - mov [rbx+0000235C],eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>174</ID>
      <Description>"bowgun machingun"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-27
  Author : ichir

  This script does blah blah blah
}

[ENABLE]



aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 91 58 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rcx+00002358],xmm2
  mov [rcx+00002358],42480000
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 91 58 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+214DCE2

MonsterHunterWorld.exe+214DCCA: C3                             - ret 
MonsterHunterWorld.exe+214DCCB: CC                             - int 3 
MonsterHunterWorld.exe+214DCCC: CC                             - int 3 
MonsterHunterWorld.exe+214DCCD: CC                             - int 3 
MonsterHunterWorld.exe+214DCCE: CC                             - int 3 
MonsterHunterWorld.exe+214DCCF: CC                             - int 3 
MonsterHunterWorld.exe+214DCD0: F3 0F 10 91 58 23 00 00        - movss xmm2,[rcx+00002358]
MonsterHunterWorld.exe+214DCD8: 0F 57 C0                       - xorps xmm0,xmm0
MonsterHunterWorld.exe+214DCDB: F3 0F 5C D1                    - subss xmm2,xmm1
MonsterHunterWorld.exe+214DCDF: 0F 2F D0                       - comiss xmm2,xmm0
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+214DCE2: F3 0F 11 91 58 23 00 00        - movss [rcx+00002358],xmm2
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+214DCEA: 77 0A                          - ja MonsterHunterWorld.exe+214DCF6
MonsterHunterWorld.exe+214DCEC: C7 81 58 23 00 00 00 00 00 00  - mov [rcx+00002358],00000000
MonsterHunterWorld.exe+214DCF6: C3                             - ret 
MonsterHunterWorld.exe+214DCF7: CC                             - int 3 
MonsterHunterWorld.exe+214DCF8: CC                             - int 3 
MonsterHunterWorld.exe+214DCF9: CC                             - int 3 
MonsterHunterWorld.exe+214DCFA: CC                             - int 3 
MonsterHunterWorld.exe+214DCFB: CC                             - int 3 
MonsterHunterWorld.exe+214DCFC: CC                             - int 3 
MonsterHunterWorld.exe+214DCFD: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>131</ID>
      <Description>"sword 1"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 87 68 23 00 00 0F 2F BF) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rdi+00002368],xmm0
  mov [rdi+00002368],3F802469
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 87 68 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+21227D0

MonsterHunterWorld.exe+21227A7: EB 1F                    - jmp MonsterHunterWorld.exe+21227C8
MonsterHunterWorld.exe+21227A9: 48 85 C9                 - test rcx,rcx
MonsterHunterWorld.exe+21227AC: 74 0F                    - je MonsterHunterWorld.exe+21227BD
MonsterHunterWorld.exe+21227AE: F6 41 0C 0E              - test byte ptr [rcx+0C],0E
MonsterHunterWorld.exe+21227B2: 74 09                    - je MonsterHunterWorld.exe+21227BD
MonsterHunterWorld.exe+21227B4: 48 8B 81 10 78 00 00     - mov rax,[rcx+00007810]
MonsterHunterWorld.exe+21227BB: EB 03                    - jmp MonsterHunterWorld.exe+21227C0
MonsterHunterWorld.exe+21227BD: 48 8B C6                 - mov rax,rsi
MonsterHunterWorld.exe+21227C0: F3 0F 5E 80 50 08 00 00  - divss xmm0,[rax+00000850]
MonsterHunterWorld.exe+21227C8: F3 0F 58 87 68 23 00 00  - addss xmm0,[rdi+00002368]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+21227D0: F3 0F 11 87 68 23 00 00  - movss [rdi+00002368],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+21227D8: 0F 2F BF 90 23 00 00     - comiss xmm7,[rdi+00002390]
MonsterHunterWorld.exe+21227DF: 76 06                    - jna MonsterHunterWorld.exe+21227E7
MonsterHunterWorld.exe+21227E1: 89 B7 90 23 00 00        - mov [rdi+00002390],esi
MonsterHunterWorld.exe+21227E7: 0F 2F BF 78 23 00 00     - comiss xmm7,[rdi+00002378]
MonsterHunterWorld.exe+21227EE: 76 06                    - jna MonsterHunterWorld.exe+21227F6
MonsterHunterWorld.exe+21227F0: 89 B7 78 23 00 00        - mov [rdi+00002378],esi
MonsterHunterWorld.exe+21227F6: 0F 2F BF 6C 23 00 00     - comiss xmm7,[rdi+0000236C]
MonsterHunterWorld.exe+21227FD: 76 06                    - jna MonsterHunterWorld.exe+2122805
MonsterHunterWorld.exe+21227FF: 89 B7 6C 23 00 00        - mov [rdi+0000236C],esi
MonsterHunterWorld.exe+2122805: F3 0F 10 87 68 23 00 00  - movss xmm0,[rdi+00002368]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"sword 2"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

define(address,"MonsterHunterWorld.exe"+21210EA)
define(bytes,F3 0F 11 B3 68 23 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"MonsterHunterWorld.exe"+21210EA)

label(code)
label(return)

newmem:

code:
  //movss [rbx+00002368],xmm6
  mov [rbx+00002368],3F802469
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rbx+00002368],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+21210EA

MonsterHunterWorld.exe+21210BC: E8 8F 16 0A FF           - call MonsterHunterWorld.exe+11C2750
MonsterHunterWorld.exe+21210C1: F3 0F 59 C7              - mulss xmm0,xmm7
MonsterHunterWorld.exe+21210C5: F3 0F 58 83 68 23 00 00  - addss xmm0,[rbx+00002368]
MonsterHunterWorld.exe+21210CD: EB 0B                    - jmp MonsterHunterWorld.exe+21210DA
MonsterHunterWorld.exe+21210CF: 0F 28 C7                 - movaps xmm0,xmm7
MonsterHunterWorld.exe+21210D2: F3 0F 58 81 68 23 00 00  - addss xmm0,[rcx+00002368]
MonsterHunterWorld.exe+21210DA: 0F 2F C6                 - comiss xmm0,xmm6
MonsterHunterWorld.exe+21210DD: 72 0B                    - jb MonsterHunterWorld.exe+21210EA
MonsterHunterWorld.exe+21210DF: 0F 28 F0                 - movaps xmm6,xmm0
MonsterHunterWorld.exe+21210E2: F3 0F 5D 35 6E CD D2 00  - minss xmm6,[MonsterHunterWorld.exe+2E4DE58]
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+21210EA: F3 0F 11 B3 68 23 00 00  - movss [rbx+00002368],xmm6
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+21210F2: 48 8B 83 B0 09 00 00     - mov rax,[rbx+000009B0]
MonsterHunterWorld.exe+21210F9: 48 85 C0                 - test rax,rax
MonsterHunterWorld.exe+21210FC: 74 0F                    - je MonsterHunterWorld.exe+212110D
MonsterHunterWorld.exe+21210FE: F6 40 0C 0E              - test byte ptr [rax+0C],0E
MonsterHunterWorld.exe+2121102: 74 09                    - je MonsterHunterWorld.exe+212110D
MonsterHunterWorld.exe+2121104: 48 8B 80 10 78 00 00     - mov rax,[rax+00007810]
MonsterHunterWorld.exe+212110B: EB 02                    - jmp MonsterHunterWorld.exe+212110F
MonsterHunterWorld.exe+212110D: 33 C0                    - xor eax,eax
MonsterHunterWorld.exe+212110F: 8B 88 04 08 00 00        - mov ecx,[rax+00000804]
MonsterHunterWorld.exe+2121115: 0F 28 74 24 30           - movaps xmm6,[rsp+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>133</ID>
      <Description>"sword 3"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 91 68 23 00 00 89 81 70 23 00 00 48 8B 81 B0 09 00 00 48 85 C0 74 0D) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rcx+00002368],edx
  mov [rcx+00002368],3F802469
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 91 68 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+212121B

MonsterHunterWorld.exe+21211EF: CC                             - int 3 
MonsterHunterWorld.exe+21211F0: 80 B9 EC 2C 00 00 00           - cmp byte ptr [rcx+00002CEC],00
MonsterHunterWorld.exe+21211F7: 74 61                          - je MonsterHunterWorld.exe+212125A
MonsterHunterWorld.exe+21211F9: FF 81 70 23 00 00              - inc [rcx+00002370]
MonsterHunterWorld.exe+21211FF: BA 03 00 00 00                 - mov edx,00000003
MonsterHunterWorld.exe+2121204: 8B 81 70 23 00 00              - mov eax,[rcx+00002370]
MonsterHunterWorld.exe+212120A: 3B C2                          - cmp eax,edx
MonsterHunterWorld.exe+212120C: C7 81 74 23 00 00 00 00 80 3F  - mov [rcx+00002374],3F800000
MonsterHunterWorld.exe+2121216: 0F 47 C2                       - cmova eax,edx
MonsterHunterWorld.exe+2121219: 33 D2                          - xor edx,edx
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+212121B: 89 91 68 23 00 00              - mov [rcx+00002368],edx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+2121221: 89 81 70 23 00 00              - mov [rcx+00002370],eax
MonsterHunterWorld.exe+2121227: 48 8B 81 B0 09 00 00           - mov rax,[rcx+000009B0]
MonsterHunterWorld.exe+212122E: 48 85 C0                       - test rax,rax
MonsterHunterWorld.exe+2121231: 74 0D                          - je MonsterHunterWorld.exe+2121240
MonsterHunterWorld.exe+2121233: F6 40 0C 0E                    - test byte ptr [rax+0C],0E
MonsterHunterWorld.exe+2121237: 74 07                          - je MonsterHunterWorld.exe+2121240
MonsterHunterWorld.exe+2121239: 48 8B 90 10 78 00 00           - mov rdx,[rax+00007810]
MonsterHunterWorld.exe+2121240: 8B 82 84 08 00 00              - mov eax,[rdx+00000884]
MonsterHunterWorld.exe+2121246: 89 81 90 23 00 00              - mov [rcx+00002390],eax
MonsterHunterWorld.exe+212124C: C6 81 EC 2C 00 00 00           - mov byte ptr [rcx+00002CEC],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>145</ID>
      <Description>"sword 4 ki"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,F3 0F 11 87 74 23 00 00 F3) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //movss [rdi+00002374],xmm0
  mov [rdi+00002374],3F802469
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 87 74 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+21225DD

MonsterHunterWorld.exe+21225AA: F3 0F 5C 40 68           - subss xmm0,[rax+68]
MonsterHunterWorld.exe+21225AF: F3 0F 11 87 90 23 00 00  - movss [rdi+00002390],xmm0
MonsterHunterWorld.exe+21225B7: 0F 2F C7                 - comiss xmm0,xmm7
MonsterHunterWorld.exe+21225BA: 77 29                    - ja MonsterHunterWorld.exe+21225E5
MonsterHunterWorld.exe+21225BC: F6 81 38 89 00 00 01     - test byte ptr [rcx+00008938],01
MonsterHunterWorld.exe+21225C3: 74 20                    - je MonsterHunterWorld.exe+21225E5
MonsterHunterWorld.exe+21225C5: F3 0F 10 87 74 23 00 00  - movss xmm0,[rdi+00002374]
MonsterHunterWorld.exe+21225CD: 48 8B 87 98 09 00 00     - mov rax,[rdi+00000998]
MonsterHunterWorld.exe+21225D4: F3 0F 59 70 68           - mulss xmm6,[rax+68]
MonsterHunterWorld.exe+21225D9: F3 0F 5C C6              - subss xmm0,xmm6
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+21225DD: F3 0F 11 87 74 23 00 00  - movss [rdi+00002374],xmm0
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+21225E5: F3 0F 10 87 78 23 00 00  - movss xmm0,[rdi+00002378]
MonsterHunterWorld.exe+21225ED: 0F 2F C7                 - comiss xmm0,xmm7
MonsterHunterWorld.exe+21225F0: 0F 28 74 24 50           - movaps xmm6,[rsp+50]
MonsterHunterWorld.exe+21225F5: 76 14                    - jna MonsterHunterWorld.exe+212260B
MonsterHunterWorld.exe+21225F7: 48 8B 87 98 09 00 00     - mov rax,[rdi+00000998]
MonsterHunterWorld.exe+21225FE: F3 0F 5C 40 68           - subss xmm0,[rax+68]
MonsterHunterWorld.exe+2122603: F3 0F 11 87 78 23 00 00  - movss [rdi+00002378],xmm0
MonsterHunterWorld.exe+212260B: F3 0F 10 8F 88 23 00 00  - movss xmm1,[rdi+00002388]
MonsterHunterWorld.exe+2122613: 0F 2F CF                 - comiss xmm1,xmm7
MonsterHunterWorld.exe+2122616: 76 14                    - jna MonsterHunterWorld.exe+212262C
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>148</ID>
      <Description>"sword 5 red"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-24
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,89 8F 70 23 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rdi+00002370],ecx
  mov [rdi+00002370],3
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 8F 70 23 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+2121B73

MonsterHunterWorld.exe+2121B48: F6 40 0C 0E                    - test byte ptr [rax+0C],0E
MonsterHunterWorld.exe+2121B4C: 74 07                          - je MonsterHunterWorld.exe+2121B55
MonsterHunterWorld.exe+2121B4E: 48 8B 98 10 78 00 00           - mov rbx,[rax+00007810]
MonsterHunterWorld.exe+2121B55: 8B 83 64 08 00 00              - mov eax,[rbx+00000864]
MonsterHunterWorld.exe+2121B5B: 2B C8                          - sub ecx,eax
MonsterHunterWorld.exe+2121B5D: B8 03 00 00 00                 - mov eax,00000003
MonsterHunterWorld.exe+2121B62: C7 87 74 23 00 00 00 00 80 3F  - mov [rdi+00002374],3F800000
MonsterHunterWorld.exe+2121B6C: 3B C8                          - cmp ecx,eax
MonsterHunterWorld.exe+2121B6E: 0F 47 C8                       - cmova ecx,eax
MonsterHunterWorld.exe+2121B71: B0 01                          - mov al,01
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+2121B73: 89 8F 70 23 00 00              - mov [rdi+00002370],ecx
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+2121B79: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
MonsterHunterWorld.exe+2121B7E: 48 83 C4 20                    - add rsp,20
MonsterHunterWorld.exe+2121B82: 5F                             - pop rdi
MonsterHunterWorld.exe+2121B83: C3                             - ret 
MonsterHunterWorld.exe+2121B84: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
MonsterHunterWorld.exe+2121B89: 32 C0                          - xor al,al
MonsterHunterWorld.exe+2121B8B: 48 83 C4 20                    - add rsp,20
MonsterHunterWorld.exe+2121B8F: 5F                             - pop rdi
MonsterHunterWorld.exe+2121B90: C3                             - ret 
MonsterHunterWorld.exe+2121B91: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"result select"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : MONSTER HUNTER: WORLD(421740)
  Version: 
  Date   : 2024-08-27
  Author : ichir

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,MonsterHunterWorld.exe,44 89 86 A0 30 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  //mov [rsi+000030A0],r8d
  mov [rsi+000030A0],3
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 44 89 86 A0 30 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: MonsterHunterWorld.exe+1094866

MonsterHunterWorld.exe+109483C: 44 38 B6 68 30 00 00  - cmp [rsi+00003068],r14b
MonsterHunterWorld.exe+1094843: 0F 84 83 00 00 00     - je MonsterHunterWorld.exe+10948CC
MonsterHunterWorld.exe+1094849: 8B 86 18 2E 00 00     - mov eax,[rsi+00002E18]
MonsterHunterWorld.exe+109484F: 83 C0 F9              - add eax,-07
MonsterHunterWorld.exe+1094852: 83 F8 03              - cmp eax,03
MonsterHunterWorld.exe+1094855: 77 75                 - ja MonsterHunterWorld.exe+10948CC
MonsterHunterWorld.exe+1094857: 44 8B 86 A0 30 00 00  - mov r8d,[rsi+000030A0]
MonsterHunterWorld.exe+109485E: 45 85 C0              - test r8d,r8d
MonsterHunterWorld.exe+1094861: 7E 0A                 - jle MonsterHunterWorld.exe+109486D
MonsterHunterWorld.exe+1094863: 41 FF C8              - dec r8d
// ---------- INJECTING HERE ----------
MonsterHunterWorld.exe+1094866: 44 89 86 A0 30 00 00  - mov [rsi+000030A0],r8d
// ---------- DONE INJECTING  ----------
MonsterHunterWorld.exe+109486D: 48 8D 15 40 91 E8 01  - lea rdx,[MonsterHunterWorld.exe+2F1D9B4]
MonsterHunterWorld.exe+1094874: 44 88 75 40           - mov [rbp+40],r14b
MonsterHunterWorld.exe+1094878: 48 8D 4D 40           - lea rcx,[rbp+40]
MonsterHunterWorld.exe+109487C: E8 9F 7F 1C FF        - call MonsterHunterWorld.exe+25C820
MonsterHunterWorld.exe+1094881: 48 8B 8E E0 2D 00 00  - mov rcx,[rsi+00002DE0]
MonsterHunterWorld.exe+1094888: 48 8D 55 40           - lea rdx,[rbp+40]
MonsterHunterWorld.exe+109488C: E8 3F F3 82 00        - call MonsterHunterWorld.exe+18C3BD0
MonsterHunterWorld.exe+1094891: 44 39 B6 A0 30 00 00  - cmp [rsi+000030A0],r14d
MonsterHunterWorld.exe+1094898: 75 32                 - jne MonsterHunterWorld.exe+10948CC
MonsterHunterWorld.exe+109489A: 48 8B 8E 50 2C 00 00  - mov rcx,[rsi+00002C50]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+55ABBD</Address>
      <Comment>Put cost into rsp+50 from r15. 
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+5EB2AE</Address>
      <Comment>compare cost with count
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+650C12</Address>
      <Comment>reads currency
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+6611AA</Address>
      <Comment>r12 = playerdi_ph, r13=HumanAI
r8+24 = goal, r8+28 = current
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+67FCA0</Address>
      <Comment>rcx = cable object
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+8D4BC8</Address>
      <Comment>something interesting here maybe
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+9216C5</Address>
      <Comment>something interesgin gmaybe
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+92ED7B</Address>
      <Comment>rbx last value before decrease arrow ammo
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+92EE79</Address>
      <Comment>Read ammo count into edx
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+92EE85</Address>
      <Comment>Decrease ammo count?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+980192</Address>
      <Comment>cost is r14d, eax is how much currency I have
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+9E0B68</Address>
      <Comment>Player position
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+9E0B7A</Address>
      <Comment>Player Position
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+9E0B85</Address>
      <Comment>Player Position
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+9E0BC5</Address>
      <Comment>cable length used into cable object
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+BEEE5F</Address>
      <Comment>Read all skills
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+D01238</Address>
      <Comment>copy cost from r14d to esi
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+E1E647</Address>
      <Comment>Challenge Timer modified
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+E916B3</Address>
      <Comment>crafting cost
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+EC5670</Address>
      <Comment>Read weapon durability nonstop + random
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+11719CD</Address>
      <Comment>nonstop read cable length
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+11719E0</Address>
      <Comment>Max Length of Cable
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+1171A61</Address>
      <Comment>Cable Length Left, xmm0 = length used
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+1173AEC</Address>
      <Comment>rdi - bufftimeInstance struct
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+117C47B</Address>
      <Comment>GuiPlayerLevelTooltip for number of upgrade points
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+141F262</Address>
      <Comment>Maybe something
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+1442F86</Address>
      <Comment>Consumable display
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+14D01B1</Address>
      <Comment>Cost is inserted into r15. 
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+14D02CD</Address>
      <Comment>Jump into code that reads inventory value on cost tooltip
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+1694FAF</Address>
      <Comment>playervalues
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+16B81CE</Address>
      <Comment>Containes Equipped Values?
R10 = 1 on melee item
RBP = 00 or 01
RAX = 00 on throwable (dagger, flare)
R11 = 2000000000000000  - on dagger flare
RDX = 00 on melee
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+16B81D2</Address>
      <Comment>Compare value with ??
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+16C6381</Address>
      <Comment>compare safe values with..
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17A18B0</Address>
      <Comment>If stamina is 174, this value is 1.74. 
Then gets multiplied
rbx = cguiplayerdata 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17AC9B4</Address>
      <Comment>compare bounty goal
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17B5930</Address>
      <Comment>%s - moves DayNightCycle to Rax
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17B5937</Address>
      <Comment>moves cguiworlddata location to rsi
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17B594B</Address>
      <Comment>rax = daynightCycle
+10 value = 0.39
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+17ED1A1</Address>
      <Comment>r14+38=FactionXP, +8=level, rcx=level
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+190803F</Address>
      <Comment>Crafting Subroutine
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+19EAC5B</Address>
      <Comment>inventory code
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"gamedll_ph_x64_rwdi.dll"+B8F1194</Address>
      <Comment>rbx, rdx - new value for ammo
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
