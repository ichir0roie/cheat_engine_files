<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"hp"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-29
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+AFB738)
define(bytes,89 7C 01 30 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+AFB738)

label(code)
label(return)

newmem:

code:
  mov [rcx+rax+30],edi
  //mov [rcx+rax+30],270f
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 4
return:

[DISABLE]

address:
  db bytes
  // mov [rcx+rax+30],edi
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+AFB738

ff7remake_.exe+AFB709: E8 F2 AB 02 00        - call ff7remake_.exe+B26300
ff7remake_.exe+AFB70E: 48 89 05 53 DB CB 04  - mov [ff7remake_.exe+57B9268],rax
ff7remake_.exe+AFB715: 48 8B 80 80 6D 0B 00  - mov rax,[rax+000B6D80]
ff7remake_.exe+AFB71C: 80 FB 08              - cmp bl,08
ff7remake_.exe+AFB71F: 73 1B                 - jae ff7remake_.exe+AFB73C
ff7remake_.exe+AFB721: F6 05 38 DB CB 04 10  - test byte ptr [ff7remake_.exe+57B9260],10
ff7remake_.exe+AFB728: 77 12                 - ja ff7remake_.exe+AFB73C
ff7remake_.exe+AFB72A: 48 8B 80 60 3E 00 00  - mov rax,[rax+00003E60]
ff7remake_.exe+AFB731: 0F B6 CB              - movzx ecx,bl
ff7remake_.exe+AFB734: 48 C1 E1 06           - shl rcx,06
// ---------- INJECTING HERE ----------
ff7remake_.exe+AFB738: 89 7C 01 30           - mov [rcx+rax+30],edi
// ---------- DONE INJECTING  ----------
ff7remake_.exe+AFB73C: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ff7remake_.exe+AFB741: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFB745: 5F                    - pop rdi
ff7remake_.exe+AFB746: C3                    - ret 
ff7remake_.exe+AFB747: CC                    - int 3 
ff7remake_.exe+AFB748: CC                    - int 3 
ff7remake_.exe+AFB749: CC                    - int 3 
ff7remake_.exe+AFB74A: CC                    - int 3 
ff7remake_.exe+AFB74B: CC                    - int 3 
ff7remake_.exe+AFB74C: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"mp"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-30
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+AFB93F)
define(bytes,89 7C 08 38 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+AFB93F)

label(code)
label(return)

newmem:

code:
  mov [rax+rcx+38],edi
  mov [rax+rcx+38],3e7
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 4
return:

[DISABLE]

address:
  db bytes
  // mov [rax+rcx+38],edi
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+AFB93F

ff7remake_.exe+AFB914: 74 08                 - je ff7remake_.exe+AFB91E
ff7remake_.exe+AFB916: 48 8B C8              - mov rcx,rax
ff7remake_.exe+AFB919: E8 E2 A9 02 00        - call ff7remake_.exe+B26300
ff7remake_.exe+AFB91E: 48 89 05 43 D9 CB 04  - mov [ff7remake_.exe+57B9268],rax
ff7remake_.exe+AFB925: 80 FB 08              - cmp bl,08
ff7remake_.exe+AFB928: 73 19                 - jae ff7remake_.exe+AFB943
ff7remake_.exe+AFB92A: 48 8B 80 80 6D 0B 00  - mov rax,[rax+000B6D80]
ff7remake_.exe+AFB931: 0F B6 CB              - movzx ecx,bl
ff7remake_.exe+AFB934: 48 C1 E1 06           - shl rcx,06
ff7remake_.exe+AFB938: 48 8B 80 60 3E 00 00  - mov rax,[rax+00003E60]
// ---------- INJECTING HERE ----------
ff7remake_.exe+AFB93F: 89 7C 08 38           - mov [rax+rcx+38],edi
// ---------- DONE INJECTING  ----------
ff7remake_.exe+AFB943: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ff7remake_.exe+AFB948: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFB94C: 5F                    - pop rdi
ff7remake_.exe+AFB94D: C3                    - ret 
ff7remake_.exe+AFB94E: CC                    - int 3 
ff7remake_.exe+AFB94F: CC                    - int 3 
ff7remake_.exe+AFB950: 40 53                 - push rbx
ff7remake_.exe+AFB952: 48 83 EC 20           - sub rsp,20
ff7remake_.exe+AFB956: 48 8B 05 0B D9 CB 04  - mov rax,[ff7remake_.exe+57B9268]
ff7remake_.exe+AFB95D: 0F B6 D9              - movzx ebx,cl
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"atb"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-30
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+949702)
define(bytes,F3 0F 11 74 08 44)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+949702)

label(code)
label(return)

newmem:

code:
  movss [rax+rcx+44],xmm6
  mov [rax+rcx+44],44fa0000
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+rcx+44],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+949702

ff7remake_.exe+9496D7: 74 08                 - je ff7remake_.exe+9496E1
ff7remake_.exe+9496D9: 48 8B C8              - mov rcx,rax
ff7remake_.exe+9496DC: E8 1F CC 1D 00        - call ff7remake_.exe+B26300
ff7remake_.exe+9496E1: 48 89 05 80 FB E6 04  - mov [ff7remake_.exe+57B9268],rax
ff7remake_.exe+9496E8: 80 FB 08              - cmp bl,08
ff7remake_.exe+9496EB: 73 1B                 - jae ff7remake_.exe+949708
ff7remake_.exe+9496ED: 48 8B 80 80 6D 0B 00  - mov rax,[rax+000B6D80]
ff7remake_.exe+9496F4: 0F B6 CB              - movzx ecx,bl
ff7remake_.exe+9496F7: 48 C1 E1 06           - shl rcx,06
ff7remake_.exe+9496FB: 48 8B 80 60 3E 00 00  - mov rax,[rax+00003E60]
// ---------- INJECTING HERE ----------
ff7remake_.exe+949702: F3 0F 11 74 08 44     - movss [rax+rcx+44],xmm6
// ---------- DONE INJECTING  ----------
ff7remake_.exe+949708: 0F 28 74 24 20        - movaps xmm6,[rsp+20]
ff7remake_.exe+94970D: 48 83 C4 30           - add rsp,30
ff7remake_.exe+949711: 5B                    - pop rbx
ff7remake_.exe+949712: C3                    - ret 
ff7remake_.exe+949713: CC                    - int 3 
ff7remake_.exe+949714: CC                    - int 3 
ff7remake_.exe+949715: CC                    - int 3 
ff7remake_.exe+949716: CC                    - int 3 
ff7remake_.exe+949717: CC                    - int 3 
ff7remake_.exe+949718: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"exp"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-30
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+B355B8)
define(bytes,46 89 44 10 40)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+B355B8)

label(code)
label(return)

newmem:

code:
  add r8d,ffff
  mov [rax+r10+40],r8d
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rax+r10+40],r8d

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+B355B8

ff7remake_.exe+B3558C: 48 83 EC 20           - sub rsp,20
ff7remake_.exe+B35590: 48 8B 81 60 3E 00 00  - mov rax,[rcx+00003E60]
ff7remake_.exe+B35597: 0F B6 DA              - movzx ebx,dl
ff7remake_.exe+B3559A: 44 0F B6 D2           - movzx r10d,dl
ff7remake_.exe+B3559E: 48 8B F9              - mov rdi,rcx
ff7remake_.exe+B355A1: 49 C1 E2 06           - shl r10,06
ff7remake_.exe+B355A5: 48 8D 54 24 48        - lea rdx,[rsp+48]
ff7remake_.exe+B355AA: 48 89 74 24 40        - mov [rsp+40],rsi
ff7remake_.exe+B355AF: 41 0F B6 E9           - movzx ebp,r9b
ff7remake_.exe+B355B3: 4C 89 74 24 50        - mov [rsp+50],r14
// ---------- INJECTING HERE ----------
ff7remake_.exe+B355B8: 46 89 44 10 40        - mov [rax+r10+40],r8d
// ---------- DONE INJECTING  ----------
ff7remake_.exe+B355BD: 4C 8B B1 60 3E 00 00  - mov r14,[rcx+00003E60]
ff7remake_.exe+B355C4: 48 81 C1 58 14 00 00  - add rcx,00001458
ff7remake_.exe+B355CB: 4C 8B 05 C6 3C CD 04  - mov r8,[ff7remake_.exe+5809298]
ff7remake_.exe+B355D2: 4D 03 F2              - add r14,r10
ff7remake_.exe+B355D5: E8 36 F4 B4 FF        - call ff7remake_.exe+684A10
ff7remake_.exe+B355DA: 83 38 FF              - cmp dword ptr [rax],-01
ff7remake_.exe+B355DD: 74 3F                 - je ff7remake_.exe+B3561E
ff7remake_.exe+B355DF: 48 8D 54 24 48        - lea rdx,[rsp+48]
ff7remake_.exe+B355E4: 48 8D 8F 58 14 00 00  - lea rcx,[rdi+00001458]
ff7remake_.exe+B355EB: E8 20 F4 B4 FF        - call ff7remake_.exe+684A10
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"ap"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-30
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+B2BB73)
define(bytes,89 8C 06 38 18 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+B2BB73)

label(code)
label(return)

newmem:

code:
  mov [rsi+rax+00001838],ecx
  add [rsi+rax+00001838],fff
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [rsi+rax+00001838],ecx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+B2BB73

ff7remake_.exe+B2BB4C: 44 88 75 D0              - mov [rbp-30],r14b
ff7remake_.exe+B2BB50: E8 3B 29 00 00           - call ff7remake_.exe+B2E490
ff7remake_.exe+B2BB55: 0F B6 D8                 - movzx ebx,al
ff7remake_.exe+B2BB58: 89 5D D4                 - mov [rbp-2C],ebx
ff7remake_.exe+B2BB5B: 41 80 FE 01              - cmp r14b,01
ff7remake_.exe+B2BB5F: 0F 86 43 01 00 00        - jbe ff7remake_.exe+B2BCA8
ff7remake_.exe+B2BB65: 49 8B 45 10              - mov rax,[r13+10]
ff7remake_.exe+B2BB69: 49 8B F4                 - mov rsi,r12
ff7remake_.exe+B2BB6C: 8B 4D 40                 - mov ecx,[rbp+40]
ff7remake_.exe+B2BB6F: 48 C1 E6 05              - shl rsi,05
// ---------- INJECTING HERE ----------
ff7remake_.exe+B2BB73: 89 8C 06 38 18 00 00     - mov [rsi+rax+00001838],ecx
// ---------- DONE INJECTING  ----------
ff7remake_.exe+B2BB7A: 49 8B 45 10              - mov rax,[r13+10]
ff7remake_.exe+B2BB7E: 0F B6 8C 06 30 18 00 00  - movzx ecx,byte ptr [rsi+rax+00001830]
ff7remake_.exe+B2BB86: 3B CB                    - cmp ecx,ebx
ff7remake_.exe+B2BB88: 74 5B                    - je ff7remake_.exe+B2BBE5
ff7remake_.exe+B2BB8A: 4D 63 75 40              - movsxd  r14,dword ptr [r13+40]
ff7remake_.exe+B2BB8E: 41 8D 46 01              - lea eax,[r14+01]
ff7remake_.exe+B2BB92: 41 89 45 40              - mov [r13+40],eax
ff7remake_.exe+B2BB96: 41 3B 45 44              - cmp eax,[r13+44]
ff7remake_.exe+B2BB9A: 7E 09                    - jle ff7remake_.exe+B2BBA5
ff7remake_.exe+B2BB9C: 49 8D 4D 38              - lea rcx,[r13+38]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"item"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-31
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+B1CBE4)
define(bytes,89 42 0C C7 43 08 FF FF FF FF)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+B1CBE4)

label(code)
label(return)

newmem:

code:
  mov [rdx+0C],eax
  mov [rdx+0C],63
  mov [rbx+08],FFFFFFFF
  jmp return

address:
  jmp newmem
  nop 5
return:

[DISABLE]

address:
  db bytes
  // mov [rdx+0C],eax
  // mov [rbx+08],FFFFFFFF

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+B1CBE4

ff7remake_.exe+B1CBC6: 8B 47 0C              - mov eax,[rdi+0C]
ff7remake_.exe+B1CBC9: 89 41 0C              - mov [rcx+0C],eax
ff7remake_.exe+B1CBCC: 48 8B 5E 48           - mov rbx,[rsi+48]
ff7remake_.exe+B1CBD0: 48 8B 13              - mov rdx,[rbx]
ff7remake_.exe+B1CBD3: 48 85 D2              - test rdx,rdx
ff7remake_.exe+B1CBD6: 74 1E                 - je ff7remake_.exe+B1CBF6
ff7remake_.exe+B1CBD8: 8B 4A 0C              - mov ecx,[rdx+0C]
ff7remake_.exe+B1CBDB: 41 8B C6              - mov eax,r14d
ff7remake_.exe+B1CBDE: 2B 4B 0C              - sub ecx,[rbx+0C]
ff7remake_.exe+B1CBE1: 0F 49 C1              - cmovns eax,ecx
// ---------- INJECTING HERE ----------
ff7remake_.exe+B1CBE4: 89 42 0C              - mov [rdx+0C],eax
// ---------- DONE INJECTING  ----------
ff7remake_.exe+B1CBE7: C7 43 08 FF FF FF FF  - mov [rbx+08],FFFFFFFF
ff7remake_.exe+B1CBEE: 44 89 73 0C           - mov [rbx+0C],r14d
ff7remake_.exe+B1CBF2: 48 8B 5E 48           - mov rbx,[rsi+48]
ff7remake_.exe+B1CBF6: 48 85 DB              - test rbx,rbx
ff7remake_.exe+B1CBF9: 74 25                 - je ff7remake_.exe+B1CC20
ff7remake_.exe+B1CBFB: 48 8B 0D 46 85 CD 04  - mov rcx,[ff7remake_.exe+57F5148]
ff7remake_.exe+B1CC02: 48 85 C9              - test rcx,rcx
ff7remake_.exe+B1CC05: 75 0C                 - jne ff7remake_.exe+B1CC13
ff7remake_.exe+B1CC07: E8 B4 60 10 01        - call ff7remake_.exe+1C22CC0
ff7remake_.exe+B1CC0C: 48 8B 0D 35 85 CD 04  - mov rcx,[ff7remake_.exe+57F5148]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"mog medal"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2023-12-31
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+B20C3F)
define(bytes,89 5A 0C 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+B20C3F)

label(code)
label(return)

newmem:

code:
  mov [rdx+0C],ebx
  mov [rdx+0C],fff
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov [rdx+0C],ebx
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+B20C3F

ff7remake_.exe+B20C1D: 3D FF 07 00 00     - cmp eax,000007FF
ff7remake_.exe+B20C22: 77 1E              - ja ff7remake_.exe+B20C42
ff7remake_.exe+B20C24: 48 05 98 23 00 00  - add rax,00002398
ff7remake_.exe+B20C2A: 48 8D 04 40        - lea rax,[rax+rax*2]
ff7remake_.exe+B20C2E: 48 8D 14 C1        - lea rdx,[rcx+rax*8]
ff7remake_.exe+B20C32: 48 85 D2           - test rdx,rdx
ff7remake_.exe+B20C35: 74 0B              - je ff7remake_.exe+B20C42
ff7remake_.exe+B20C37: 8B 42 0C           - mov eax,[rdx+0C]
ff7remake_.exe+B20C3A: 2B C7              - sub eax,edi
ff7remake_.exe+B20C3C: 0F 49 D8           - cmovns ebx,eax
// ---------- INJECTING HERE ----------
ff7remake_.exe+B20C3F: 89 5A 0C           - mov [rdx+0C],ebx
// ---------- DONE INJECTING  ----------
ff7remake_.exe+B20C42: 48 8B 5C 24 30     - mov rbx,[rsp+30]
ff7remake_.exe+B20C47: 48 8B 74 24 38     - mov rsi,[rsp+38]
ff7remake_.exe+B20C4C: 48 83 C4 20        - add rsp,20
ff7remake_.exe+B20C50: 5F                 - pop rdi
ff7remake_.exe+B20C51: C3                 - ret 
ff7remake_.exe+B20C52: CC                 - int 3 
ff7remake_.exe+B20C53: CC                 - int 3 
ff7remake_.exe+B20C54: CC                 - int 3 
ff7remake_.exe+B20C55: CC                 - int 3 
ff7remake_.exe+B20C56: CC                 - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"mini_game_atb"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2024-01-01
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+11DF211)
define(bytes,F3 0F 11 81 8C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+11DF211)

label(code)
label(return)

newmem:

code:
  movss [rcx+0000008C],xmm0
  add [rcx+0000008C],000f0000
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rcx+0000008C],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+11DF211

ff7remake_.exe+11DF1EF: 0F 57 C0                 - xorps xmm0,xmm0
ff7remake_.exe+11DF1F2: 0F 28 D4                 - movaps xmm2,xmm4
ff7remake_.exe+11DF1F5: F3 0F 59 D5              - mulss xmm2,xmm5
ff7remake_.exe+11DF1F9: F3 0F 58 E9              - addss xmm5,xmm1
ff7remake_.exe+11DF1FD: F3 0F 2C D2              - cvttss2si edx,xmm2
ff7remake_.exe+11DF201: 0F 2F E8                 - comiss xmm5,xmm0
ff7remake_.exe+11DF204: 72 07                    - jb ff7remake_.exe+11DF20D
ff7remake_.exe+11DF206: F3 0F 5D DD              - minss xmm3,xmm5
ff7remake_.exe+11DF20A: 0F 28 C3                 - movaps xmm0,xmm3
ff7remake_.exe+11DF20D: F3 0F 59 E0              - mulss xmm4,xmm0
// ---------- INJECTING HERE ----------
ff7remake_.exe+11DF211: F3 0F 11 81 8C 00 00 00  - movss [rcx+0000008C],xmm0
// ---------- DONE INJECTING  ----------
ff7remake_.exe+11DF219: F3 0F 2C C4              - cvttss2si eax,xmm4
ff7remake_.exe+11DF21D: 3B C2                    - cmp eax,edx
ff7remake_.exe+11DF21F: 7E 03                    - jle ff7remake_.exe+11DF224
ff7remake_.exe+11DF221: B0 01                    - mov al,01
ff7remake_.exe+11DF223: C3                       - ret 
ff7remake_.exe+11DF224: 32 C0                    - xor al,al
ff7remake_.exe+11DF226: C3                       - ret 
ff7remake_.exe+11DF227: CC                       - int 3 
ff7remake_.exe+11DF228: CC                       - int 3 
ff7remake_.exe+11DF229: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2024-01-01
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+B20A8A)
define(bytes,89 5A 0C 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+B20A8A)

label(code)
label(return)

newmem:

code:
  mov [rdx+0C],ebx
  add [rdx+0C],ffff
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov [rdx+0C],ebx
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+B20A8A

ff7remake_.exe+B20A69: 48 8D 04 40        - lea rax,[rax+rax*2]
ff7remake_.exe+B20A6D: 48 8D 14 C1        - lea rdx,[rcx+rax*8]
ff7remake_.exe+B20A71: 48 85 D2           - test rdx,rdx
ff7remake_.exe+B20A74: 74 17              - je ff7remake_.exe+B20A8D
ff7remake_.exe+B20A76: 48 8B 47 10        - mov rax,[rdi+10]
ff7remake_.exe+B20A7A: 48 85 C0           - test rax,rax
ff7remake_.exe+B20A7D: 74 0E              - je ff7remake_.exe+B20A8D
ff7remake_.exe+B20A7F: 8B 80 88 00 00 00  - mov eax,[rax+00000088]
ff7remake_.exe+B20A85: 3B C3              - cmp eax,ebx
ff7remake_.exe+B20A87: 0F 4E D8           - cmovle ebx,eax
// ---------- INJECTING HERE ----------
ff7remake_.exe+B20A8A: 89 5A 0C           - mov [rdx+0C],ebx
// ---------- DONE INJECTING  ----------
ff7remake_.exe+B20A8D: 48 8B 5C 24 30     - mov rbx,[rsp+30]
ff7remake_.exe+B20A92: 48 83 C4 20        - add rsp,20
ff7remake_.exe+B20A96: 5F                 - pop rdi
ff7remake_.exe+B20A97: C3                 - ret 
ff7remake_.exe+B20A98: CC                 - int 3 
ff7remake_.exe+B20A99: CC                 - int 3 
ff7remake_.exe+B20A9A: CC                 - int 3 
ff7remake_.exe+B20A9B: CC                 - int 3 
ff7remake_.exe+B20A9C: CC                 - int 3 
ff7remake_.exe+B20A9D: CC                 - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"attack"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2024-01-02
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+AFBE01)
define(bytes,8B 44 08 48 48 83 C4 20)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+AFBE01)

label(code)
label(return)

newmem:

code:
  mov eax,[rax+rcx+48]
  add eax,eax
  add rsp,20
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov eax,[rax+rcx+48]
  // add rsp,20

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+AFBE01

ff7remake_.exe+AFBDDF: 80 FB 08              - cmp bl,08
ff7remake_.exe+AFBDE2: 72 08                 - jb ff7remake_.exe+AFBDEC
ff7remake_.exe+AFBDE4: 33 C0                 - xor eax,eax
ff7remake_.exe+AFBDE6: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFBDEA: 5B                    - pop rbx
ff7remake_.exe+AFBDEB: C3                    - ret 
ff7remake_.exe+AFBDEC: 48 8B 80 80 6D 0B 00  - mov rax,[rax+000B6D80]
ff7remake_.exe+AFBDF3: 0F B6 CB              - movzx ecx,bl
ff7remake_.exe+AFBDF6: 48 C1 E1 06           - shl rcx,06
ff7remake_.exe+AFBDFA: 48 8B 80 60 3E 00 00  - mov rax,[rax+00003E60]
// ---------- INJECTING HERE ----------
ff7remake_.exe+AFBE01: 8B 44 08 48           - mov eax,[rax+rcx+48]
// ---------- DONE INJECTING  ----------
ff7remake_.exe+AFBE05: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFBE09: 5B                    - pop rbx
ff7remake_.exe+AFBE0A: C3                    - ret 
ff7remake_.exe+AFBE0B: CC                    - int 3 
ff7remake_.exe+AFBE0C: CC                    - int 3 
ff7remake_.exe+AFBE0D: CC                    - int 3 
ff7remake_.exe+AFBE0E: CC                    - int 3 
ff7remake_.exe+AFBE0F: CC                    - int 3 
ff7remake_.exe+AFBE10: 40 53                 - push rbx
ff7remake_.exe+AFBE12: 48 83 EC 20           - sub rsp,20
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"magic attack"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2024-01-03
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+AFBE81)
define(bytes,8B 44 08 4C 48 83 C4 20)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+AFBE81)

label(code)
label(return)

newmem:

code:
  mov eax,[rax+rcx+4C]
  add eax,fff
  add rsp,20
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov eax,[rax+rcx+4C]
  // add rsp,20

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+AFBE81

ff7remake_.exe+AFBE5F: 80 FB 08              - cmp bl,08
ff7remake_.exe+AFBE62: 72 08                 - jb ff7remake_.exe+AFBE6C
ff7remake_.exe+AFBE64: 33 C0                 - xor eax,eax
ff7remake_.exe+AFBE66: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFBE6A: 5B                    - pop rbx
ff7remake_.exe+AFBE6B: C3                    - ret 
ff7remake_.exe+AFBE6C: 48 8B 80 80 6D 0B 00  - mov rax,[rax+000B6D80]
ff7remake_.exe+AFBE73: 0F B6 CB              - movzx ecx,bl
ff7remake_.exe+AFBE76: 48 C1 E1 06           - shl rcx,06
ff7remake_.exe+AFBE7A: 48 8B 80 60 3E 00 00  - mov rax,[rax+00003E60]
// ---------- INJECTING HERE ----------
ff7remake_.exe+AFBE81: 8B 44 08 4C           - mov eax,[rax+rcx+4C]
// ---------- DONE INJECTING  ----------
ff7remake_.exe+AFBE85: 48 83 C4 20           - add rsp,20
ff7remake_.exe+AFBE89: 5B                    - pop rbx
ff7remake_.exe+AFBE8A: C3                    - ret 
ff7remake_.exe+AFBE8B: CC                    - int 3 
ff7remake_.exe+AFBE8C: CC                    - int 3 
ff7remake_.exe+AFBE8D: CC                    - int 3 
ff7remake_.exe+AFBE8E: CC                    - int 3 
ff7remake_.exe+AFBE8F: CC                    - int 3 
ff7remake_.exe+AFBE90: 40 53                 - push rbx
ff7remake_.exe+AFBE92: 48 83 EC 20           - sub rsp,20
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"bike atb"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ff7remake_.exe
  Version: 
  Date   : 2024-01-03
  Author : ichir

  This script does blah blah blah
}

define(address,"ff7remake_.exe"+15941C0)
define(bytes,F3 0F 11 81 D0 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ff7remake_.exe"+15941C0)

label(code)
label(return)

newmem:

code:
  movss [rcx+000001D0],xmm0
  add [rcx+000001D0],000f0000
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rcx+000001D0],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ff7remake_.exe+15941C0

ff7remake_.exe+159419C: 66 0F 6E 91 34 02 00 00  - movd xmm2,[rcx+00000234]
ff7remake_.exe+15941A4: 0F 29 74 24 20           - movaps [rsp+20],xmm6
ff7remake_.exe+15941A9: 0F 57 F6                 - xorps xmm6,xmm6
ff7remake_.exe+15941AC: 0F 5B D2                 - cvtdq2ps xmm2,xmm2
ff7remake_.exe+15941AF: 0F 2F CE                 - comiss xmm1,xmm6
ff7remake_.exe+15941B2: 73 05                    - jae ff7remake_.exe+15941B9
ff7remake_.exe+15941B4: 0F 57 C0                 - xorps xmm0,xmm0
ff7remake_.exe+15941B7: EB 07                    - jmp ff7remake_.exe+15941C0
ff7remake_.exe+15941B9: 0F 28 C2                 - movaps xmm0,xmm2
ff7remake_.exe+15941BC: F3 0F 5D C1              - minss xmm0,xmm1
// ---------- INJECTING HERE ----------
ff7remake_.exe+15941C0: F3 0F 11 81 D0 01 00 00  - movss [rcx+000001D0],xmm0
// ---------- DONE INJECTING  ----------
ff7remake_.exe+15941C8: F3 0F 5E C2              - divss xmm0,xmm2
ff7remake_.exe+15941CC: 0F 2F C6                 - comiss xmm0,xmm6
ff7remake_.exe+15941CF: 72 0B                    - jb ff7remake_.exe+15941DC
ff7remake_.exe+15941D1: 0F 28 F0                 - movaps xmm6,xmm0
ff7remake_.exe+15941D4: F3 0F 5D 35 34 F2 9C 03  - minss xmm6,[ff7remake_.exe+4F63410]
ff7remake_.exe+15941DC: E8 BF B9 E0 FF           - call ff7remake_.exe+139FBA0
ff7remake_.exe+15941E1: 48 8B 80 50 01 00 00     - mov rax,[rax+00000150]
ff7remake_.exe+15941E8: 83 78 10 00              - cmp dword ptr [rax+10],00
ff7remake_.exe+15941EC: 7E 09                    - jle ff7remake_.exe+15941F7
ff7remake_.exe+15941EE: 48 8B 40 08              - mov rax,[rax+08]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
