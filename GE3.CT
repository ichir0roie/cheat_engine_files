<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"st"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-06
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+68B2D1)
define(bytes,F3 0F 58 8B 00 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+68B2D1)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000100],42C80000
  addss xmm1,[rbx+00000100]
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // addss xmm1,[rbx+00000100]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+68B2D1

ge3.exe+68B2A2: F3 0F 58 0D 62 EB 84 01  - addss xmm1,[ge3.exe+1ED9E0C]
ge3.exe+68B2AA: 0F 2F CA                 - comiss xmm1,xmm2
ge3.exe+68B2AD: 73 03                    - jae ge3.exe+68B2B2
ge3.exe+68B2AF: 0F 57 C9                 - xorps xmm1,xmm1
ge3.exe+68B2B2: F3 0F 10 83 04 01 00 00  - movss xmm0,[rbx+00000104]
ge3.exe+68B2BA: 48 8B 74 24 58           - mov rsi,[rsp+58]
ge3.exe+68B2BF: F3 0F 59 CE              - mulss xmm1,xmm6
ge3.exe+68B2C3: 0F 28 74 24 30           - movaps xmm6,[rsp+30]
ge3.exe+68B2C8: F3 0F 59 CF              - mulss xmm1,xmm7
ge3.exe+68B2CC: 0F 28 7C 24 20           - movaps xmm7,[rsp+20]
// ---------- INJECTING HERE ----------
ge3.exe+68B2D1: F3 0F 58 8B 00 01 00 00  - addss xmm1,[rbx+00000100]
// ---------- DONE INJECTING  ----------
ge3.exe+68B2D9: F3 0F 5D C1              - minss xmm0,xmm1
ge3.exe+68B2DD: F3 0F 5F D0              - maxss xmm2,xmm0
ge3.exe+68B2E1: F3 0F 11 93 00 01 00 00  - movss [rbx+00000100],xmm2
ge3.exe+68B2E9: 48 8B 5C 24 50           - mov rbx,[rsp+50]
ge3.exe+68B2EE: 48 83 C4 40              - add rsp,40
ge3.exe+68B2F2: 5F                       - pop rdi
ge3.exe+68B2F3: C3                       - ret 
ge3.exe+68B2F4: CC                       - int 3 
ge3.exe+68B2F5: CC                       - int 3 
ge3.exe+68B2F6: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"op gen"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-06
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+68AEFA)
define(bytes,F3 0F 58 8B F0 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+68AEFA)

label(code)
label(return)

newmem:

code:
  mov [rbx+000000F0],42C80000
  addss xmm1,[rbx+000000F0]
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // addss xmm1,[rbx+000000F0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+68AEFA

ge3.exe+68AEC2: 48 83 EC 30              - sub rsp,30
ge3.exe+68AEC6: C6 44 24 28 00           - mov byte ptr [rsp+28],00
ge3.exe+68AECB: 4C 8D 4C 24 58           - lea r9,[rsp+58]
ge3.exe+68AED0: 44 89 44 24 20           - mov [rsp+20],r8d
ge3.exe+68AED5: 48 8B D9                 - mov rbx,rcx
ge3.exe+68AED8: 4C 8D 44 24 40           - lea r8,[rsp+40]
ge3.exe+68AEDD: C7 44 24 40 00 00 00 00  - mov [rsp+40],00000000
ge3.exe+68AEE5: C7 44 24 58 00 00 00 00  - mov [rsp+58],00000000
ge3.exe+68AEED: E8 2E 00 00 00           - call ge3.exe+68AF20
ge3.exe+68AEF2: F3 0F 10 8B F8 00 00 00  - movss xmm1,[rbx+000000F8]
// ---------- INJECTING HERE ----------
ge3.exe+68AEFA: F3 0F 58 8B F0 00 00 00  - addss xmm1,[rbx+000000F0]
// ---------- DONE INJECTING  ----------
ge3.exe+68AF02: F3 0F 10 44 24 40        - movss xmm0,[rsp+40]
ge3.exe+68AF08: 0F 2F C1                 - comiss xmm0,xmm1
ge3.exe+68AF0B: 0F 96 C0                 - setbe al
ge3.exe+68AF0E: 48 83 C4 30              - add rsp,30
ge3.exe+68AF12: 5B                       - pop rbx
ge3.exe+68AF13: C3                       - ret 
ge3.exe+68AF14: CC                       - int 3 
ge3.exe+68AF15: CC                       - int 3 
ge3.exe+68AF16: CC                       - int 3 
ge3.exe+68AF17: CC                       - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"ammo"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-06
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+3265C3)
define(bytes,66 89 51 28 C3)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+3265C3)

label(code)
label(return)

newmem:

code:
  //mov [rcx+28],dx
  mov [rcx+28],63
  ret 
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [rcx+28],dx
  // ret 

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+3265C3

ge3.exe+3265A2: 66 89 51 28     - mov [rcx+28],dx
ge3.exe+3265A6: C3              - ret 
ge3.exe+3265A7: B8 01 00 00 00  - mov eax,00000001
ge3.exe+3265AC: EB 05           - jmp ge3.exe+3265B3
ge3.exe+3265AE: B8 63 00 00 00  - mov eax,00000063
ge3.exe+3265B3: 66 3B C2        - cmp ax,dx
ge3.exe+3265B6: 66 0F 4E D0     - cmovle dx,ax
ge3.exe+3265BA: 33 C0           - xor eax,eax
ge3.exe+3265BC: 66 3B C2        - cmp ax,dx
ge3.exe+3265BF: 66 0F 4D D0     - cmovge dx,ax
// ---------- INJECTING HERE ----------
ge3.exe+3265C3: 66 89 51 28     - mov [rcx+28],dx
// ---------- DONE INJECTING  ----------
ge3.exe+3265C7: C3              - ret 
ge3.exe+3265C8: CC              - int 3 
ge3.exe+3265C9: CC              - int 3 
ge3.exe+3265CA: CC              - int 3 
ge3.exe+3265CB: CC              - int 3 
ge3.exe+3265CC: CC              - int 3 
ge3.exe+3265CD: CC              - int 3 
ge3.exe+3265CE: CC              - int 3 
ge3.exe+3265CF: CC              - int 3 
ge3.exe+3265D0: 8B 42 04        - mov eax,[rdx+04]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"link burst"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-06
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+326580)
define(bytes,66 03 51 28 83 79 10 13)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+326580)

label(code)
label(return)

newmem:

code:
  mov dx,3
  //add dx,[rcx+28]
  cmp dword ptr [rcx+10],13
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // add dx,[rcx+28]
  // cmp dword ptr [rcx+10],13

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+326580

ge3.exe+326564: B8 63 00 00 00  - mov eax,00000063
ge3.exe+326569: 66 3B C2        - cmp ax,dx
ge3.exe+32656C: 66 0F 4E D0     - cmovle dx,ax
ge3.exe+326570: 33 C0           - xor eax,eax
ge3.exe+326572: 66 3B C2        - cmp ax,dx
ge3.exe+326575: 66 0F 4D D0     - cmovge dx,ax
ge3.exe+326579: 66 89 51 28     - mov [rcx+28],dx
ge3.exe+32657D: C3              - ret 
ge3.exe+32657E: CC              - int 3 
ge3.exe+32657F: CC              - int 3 
// ---------- INJECTING HERE ----------
ge3.exe+326580: 66 03 51 28     - add dx,[rcx+28]
// ---------- DONE INJECTING  ----------
ge3.exe+326584: 83 79 10 13     - cmp dword ptr [rcx+10],13
ge3.exe+326588: 75 24           - jne ge3.exe+3265AE
ge3.exe+32658A: 80 79 14 05     - cmp byte ptr [rcx+14],05
ge3.exe+32658E: 75 17           - jne ge3.exe+3265A7
ge3.exe+326590: 66 39 51 3C     - cmp [rcx+3C],dx
ge3.exe+326594: 66 0F 4E 51 3C  - cmovle dx,[rcx+3C]
ge3.exe+326599: 33 C0           - xor eax,eax
ge3.exe+32659B: 66 3B C2        - cmp ax,dx
ge3.exe+32659E: 66 0F 4D D0     - cmovge dx,ax
ge3.exe+3265A2: 66 89 51 28     - mov [rcx+28],dx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"item"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-20
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+6ACCCE)
define(bytes,89 45 08 45 85 F6)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+6ACCCE)

label(code)
label(return)

newmem:

code:
  //mov [rbp+08],eax
  mov [rbp+08],60
  test r14d,r14d
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rbp+08],eax
  // test r14d,r14d

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+6ACCCE

ge3.exe+6ACCAE: EB 05                 - jmp ge3.exe+6ACCB5
ge3.exe+6ACCB0: B9 E7 03 00 00        - mov ecx,000003E7
ge3.exe+6ACCB5: 0F B7 45 08           - movzx eax,word ptr [rbp+08]
ge3.exe+6ACCB9: 66 41 03 C6           - add ax,r14w
ge3.exe+6ACCBD: 66 3B C8              - cmp cx,ax
ge3.exe+6ACCC0: 66 0F 4E C1           - cmovle ax,cx
ge3.exe+6ACCC4: 33 C9                 - xor ecx,ecx
ge3.exe+6ACCC6: 66 3B C8              - cmp cx,ax
ge3.exe+6ACCC9: 66 0F 4D C1           - cmovge ax,cx
ge3.exe+6ACCCD: 98                    - cwde 
// ---------- INJECTING HERE ----------
ge3.exe+6ACCCE: 89 45 08              - mov [rbp+08],eax
// ---------- DONE INJECTING  ----------
ge3.exe+6ACCD1: 45 85 F6              - test r14d,r14d
ge3.exe+6ACCD4: 7E 46                 - jle ge3.exe+6ACD1C
ge3.exe+6ACCD6: 8B 13                 - mov edx,[rbx]
ge3.exe+6ACCD8: 48 8B 0D 79 4F A5 01  - mov rcx,[ge3.exe+2101C58]
ge3.exe+6ACCDF: E8 CC 90 C5 FF        - call ge3.exe+305DB0
ge3.exe+6ACCE4: 84 C0                 - test al,al
ge3.exe+6ACCE6: 74 34                 - je ge3.exe+6ACD1C
ge3.exe+6ACCE8: 8B 13                 - mov edx,[rbx]
ge3.exe+6ACCEA: 48 8B 0D 67 4F A5 01  - mov rcx,[ge3.exe+2101C58]
ge3.exe+6ACCF1: E8 6A 93 C5 FF        - call ge3.exe+306060
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-20
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+6B2E60)
define(bytes,41 89 09 C3 CC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+6B2E60)

label(code)
label(return)

newmem:

code:
  //mov [r9],ecx
  mov [r9],05F5E0FF
  ret 
  int 3 
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov [r9],ecx
  // ret 
  // int 3 

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+6B2E60

ge3.exe+6B2E41: 45 0F 4E C3  - cmovle r8d,r11d
ge3.exe+6B2E45: 44 89 41 04  - mov [rcx+04],r8d
ge3.exe+6B2E49: 8B 09        - mov ecx,[rcx]
ge3.exe+6B2E4B: B0 01        - mov al,01
ge3.exe+6B2E4D: 03 CA        - add ecx,edx
ge3.exe+6B2E4F: 41 3B CA     - cmp ecx,r10d
ge3.exe+6B2E52: 41 0F 4D CA  - cmovge ecx,r10d
ge3.exe+6B2E56: 41 0F 47 C3  - cmova eax,r11d
ge3.exe+6B2E5A: 85 C9        - test ecx,ecx
ge3.exe+6B2E5C: 41 0F 4E CB  - cmovle ecx,r11d
// ---------- INJECTING HERE ----------
ge3.exe+6B2E60: 41 89 09     - mov [r9],ecx
// ---------- DONE INJECTING  ----------
ge3.exe+6B2E63: C3           - ret 
ge3.exe+6B2E64: CC           - int 3 
ge3.exe+6B2E65: CC           - int 3 
ge3.exe+6B2E66: CC           - int 3 
ge3.exe+6B2E67: CC           - int 3 
ge3.exe+6B2E68: CC           - int 3 
ge3.exe+6B2E69: CC           - int 3 
ge3.exe+6B2E6A: CC           - int 3 
ge3.exe+6B2E6B: CC           - int 3 
ge3.exe+6B2E6C: CC           - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"battle item"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GE3
  Version: 
  Date   : 2024-11-20
  Author : ichir

  This script does blah blah blah
}

define(address,"ge3.exe"+6AF178)
define(bytes,89 43 08 48 8B 5C 24 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"ge3.exe"+6AF178)

label(code)
label(return)

newmem:

code:
  //mov [rbx+08],eax
  mov [rbx+08],5
  mov rbx,[rsp+30]
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov [rbx+08],eax
  // mov rbx,[rsp+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ge3.exe+6AF178

ge3.exe+6AF154: 48 85 C0              - test rax,rax
ge3.exe+6AF157: 74 22                 - je ge3.exe+6AF17B
ge3.exe+6AF159: 0F B7 80 08 01 00 00  - movzx eax,word ptr [rax+00000108]
ge3.exe+6AF160: 0F B7 4B 08           - movzx ecx,word ptr [rbx+08]
ge3.exe+6AF164: 66 FF C9              - dec cx
ge3.exe+6AF167: 66 3B C1              - cmp ax,cx
ge3.exe+6AF16A: 66 0F 4E C8           - cmovle cx,ax
ge3.exe+6AF16E: 66 3B F9              - cmp di,cx
ge3.exe+6AF171: 66 0F 4D CF           - cmovge cx,di
ge3.exe+6AF175: 0F BF C1              - movsx eax,cx
// ---------- INJECTING HERE ----------
ge3.exe+6AF178: 89 43 08              - mov [rbx+08],eax
// ---------- DONE INJECTING  ----------
ge3.exe+6AF17B: 48 8B 5C 24 30        - mov rbx,[rsp+30]
ge3.exe+6AF180: B0 01                 - mov al,01
ge3.exe+6AF182: 48 83 C4 20           - add rsp,20
ge3.exe+6AF186: 5F                    - pop rdi
ge3.exe+6AF187: C3                    - ret 
ge3.exe+6AF188: CC                    - int 3 
ge3.exe+6AF189: CC                    - int 3 
ge3.exe+6AF18A: CC                    - int 3 
ge3.exe+6AF18B: CC                    - int 3 
ge3.exe+6AF18C: CC                    - int 3 
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
