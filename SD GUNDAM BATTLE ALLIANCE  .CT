<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"weapon"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-27
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+1208EF9)
define(bytes,F3 0F 11 83 80 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+1208EF9)

label(code)
label(return)

newmem:

code:
  movss [rbx+00000080],xmm0
  mov [rbx+00000080],42C80000
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rbx+00000080],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+1208EF9

SDGundamBA-Win64-Shipping.exe+1208ED4: FF C6                    - inc esi
SDGundamBA-Win64-Shipping.exe+1208ED6: 83 FE 03                 - cmp esi,03
SDGundamBA-Win64-Shipping.exe+1208ED9: 7C A5                    - jl SDGundamBA-Win64-Shipping.exe+1208E80
SDGundamBA-Win64-Shipping.exe+1208EDB: EB 09                    - jmp SDGundamBA-Win64-Shipping.exe+1208EE6
SDGundamBA-Win64-Shipping.exe+1208EDD: 48 39 9F A8 02 00 00     - cmp [rdi+000002A8],rbx
SDGundamBA-Win64-Shipping.exe+1208EE4: 74 31                    - je SDGundamBA-Win64-Shipping.exe+1208F17
SDGundamBA-Win64-Shipping.exe+1208EE6: F3 0F 10 4B 54           - movss xmm1,[rbx+54]
SDGundamBA-Win64-Shipping.exe+1208EEB: 0F 28 C7                 - movaps xmm0,xmm7
SDGundamBA-Win64-Shipping.exe+1208EEE: F3 0F 58 83 80 00 00 00  - addss xmm0,[rbx+00000080]
SDGundamBA-Win64-Shipping.exe+1208EF6: 0F 2F C1                 - comiss xmm0,xmm1
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+1208EF9: F3 0F 11 83 80 00 00 00  - movss [rbx+00000080],xmm0
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+1208F01: 72 14                    - jb SDGundamBA-Win64-Shipping.exe+1208F17
SDGundamBA-Win64-Shipping.exe+1208F03: 8B 43 48                 - mov eax,[rbx+48]
SDGundamBA-Win64-Shipping.exe+1208F06: 89 43 78                 - mov [rbx+78],eax
SDGundamBA-Win64-Shipping.exe+1208F09: F3 0F 11 8B 80 00 00 00  - movss [rbx+00000080],xmm1
SDGundamBA-Win64-Shipping.exe+1208F11: 66 C7 43 7E 00 00        - mov word ptr [rbx+7E],0000
SDGundamBA-Win64-Shipping.exe+1208F17: 48 8B 74 24 58           - mov rsi,[rsp+58]
SDGundamBA-Win64-Shipping.exe+1208F1C: 48 8B 6C 24 50           - mov rbp,[rsp+50]
SDGundamBA-Win64-Shipping.exe+1208F21: 48 8B 7C 24 60           - mov rdi,[rsp+60]
SDGundamBA-Win64-Shipping.exe+1208F26: 0F 2F 73 74              - comiss xmm6,[rbx+74]
SDGundamBA-Win64-Shipping.exe+1208F2A: 73 22                    - jae SDGundamBA-Win64-Shipping.exe+1208F4E
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"heal item"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-27
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+E69B55)
define(bytes,89 85 B0 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+E69B55)

label(code)
label(return)

newmem:

code:
  //mov [rbp+000001B0],eax
  mov [rbp+000001B0],5
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rbp+000001B0],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+E69B55

SDGundamBA-Win64-Shipping.exe+E69B2B: 48 8B 5C 24 40        - mov rbx,[rsp+40]
SDGundamBA-Win64-Shipping.exe+E69B30: 45 85 F6              - test r14d,r14d
SDGundamBA-Win64-Shipping.exe+E69B33: 7E 26                 - jle SDGundamBA-Win64-Shipping.exe+E69B5B
SDGundamBA-Win64-Shipping.exe+E69B35: 80 BD BA 01 00 00 00  - cmp byte ptr [rbp+000001BA],00
SDGundamBA-Win64-Shipping.exe+E69B3C: 75 1D                 - jne SDGundamBA-Win64-Shipping.exe+E69B5B
SDGundamBA-Win64-Shipping.exe+E69B3E: 8B 8D B0 01 00 00     - mov ecx,[rbp+000001B0]
SDGundamBA-Win64-Shipping.exe+E69B44: B8 00 00 00 00        - mov eax,00000000
SDGundamBA-Win64-Shipping.exe+E69B49: 41 2B CE              - sub ecx,r14d
SDGundamBA-Win64-Shipping.exe+E69B4C: 0F 49 C1              - cmovns eax,ecx
SDGundamBA-Win64-Shipping.exe+E69B4F: FF 85 B4 01 00 00     - inc [rbp+000001B4]
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+E69B55: 89 85 B0 01 00 00     - mov [rbp+000001B0],eax
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+E69B5B: B0 01                 - mov al,01
SDGundamBA-Win64-Shipping.exe+E69B5D: EB 02                 - jmp SDGundamBA-Win64-Shipping.exe+E69B61
SDGundamBA-Win64-Shipping.exe+E69B5F: 32 C0                 - xor al,al
SDGundamBA-Win64-Shipping.exe+E69B61: 48 8B 6C 24 48        - mov rbp,[rsp+48]
SDGundamBA-Win64-Shipping.exe+E69B66: 48 8B 74 24 50        - mov rsi,[rsp+50]
SDGundamBA-Win64-Shipping.exe+E69B6B: 48 83 C4 20           - add rsp,20
SDGundamBA-Win64-Shipping.exe+E69B6F: 41 5F                 - pop r15
SDGundamBA-Win64-Shipping.exe+E69B71: 41 5E                 - pop r14
SDGundamBA-Win64-Shipping.exe+E69B73: 5F                    - pop rdi
SDGundamBA-Win64-Shipping.exe+E69B74: C3                    - ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"c point"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-27
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+F862F5)
define(bytes,89 82 E0 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+F862F5)

label(code)
label(return)

newmem:

code:
  //mov [rdx+000001E0],eax
  mov [rdx+000001E0],fffffff
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rdx+000001E0],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+F862F5

SDGundamBA-Win64-Shipping.exe+F862D2: 48 83 EC 20           - sub rsp,20
SDGundamBA-Win64-Shipping.exe+F862D6: 48 8B D9              - mov rbx,rcx
SDGundamBA-Win64-Shipping.exe+F862D9: 8B 8A E0 01 00 00     - mov ecx,[rdx+000001E0]
SDGundamBA-Win64-Shipping.exe+F862DF: 2B 8B C0 00 00 00     - sub ecx,[rbx+000000C0]
SDGundamBA-Win64-Shipping.exe+F862E5: 79 04                 - jns SDGundamBA-Win64-Shipping.exe+F862EB
SDGundamBA-Win64-Shipping.exe+F862E7: 33 C0                 - xor eax,eax
SDGundamBA-Win64-Shipping.exe+F862E9: EB 0A                 - jmp SDGundamBA-Win64-Shipping.exe+F862F5
SDGundamBA-Win64-Shipping.exe+F862EB: B8 FF C9 9A 3B        - mov eax,3B9AC9FF
SDGundamBA-Win64-Shipping.exe+F862F0: 3B C8                 - cmp ecx,eax
SDGundamBA-Win64-Shipping.exe+F862F2: 0F 4C C1              - cmovl eax,ecx
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+F862F5: 89 82 E0 01 00 00     - mov [rdx+000001E0],eax
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+F862FB: 48 8B 43 28           - mov rax,[rbx+28]
SDGundamBA-Win64-Shipping.exe+F862FF: 44 8B 83 C0 00 00 00  - mov r8d,[rbx+000000C0]
SDGundamBA-Win64-Shipping.exe+F86306: 44 01 40 24           - add [rax+24],r8d
SDGundamBA-Win64-Shipping.exe+F8630A: 8B 8B BC 00 00 00     - mov ecx,[rbx+000000BC]
SDGundamBA-Win64-Shipping.exe+F86310: 48 8B 53 28           - mov rdx,[rbx+28]
SDGundamBA-Win64-Shipping.exe+F86314: 85 C9                 - test ecx,ecx
SDGundamBA-Win64-Shipping.exe+F86316: 78 16                 - js SDGundamBA-Win64-Shipping.exe+F8632E
SDGundamBA-Win64-Shipping.exe+F86318: 41 03 C8              - add ecx,r8d
SDGundamBA-Win64-Shipping.exe+F8631B: 03 4A 28              - add ecx,[rdx+28]
SDGundamBA-Win64-Shipping.exe+F8631E: 79 04                 - jns SDGundamBA-Win64-Shipping.exe+F86324
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"boost"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-27
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+E756D5)
define(bytes,F3 0F 5C CF 0F 2F C8)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+E756D5)

label(code)
label(return)

newmem:

code:
  //subss xmm1,xmm7
  comiss xmm1,xmm0
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // subss xmm1,xmm7
  // comiss xmm1,xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+E756D5

SDGundamBA-Win64-Shipping.exe+E756A5: 0F 84 AC 00 00 00        - je SDGundamBA-Win64-Shipping.exe+E75757
SDGundamBA-Win64-Shipping.exe+E756AB: 48 8B 8B A0 00 00 00     - mov rcx,[rbx+000000A0]
SDGundamBA-Win64-Shipping.exe+E756B2: E8 19 04 17 00           - call SDGundamBA-Win64-Shipping.exe+FE5AD0
SDGundamBA-Win64-Shipping.exe+E756B7: 84 C0                    - test al,al
SDGundamBA-Win64-Shipping.exe+E756B9: 0F 85 98 00 00 00        - jne SDGundamBA-Win64-Shipping.exe+E75757
SDGundamBA-Win64-Shipping.exe+E756BF: 0F 29 74 24 30           - movaps [rsp+30],xmm6
SDGundamBA-Win64-Shipping.exe+E756C4: 0F 57 C0                 - xorps xmm0,xmm0
SDGundamBA-Win64-Shipping.exe+E756C7: F3 0F 10 B3 68 01 00 00  - movss xmm6,[rbx+00000168]
SDGundamBA-Win64-Shipping.exe+E756CF: 40 B7 01                 - mov dil,01
SDGundamBA-Win64-Shipping.exe+E756D2: 0F 28 CE                 - movaps xmm1,xmm6
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+E756D5: F3 0F 5C CF              - subss xmm1,xmm7
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+E756D9: 0F 2F C8                 - comiss xmm1,xmm0
SDGundamBA-Win64-Shipping.exe+E756DC: F3 0F 11 8B 68 01 00 00  - movss [rbx+00000168],xmm1
SDGundamBA-Win64-Shipping.exe+E756E4: 73 13                    - jae SDGundamBA-Win64-Shipping.exe+E756F9
SDGundamBA-Win64-Shipping.exe+E756E6: F3 0F 5F 0D EE 45 E0 02  - maxss xmm1,[SDGundamBA-Win64-Shipping.exe+3C79CDC]
SDGundamBA-Win64-Shipping.exe+E756EE: 40 32 FF                 - xor dil,dil
SDGundamBA-Win64-Shipping.exe+E756F1: F3 0F 11 8B 68 01 00 00  - movss [rbx+00000168],xmm1
SDGundamBA-Win64-Shipping.exe+E756F9: 83 BB F0 03 00 00 00     - cmp dword ptr [rbx+000003F0],00
SDGundamBA-Win64-Shipping.exe+E75700: 74 1A                    - je SDGundamBA-Win64-Shipping.exe+E7571C
SDGundamBA-Win64-Shipping.exe+E75702: 48 8B 8B E8 03 00 00     - mov rcx,[rbx+000003E8]
SDGundamBA-Win64-Shipping.exe+E75709: 48 85 C9                 - test rcx,rcx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"spa"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-28
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+E71AC1)
define(bytes,F3 0F 11 83 7C 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+E71AC1)

label(code)
label(return)

newmem:

code:
  //movss [rbx+0000017C],xmm0
  mov [rbx+0000017C],0
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movss [rbx+0000017C],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+E71AC1

SDGundamBA-Win64-Shipping.exe+E71A93: 7F 16                       - jg SDGundamBA-Win64-Shipping.exe+E71AAB
SDGundamBA-Win64-Shipping.exe+E71A95: 48 8B C8                    - mov rcx,rax
SDGundamBA-Win64-Shipping.exe+E71A98: 48 8B 42 30                 - mov rax,[rdx+30]
SDGundamBA-Win64-Shipping.exe+E71A9C: 4C 39 04 C8                 - cmp [rax+rcx*8],r8
SDGundamBA-Win64-Shipping.exe+E71AA0: 75 09                       - jne SDGundamBA-Win64-Shipping.exe+E71AAB
SDGundamBA-Win64-Shipping.exe+E71AA2: F3 44 0F 10 9F F8 18 00 00  - movss xmm11,[rdi+000018F8]
SDGundamBA-Win64-Shipping.exe+E71AAB: F3 0F 10 83 7C 01 00 00     - movss xmm0,[rbx+0000017C]
SDGundamBA-Win64-Shipping.exe+E71AB3: F3 45 0F 59 D9              - mulss xmm11,xmm9
SDGundamBA-Win64-Shipping.exe+E71AB8: F3 41 0F 5C C3              - subss xmm0,xmm11
SDGundamBA-Win64-Shipping.exe+E71ABD: F3 0F 5F C6                 - maxss xmm0,xmm6
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+E71AC1: F3 0F 11 83 7C 01 00 00     - movss [rbx+0000017C],xmm0
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+E71AC9: 44 0F 28 5C 24 50           - movaps xmm11,[rsp+50]
SDGundamBA-Win64-Shipping.exe+E71ACF: 48 8B CB                    - mov rcx,rbx
SDGundamBA-Win64-Shipping.exe+E71AD2: E8 99 31 17 00              - call SDGundamBA-Win64-Shipping.exe+FE4C70
SDGundamBA-Win64-Shipping.exe+E71AD7: 84 C0                       - test al,al
SDGundamBA-Win64-Shipping.exe+E71AD9: 74 10                       - je SDGundamBA-Win64-Shipping.exe+E71AEB
SDGundamBA-Win64-Shipping.exe+E71ADB: 48 8B 8B A0 00 00 00        - mov rcx,[rbx+000000A0]
SDGundamBA-Win64-Shipping.exe+E71AE2: E8 B9 3D 17 00              - call SDGundamBA-Win64-Shipping.exe+FE58A0
SDGundamBA-Win64-Shipping.exe+E71AE7: 84 C0                       - test al,al
SDGundamBA-Win64-Shipping.exe+E71AE9: 75 54                       - jne SDGundamBA-Win64-Shipping.exe+E71B3F
SDGundamBA-Win64-Shipping.exe+E71AEB: F3 0F 10 8B 98 01 00 00     - movss xmm1,[rbx+00000198]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"item"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SD GUNDAM BATTLE ALLIANCE  
  Version: 
  Date   : 2024-06-27
  Author : ichir

  This script does blah blah blah
}

define(address,"SDGundamBA-Win64-Shipping.exe"+F4717A)
define(bytes,89 59 08 E9 71 FE FF FF)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"SDGundamBA-Win64-Shipping.exe"+F4717A)

label(code)
label(return)

newmem:

code:
  //mov [rcx+08],ebx
  mov [rcx+08],ff
  jmp SDGundamBA-Win64-Shipping.exe+F46FF3
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov [rcx+08],ebx
  // jmp SDGundamBA-Win64-Shipping.exe+F46FF3

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: SDGundamBA-Win64-Shipping.exe+F4717A

SDGundamBA-Win64-Shipping.exe+F4715F: 74 12           - je SDGundamBA-Win64-Shipping.exe+F47173
SDGundamBA-Win64-Shipping.exe+F47161: 8B 41 0C        - mov eax,[rcx+0C]
SDGundamBA-Win64-Shipping.exe+F47164: 83 F8 FF        - cmp eax,-01
SDGundamBA-Win64-Shipping.exe+F47167: 75 E7           - jne SDGundamBA-Win64-Shipping.exe+F47150
SDGundamBA-Win64-Shipping.exe+F47169: 33 C9           - xor ecx,ecx
SDGundamBA-Win64-Shipping.exe+F4716B: 89 59 08        - mov [rcx+08],ebx
SDGundamBA-Win64-Shipping.exe+F4716E: E9 80 FE FF FF  - jmp SDGundamBA-Win64-Shipping.exe+F46FF3
SDGundamBA-Win64-Shipping.exe+F47173: 83 F8 FF        - cmp eax,-01
SDGundamBA-Win64-Shipping.exe+F47176: 75 02           - jne SDGundamBA-Win64-Shipping.exe+F4717A
SDGundamBA-Win64-Shipping.exe+F47178: 33 C9           - xor ecx,ecx
// ---------- INJECTING HERE ----------
SDGundamBA-Win64-Shipping.exe+F4717A: 89 59 08        - mov [rcx+08],ebx
// ---------- DONE INJECTING  ----------
SDGundamBA-Win64-Shipping.exe+F4717D: E9 71 FE FF FF  - jmp SDGundamBA-Win64-Shipping.exe+F46FF3
SDGundamBA-Win64-Shipping.exe+F47182: 48 8B D7        - mov rdx,rdi
SDGundamBA-Win64-Shipping.exe+F47185: 49 8B CE        - mov rcx,r14
SDGundamBA-Win64-Shipping.exe+F47188: E8 23 AD 93 FF  - call SDGundamBA-Win64-Shipping.exe+881EB0
SDGundamBA-Win64-Shipping.exe+F4718D: E9 61 FE FF FF  - jmp SDGundamBA-Win64-Shipping.exe+F46FF3
SDGundamBA-Win64-Shipping.exe+F47192: CC              - int 3 
SDGundamBA-Win64-Shipping.exe+F47193: CC              - int 3 
SDGundamBA-Win64-Shipping.exe+F47194: CC              - int 3 
SDGundamBA-Win64-Shipping.exe+F47195: CC              - int 3 
SDGundamBA-Win64-Shipping.exe+F47196: CC              - int 3 
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
