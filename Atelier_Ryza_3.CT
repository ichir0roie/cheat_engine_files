<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"add ap"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+11D0BE)
define(bytes,89 47 10 E8 AA 05 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+11D0BE)

label(code)
label(return)

newmem:

code:
  add eax,2
  mov [rdi+10],eax
  call Atelier_Ryza_3.exe+11D670
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+10],eax
  // call Atelier_Ryza_3.exe+11D670

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+11D0BE

Atelier_Ryza_3.exe+11D08F: 48 8D 0D B3 4F 73 02     - lea rcx,[Atelier_Ryza_3.exe+2852049]
Atelier_Ryza_3.exe+11D096: E8 85 EF 19 01           - call Atelier_Ryza_3.exe+12BC020
Atelier_Ryza_3.exe+11D09B: 48 8B 47 08              - mov rax,[rdi+08]
Atelier_Ryza_3.exe+11D09F: 4C 8B 80 A8 00 00 00     - mov r8,[rax+000000A8]
Atelier_Ryza_3.exe+11D0A6: 41 80 B8 20 01 00 00 00  - cmp byte ptr [r8+00000120],00
Atelier_Ryza_3.exe+11D0AE: 75 31                    - jne Atelier_Ryza_3.exe+11D0E1
Atelier_Ryza_3.exe+11D0B0: 48 89 5C 24 30           - mov [rsp+30],rbx
Atelier_Ryza_3.exe+11D0B5: 48 8B CF                 - mov rcx,rdi
Atelier_Ryza_3.exe+11D0B8: 8B 5F 10                 - mov ebx,[rdi+10]
Atelier_Ryza_3.exe+11D0BB: 8D 04 33                 - lea eax,[rbx+rsi]
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+11D0BE: 89 47 10                 - mov [rdi+10],eax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+11D0C1: E8 AA 05 00 00           - call Atelier_Ryza_3.exe+11D670
Atelier_Ryza_3.exe+11D0C6: 8B 47 14                 - mov eax,[rdi+14]
Atelier_Ryza_3.exe+11D0C9: 3B D8                    - cmp ebx,eax
Atelier_Ryza_3.exe+11D0CB: 48 8B 5C 24 30           - mov rbx,[rsp+30]
Atelier_Ryza_3.exe+11D0D0: 7D 0F                    - jnl Atelier_Ryza_3.exe+11D0E1
Atelier_Ryza_3.exe+11D0D2: 39 47 10                 - cmp [rdi+10],eax
Atelier_Ryza_3.exe+11D0D5: 75 0A                    - jne Atelier_Ryza_3.exe+11D0E1
Atelier_Ryza_3.exe+11D0D7: B9 14 00 00 00           - mov ecx,00000014
Atelier_Ryza_3.exe+11D0DC: E8 CF D5 06 00           - call Atelier_Ryza_3.exe+18A6B0
Atelier_Ryza_3.exe+11D0E1: 48 8B 74 24 38           - mov rsi,[rsp+38]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"sub ap"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-17
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+11D8E9)
define(bytes,29 7B 10 48 8B CB)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+11D8E9)

label(code)
label(return)

newmem:

code:
  //sub [rbx+10],edi
  sub [rbx+10],2
  mov rcx,rbx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // sub [rbx+10],edi
  // mov rcx,rbx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+11D8E9

Atelier_Ryza_3.exe+11D8C5: 0F B6 4B 18           - movzx ecx,byte ptr [rbx+18]
Atelier_Ryza_3.exe+11D8C9: 48 8B 86 D0 02 00 00  - mov rax,[rsi+000002D0]
Atelier_Ryza_3.exe+11D8D0: 48 8B 74 24 30        - mov rsi,[rsp+30]
Atelier_Ryza_3.exe+11D8D5: 83 78 0C 00           - cmp dword ptr [rax+0C],00
Atelier_Ryza_3.exe+11D8D9: 74 0A                 - je Atelier_Ryza_3.exe+11D8E5
Atelier_Ryza_3.exe+11D8DB: B8 01 00 00 00        - mov eax,00000001
Atelier_Ryza_3.exe+11D8E0: 3B F8                 - cmp edi,eax
Atelier_Ryza_3.exe+11D8E2: 0F 4C F8              - cmovl edi,eax
Atelier_Ryza_3.exe+11D8E5: 84 C9                 - test cl,cl
Atelier_Ryza_3.exe+11D8E7: 74 0B                 - je Atelier_Ryza_3.exe+11D8F4
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+11D8E9: 29 7B 10              - sub [rbx+10],edi
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+11D8EC: 48 8B CB              - mov rcx,rbx
Atelier_Ryza_3.exe+11D8EF: E8 7C FD FF FF        - call Atelier_Ryza_3.exe+11D670
Atelier_Ryza_3.exe+11D8F4: 48 8B 4B 08           - mov rcx,[rbx+08]
Atelier_Ryza_3.exe+11D8F8: 8B D7                 - mov edx,edi
Atelier_Ryza_3.exe+11D8FA: 48 8B 89 E8 00 00 00  - mov rcx,[rcx+000000E8]
Atelier_Ryza_3.exe+11D901: E8 8A 4A 04 00        - call Atelier_Ryza_3.exe+162390
Atelier_Ryza_3.exe+11D906: 48 8B 5C 24 38        - mov rbx,[rsp+38]
Atelier_Ryza_3.exe+11D90B: 48 83 C4 20           - add rsp,20
Atelier_Ryza_3.exe+11D90F: 5F                    - pop rdi
Atelier_Ryza_3.exe+11D910: C3                    - ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"hp"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+9F2949)
define(bytes,89 74 9F 10 85 DB)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+9F2949)

label(code)
label(return)

newmem:

code:
  mov [rdi+rbx*4+10],fff
  test ebx,ebx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+rbx*4+10],esi
  // test ebx,ebx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+9F2949

Atelier_Ryza_3.exe+9F2925: 48 89 74 24 10        - mov [rsp+10],rsi
Atelier_Ryza_3.exe+9F292A: 57                    - push rdi
Atelier_Ryza_3.exe+9F292B: 48 83 EC 20           - sub rsp,20
Atelier_Ryza_3.exe+9F292F: 48 8B F9              - mov rdi,rcx
Atelier_Ryza_3.exe+9F2932: 48 63 DA              - movsxd  rbx,edx
Atelier_Ryza_3.exe+9F2935: 48 8D 0D 80 CF F0 01  - lea rcx,[Atelier_Ryza_3.exe+28FF8BC]
Atelier_Ryza_3.exe+9F293C: 41 8B F0              - mov esi,r8d
Atelier_Ryza_3.exe+9F293F: E8 DC 96 8C 00        - call Atelier_Ryza_3.exe+12BC020
Atelier_Ryza_3.exe+9F2944: 83 FB 5E              - cmp ebx,5E
Atelier_Ryza_3.exe+9F2947: 77 31                 - ja Atelier_Ryza_3.exe+9F297A
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+9F2949: 89 74 9F 10           - mov [rdi+rbx*4+10],esi
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+9F294D: 85 DB                 - test ebx,ebx
Atelier_Ryza_3.exe+9F294F: 74 14                 - je Atelier_Ryza_3.exe+9F2965
Atelier_Ryza_3.exe+9F2951: 83 FB 01              - cmp ebx,01
Atelier_Ryza_3.exe+9F2954: 75 24                 - jne Atelier_Ryza_3.exe+9F297A
Atelier_Ryza_3.exe+9F2956: 44 8B 87 14 01 00 00  - mov r8d,[rdi+00000114]
Atelier_Ryza_3.exe+9F295D: 48 8D 4F 14           - lea rcx,[rdi+14]
Atelier_Ryza_3.exe+9F2961: 33 D2                 - xor edx,edx
Atelier_Ryza_3.exe+9F2963: EB 10                 - jmp Atelier_Ryza_3.exe+9F2975
Atelier_Ryza_3.exe+9F2965: 44 8B 87 10 01 00 00  - mov r8d,[rdi+00000110]
Atelier_Ryza_3.exe+9F296C: 48 8D 4F 10           - lea rcx,[rdi+10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"sp"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+8C4AA4)
define(bytes,29 1D F6 6C 9F 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+8C4AA4)

label(code)
label(return)

newmem:

code:
//  sub [Atelier_Ryza_3.exe+22BB7A0],ebx
  add [Atelier_Ryza_3.exe+22BB7A0],ebx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // sub [Atelier_Ryza_3.exe+22BB7A0],ebx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+8C4AA4

Atelier_Ryza_3.exe+8C4A8B: C3                    - ret 
Atelier_Ryza_3.exe+8C4A8C: CC                    - int 3 
Atelier_Ryza_3.exe+8C4A8D: CC                    - int 3 
Atelier_Ryza_3.exe+8C4A8E: CC                    - int 3 
Atelier_Ryza_3.exe+8C4A8F: CC                    - int 3 
Atelier_Ryza_3.exe+8C4A90: 40 53                 - push rbx
Atelier_Ryza_3.exe+8C4A92: 48 83 EC 20           - sub rsp,20
Atelier_Ryza_3.exe+8C4A96: 8B D9                 - mov ebx,ecx
Atelier_Ryza_3.exe+8C4A98: 48 8D 0D D7 AE 02 02  - lea rcx,[Atelier_Ryza_3.exe+28EF976]
Atelier_Ryza_3.exe+8C4A9F: E8 7C 75 9F 00        - call Atelier_Ryza_3.exe+12BC020
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+8C4AA4: 29 1D F6 6C 9F 01     - sub [Atelier_Ryza_3.exe+22BB7A0],ebx
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+8C4AAA: 48 83 C4 20           - add rsp,20
Atelier_Ryza_3.exe+8C4AAE: 5B                    - pop rbx
Atelier_Ryza_3.exe+8C4AAF: C3                    - ret 
Atelier_Ryza_3.exe+8C4AB0: 48 89 4C 24 08        - mov [rsp+08],rcx
Atelier_Ryza_3.exe+8C4AB5: 53                    - push rbx
Atelier_Ryza_3.exe+8C4AB6: 56                    - push rsi
Atelier_Ryza_3.exe+8C4AB7: 57                    - push rdi
Atelier_Ryza_3.exe+8C4AB8: 41 54                 - push r12
Atelier_Ryza_3.exe+8C4ABA: 41 55                 - push r13
Atelier_Ryza_3.exe+8C4ABC: 41 56                 - push r14
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Auto Assemble script"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+A6D293)
define(bytes,89 05 D3 2B A0 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+A6D293)

label(code)
label(return)

newmem:

code:
  //mov [Atelier_Ryza_3.exe+246FE6C],eax
  add [Atelier_Ryza_3.exe+246FE6C],ff
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [Atelier_Ryza_3.exe+246FE6C],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+A6D293

Atelier_Ryza_3.exe+A6D26F: E8 AC ED 84 00     - call Atelier_Ryza_3.exe+12BC020
Atelier_Ryza_3.exe+A6D274: 8B 0D F2 2B A0 01  - mov ecx,[Atelier_Ryza_3.exe+246FE6C]
Atelier_Ryza_3.exe+A6D27A: B8 7F 96 98 00     - mov eax,XINPUT1_3.dll+967F
Atelier_Ryza_3.exe+A6D27F: 03 CB              - add ecx,ebx
Atelier_Ryza_3.exe+A6D281: 48 63 D1           - movsxd  rdx,ecx
Atelier_Ryza_3.exe+A6D284: 48 3B D0           - cmp rdx,rax
Atelier_Ryza_3.exe+A6D287: 48 0F 4F D0        - cmovg rdx,rax
Atelier_Ryza_3.exe+A6D28B: 33 C0              - xor eax,eax
Atelier_Ryza_3.exe+A6D28D: 48 85 D2           - test rdx,rdx
Atelier_Ryza_3.exe+A6D290: 0F 49 C2           - cmovns eax,edx
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+A6D293: 89 05 D3 2B A0 01  - mov [Atelier_Ryza_3.exe+246FE6C],eax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+A6D299: 48 83 C4 20        - add rsp,20
Atelier_Ryza_3.exe+A6D29D: 5B                 - pop rbx
Atelier_Ryza_3.exe+A6D29E: C3                 - ret 
Atelier_Ryza_3.exe+A6D29F: CC                 - int 3 
Atelier_Ryza_3.exe+A6D2A0: 48 89 5C 24 10     - mov [rsp+10],rbx
Atelier_Ryza_3.exe+A6D2A5: 48 89 74 24 18     - mov [rsp+18],rsi
Atelier_Ryza_3.exe+A6D2AA: 48 89 7C 24 20     - mov [rsp+20],rdi
Atelier_Ryza_3.exe+A6D2AF: 89 4C 24 08        - mov [rsp+08],ecx
Atelier_Ryza_3.exe+A6D2B3: 55                 - push rbp
Atelier_Ryza_3.exe+A6D2B4: 48 8D 6C 24 A9     - lea rbp,[rsp-57]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"cc"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+130B93)
define(bytes,F3 0F 58 D6 0F 2F D3)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+130B93)

label(code)
label(return)

newmem:

code:
  addss xmm2,xmm6
  addss xmm2,xmm6
  //addss xmm2,xmm6
  //addss xmm2,xmm6
  //addss xmm2,xmm6
  //addss xmm2,xmm6
  comiss xmm2,xmm3
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // addss xmm2,xmm6
  // comiss xmm2,xmm3

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+130B93

Atelier_Ryza_3.exe+130B69: 73 51                 - jae Atelier_Ryza_3.exe+130BBC
Atelier_Ryza_3.exe+130B6B: F3 0F 10 53 38        - movss xmm2,[rbx+38]
Atelier_Ryza_3.exe+130B70: F3 0F 10 5B 40        - movss xmm3,[rbx+40]
Atelier_Ryza_3.exe+130B75: 0F 28 C2              - movaps xmm0,xmm2
Atelier_Ryza_3.exe+130B78: F3 0F 5C C3           - subss xmm0,xmm3
Atelier_Ryza_3.exe+130B7C: 0F 5A C8              - cvtps2pd xmm1,xmm0
Atelier_Ryza_3.exe+130B7F: 0F 54 0D BA 98 26 01  - andps xmm1,[Atelier_Ryza_3.exe+139A440]
Atelier_Ryza_3.exe+130B86: 66 0F 5A C1           - cvtpd2ps xmm0,xmm1
Atelier_Ryza_3.exe+130B8A: 0F 2F 05 77 98 26 01  - comiss xmm0,[Atelier_Ryza_3.exe+139A408]
Atelier_Ryza_3.exe+130B91: 72 29                 - jb Atelier_Ryza_3.exe+130BBC
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+130B93: F3 0F 58 D6           - addss xmm2,xmm6
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+130B97: 0F 2F D3              - comiss xmm2,xmm3
Atelier_Ryza_3.exe+130B9A: F3 0F 11 53 38        - movss [rbx+38],xmm2
Atelier_Ryza_3.exe+130B9F: 76 05                 - jna Atelier_Ryza_3.exe+130BA6
Atelier_Ryza_3.exe+130BA1: F3 0F 11 5B 38        - movss [rbx+38],xmm3
Atelier_Ryza_3.exe+130BA6: 48 8B CB              - mov rcx,rbx
Atelier_Ryza_3.exe+130BA9: E8 62 0E 00 00        - call Atelier_Ryza_3.exe+131A10
Atelier_Ryza_3.exe+130BAE: 84 C0                 - test al,al
Atelier_Ryza_3.exe+130BB0: 74 0A                 - je Atelier_Ryza_3.exe+130BBC
Atelier_Ryza_3.exe+130BB2: B9 15 00 00 00        - mov ecx,00000015
Atelier_Ryza_3.exe+130BB7: E8 F4 9A 05 00        - call Atelier_Ryza_3.exe+18A6B0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"core shard"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-15
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+A6FC2B)
define(bytes,89 0D 0F 03 A0 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+A6FC2B)

label(code)
label(return)

newmem:

code:
  add ecx,ecx
  mov [Atelier_Ryza_3.exe+246FF40],ecx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [Atelier_Ryza_3.exe+246FF40],ecx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+A6FC2B

Atelier_Ryza_3.exe+A6FC0A: 03 CB                          - add ecx,ebx
Atelier_Ryza_3.exe+A6FC0C: 81 F9 9F 86 01 00              - cmp ecx,0001869F
Atelier_Ryza_3.exe+A6FC12: 7C 10                          - jl Atelier_Ryza_3.exe+A6FC24
Atelier_Ryza_3.exe+A6FC14: C7 05 22 03 A0 01 9F 86 01 00  - mov [Atelier_Ryza_3.exe+246FF40],0001869F
Atelier_Ryza_3.exe+A6FC1E: 48 83 C4 20                    - add rsp,20
Atelier_Ryza_3.exe+A6FC22: 5B                             - pop rbx
Atelier_Ryza_3.exe+A6FC23: C3                             - ret 
Atelier_Ryza_3.exe+A6FC24: 33 C0                          - xor eax,eax
Atelier_Ryza_3.exe+A6FC26: 85 C9                          - test ecx,ecx
Atelier_Ryza_3.exe+A6FC28: 0F 4E C8                       - cmovle ecx,eax
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+A6FC2B: 89 0D 0F 03 A0 01              - mov [Atelier_Ryza_3.exe+246FF40],ecx
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+A6FC31: 48 83 C4 20                    - add rsp,20
Atelier_Ryza_3.exe+A6FC35: 5B                             - pop rbx
Atelier_Ryza_3.exe+A6FC36: C3                             - ret 
Atelier_Ryza_3.exe+A6FC37: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC38: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC39: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC3A: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC3B: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC3C: CC                             - int 3 
Atelier_Ryza_3.exe+A6FC3D: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"status"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-17
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+9EE7E2)
define(bytes,48 8B CD E8 46 07 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+9EE7E2)

label(code)
label(return)

newmem:

code:
  add [rbp+00000118],30//atk
  //add [rbp+0000011C],8f//def
  add [rbp+00000120],270F//spd
  mov rcx,rbp
  call Atelier_Ryza_3.exe+9EEF30
  jmp return

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // mov rcx,rbp
  // call Atelier_Ryza_3.exe+9EEF30

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+9EE7E2

Atelier_Ryza_3.exe+9EE7BA: 48 89 47 08                    - mov [rdi+08],rax
Atelier_Ryza_3.exe+9EE7BE: E8 BD 7B 78 FF                 - call Atelier_Ryza_3.exe+176380
Atelier_Ryza_3.exe+9EE7C3: 48 89 07                       - mov [rdi],rax
Atelier_Ryza_3.exe+9EE7C6: 48 83 C7 10                    - add rdi,10
Atelier_Ryza_3.exe+9EE7CA: 49 83 EE 01                    - sub r14,01
Atelier_Ryza_3.exe+9EE7CE: 75 E2                          - jne Atelier_Ryza_3.exe+9EE7B2
Atelier_Ryza_3.exe+9EE7D0: 48 8D 54 24 20                 - lea rdx,[rsp+20]
Atelier_Ryza_3.exe+9EE7D5: 48 8B CD                       - mov rcx,rbp
Atelier_Ryza_3.exe+9EE7D8: E8 F3 0C 00 00                 - call Atelier_Ryza_3.exe+9EF4D0
Atelier_Ryza_3.exe+9EE7DD: 48 8D 54 24 20                 - lea rdx,[rsp+20]
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+9EE7E2: 48 8B CD                       - mov rcx,rbp
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+9EE7E5: E8 46 07 00 00                 - call Atelier_Ryza_3.exe+9EEF30
Atelier_Ryza_3.exe+9EE7EA: 66 0F 6E 75 08                 - movd xmm6,[rbp+08]
Atelier_Ryza_3.exe+9EE7EF: 0F 5B F6                       - cvtdq2ps xmm6,xmm6
Atelier_Ryza_3.exe+9EE7F2: 0F 1F 40 00                    - nop dword ptr [rax+00]
Atelier_Ryza_3.exe+9EE7F6: 66 66 0F 1F 84 00 00 00 00 00  - nop word ptr [rax+rax+00000000]
Atelier_Ryza_3.exe+9EE800: 4C 8D 8C 24 B8 00 00 00        - lea r9,[rsp+000000B8]
Atelier_Ryza_3.exe+9EE808: 44 89 B4 24 B0 00 00 00        - mov [rsp+000000B0],r14d
Atelier_Ryza_3.exe+9EE810: 4C 8D 84 24 B0 00 00 00        - lea r8,[rsp+000000B0]
Atelier_Ryza_3.exe+9EE818: 44 89 B4 24 B8 00 00 00        - mov [rsp+000000B8],r14d
Atelier_Ryza_3.exe+9EE820: BA AE 00 00 00                 - mov edx,000000AE
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-17
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+A6F5F5)
define(bytes,01 1D BD 08 A0 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+A6F5F5)

label(code)
label(return)

newmem:

code:
  //add [Atelier_Ryza_3.exe+246FEB8],ebx
  mov ebx,[Atelier_Ryza_3.exe+246FEB8]
  add [Atelier_Ryza_3.exe+246FEB8],ebx
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // add [Atelier_Ryza_3.exe+246FEB8],ebx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+A6F5F5

Atelier_Ryza_3.exe+A6F5CE: 7D 12                          - jnl Atelier_Ryza_3.exe+A6F5E2
Atelier_Ryza_3.exe+A6F5D0: 8D 04 19                       - lea eax,[rcx+rbx]
Atelier_Ryza_3.exe+A6F5D3: 8B D3                          - mov edx,ebx
Atelier_Ryza_3.exe+A6F5D5: 89 05 DD 08 A0 01              - mov [Atelier_Ryza_3.exe+246FEB8],eax
Atelier_Ryza_3.exe+A6F5DB: B9 09 00 00 00                 - mov ecx,00000009
Atelier_Ryza_3.exe+A6F5E0: EB 22                          - jmp Atelier_Ryza_3.exe+A6F604
Atelier_Ryza_3.exe+A6F5E2: C7 05 CC 08 A0 01 3F 42 0F 00  - mov [Atelier_Ryza_3.exe+246FEB8],000F423F
Atelier_Ryza_3.exe+A6F5EC: 8B D3                          - mov edx,ebx
Atelier_Ryza_3.exe+A6F5EE: B9 09 00 00 00                 - mov ecx,00000009
Atelier_Ryza_3.exe+A6F5F3: EB 0F                          - jmp Atelier_Ryza_3.exe+A6F604
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+A6F5F5: 01 1D BD 08 A0 01              - add [Atelier_Ryza_3.exe+246FEB8],ebx
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+A6F5FB: 8B D3                          - mov edx,ebx
Atelier_Ryza_3.exe+A6F5FD: F7 DA                          - neg edx
Atelier_Ryza_3.exe+A6F5FF: B9 08 00 00 00                 - mov ecx,00000008
Atelier_Ryza_3.exe+A6F604: 45 33 C0                       - xor r8d,r8d
Atelier_Ryza_3.exe+A6F607: E8 E4 EE FD FF                 - call Atelier_Ryza_3.exe+A4E4F0
Atelier_Ryza_3.exe+A6F60C: 40 84 FF                       - test dil,dil
Atelier_Ryza_3.exe+A6F60F: 74 0A                          - je Atelier_Ryza_3.exe+A6F61B
Atelier_Ryza_3.exe+A6F611: B9 99 04 00 00                 - mov ecx,00000499
Atelier_Ryza_3.exe+A6F616: E8 25 E1 C7 FF                 - call Atelier_Ryza_3.exe+6ED740
Atelier_Ryza_3.exe+A6F61B: 8B 05 97 08 A0 01              - mov eax,[Atelier_Ryza_3.exe+246FEB8]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"coin"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Atelier_Ryza_3.exe
  Version: 
  Date   : 2023-10-17
  Author : ichir

  This script does blah blah blah
}

define(address,"Atelier_Ryza_3.exe"+A6F585)
define(bytes,89 05 35 09 A0 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Atelier_Ryza_3.exe"+A6F585)

label(code)
label(return)

newmem:

code:
  add eax,eax
  mov [Atelier_Ryza_3.exe+246FEC0],eax
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [Atelier_Ryza_3.exe+246FEC0],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Atelier_Ryza_3.exe+A6F585

Atelier_Ryza_3.exe+A6F562: 7E 15                          - jle Atelier_Ryza_3.exe+A6F579
Atelier_Ryza_3.exe+A6F564: C7 05 52 09 A0 01 3F 42 0F 00  - mov [Atelier_Ryza_3.exe+246FEC0],000F423F
Atelier_Ryza_3.exe+A6F56E: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
Atelier_Ryza_3.exe+A6F573: 48 83 C4 20                    - add rsp,20
Atelier_Ryza_3.exe+A6F577: 5F                             - pop rdi
Atelier_Ryza_3.exe+A6F578: C3                             - ret 
Atelier_Ryza_3.exe+A6F579: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
Atelier_Ryza_3.exe+A6F57E: 33 C9                          - xor ecx,ecx
Atelier_Ryza_3.exe+A6F580: 85 C0                          - test eax,eax
Atelier_Ryza_3.exe+A6F582: 0F 48 C1                       - cmovs eax,ecx
// ---------- INJECTING HERE ----------
Atelier_Ryza_3.exe+A6F585: 89 05 35 09 A0 01              - mov [Atelier_Ryza_3.exe+246FEC0],eax
// ---------- DONE INJECTING  ----------
Atelier_Ryza_3.exe+A6F58B: 48 83 C4 20                    - add rsp,20
Atelier_Ryza_3.exe+A6F58F: 5F                             - pop rdi
Atelier_Ryza_3.exe+A6F590: C3                             - ret 
Atelier_Ryza_3.exe+A6F591: CC                             - int 3 
Atelier_Ryza_3.exe+A6F592: CC                             - int 3 
Atelier_Ryza_3.exe+A6F593: CC                             - int 3 
Atelier_Ryza_3.exe+A6F594: CC                             - int 3 
Atelier_Ryza_3.exe+A6F595: CC                             - int 3 
Atelier_Ryza_3.exe+A6F596: CC                             - int 3 
Atelier_Ryza_3.exe+A6F597: CC                             - int 3 
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
